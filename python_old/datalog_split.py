import sys
import re
import pprint
import os
#import string
from string import *
import time

# This program will split a datalog into different files for easier reading.
# Each "module" must be delimited by 3 asterisks/dashes (*-*-*).  The script will place these modules in different files.
# Also, if a word is placed on the same line as the asterisks/dashes, then that name will be included in the file name for that section
# Example datalog....
#
#     >*-*-* opens_shorts
#     >opens
#     >blah, blah
#     >shorts
#     >blah, blah
#     >*-*-* datarow
#     >blah, blah
#     >*-*-*
#     >blah, blah
#     >*-*-*

# This script will separate the above into three files:  001_opens_shorts.txt, 002_datarow.txt, and 003.txt
# Notice that if no name is next to the asterisks/dashes, then only the file number (001,002, etc) will be used.

__PROGRAM_NAME__ = "Datalog Splitter"
__AUTHOR__ = "AUTHOR: Roger Logan, Anora Solutions, Test Engineer, Houston, TX"
__DATEMODIFIED__ = "LAST MODIFIED: April 20, 2011"
__VERSION__ = " v1.0"
__PROGFILE__ = "datalog_split.py"
__INPUTFILE__ = "<datalog.txt>" #modify to deliminate modules with 3 asterisks/dashes (*-*-*), must contain a valid envision signal header

__DEBUG__ = 0

class TextException(Exception): pass

#-----------------------------------------------------------------------
#   main
#-----------------------------------------------------------------------
def main():
    
    # Get the arguments from the command line, except the first one.
    args = sys.argv[1:]
    if len(args) != 1:
        print "usage: "+__PROGFILE__+" "+__INPUTFILE__
        sys.exit(-1)
    
    localtime = time.asctime(time.localtime(time.time()))
    
    header = "\"This file was generated by: "+__PROGFILE__+__VERSION__+" from a Polaris datalog\"\n\""+__AUTHOR__+"\"\n\"CREATION DATE: "+str(localtime)+"\"\n\n"
    
    os.system('clear')
    print '\n\n'

    infile = open(args[0], 'r')
    content = infile.read()
    infile.close()
    contents = content.split('*-*-*')
    n=0
    newfiles=[]
    for mod in contents:
        namePat=re.compile("\s(?P<name>.*?)\n")
        nameObj=namePat.search(mod)
        if nameObj:name=strip(nameObj.group('name'))
        else:name="noname"
        mod=mod.strip()
        if len(mod)<=len(name): continue #skip if there is only the name or nothing
        n=n+1
        num = "%03d" % n
        outfilename = num+"_"+name+".txt"
        outfile = open(outfilename, "w")
        outfile.write(header+mod)
        outfile.close()
        newfiles.append(outfilename)
    #End for

    print '\n\n'
    print __PROGRAM_NAME__+" "+__VERSION__
    print __AUTHOR__
    print __DATEMODIFIED__
    print "SUCCESS!!! NEW FILE(S) CREATED:\n"+join(newfiles,'\n')+"\n\n"


#End main()
#-----------------------------------------------------------------------
#     BEGIN MAIN
#-----------------------------------------------------------------------
if __name__ == '__main__':
    main()
