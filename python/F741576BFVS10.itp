{ HISTORY
  WARNING! PIN LOAD OR SOURCE TYPES HAVE BEEN FOUND FOR THIS DEVICE WHICH
           AUTOGEN DOES NOT RECOGNIZE.  DEFAULT CMOS TYPE LEVELS &
           TESTING MAY BE USED. CHECK THE FOLLOWING TYPES IN THE
           PROGRAM FOR LEVELS & TEST METHOD:

    TESTINA AOUT
}
program F741576B_75917508;
(*
************************************************************************
*   0.15UM CMOS STANDARD CELL/GATE ARRAY GS30 SINGLE TEST PROGRAM AT INDUSTRIAL
*
*   DEVICE TYPE = F741576B              FAMILY       = GS30
*
*   PROGRAM ID  = 759175        PROGRAM DATE = Thu Apr 25 18:15:11 2002
*
*   REVISION    = 08
*
*   PRODUCTION ENGINEER : Alan Williams
*
*   PROTOTYPE  ENGINEER : Alan Williams
*
*   CUSTOMER            :  Lucent Technologies Network Systems GmbH
*   CUSTOMER PRINT      :
*   CUSTOMER PEAF       :
*
*   PERF BOARD = PF01-12137 Millennium PROG CARD   = PG01-     -
*   HT   BOARD = HT01-     -           TEST SYSTEM = V-SERIES
*
************************************************************************
*
*   AUTOGEN VERSION      = 5.1.0
*   VERSION DATE         = 8/18/2000
*   AUTOGEN RELEASE      = PROD
*
*   DEVICE TYPE          = F741576B
*   TECHNOLOGY           = 0.15UM CMOS STANDARD CELL/GATE ARRAY
*   FAMILY               = GS30
*   PROGRAM TYPE         = SINGLE
*   TEMPERATURE          = INDUSTRIAL
*   MAXIMUM FREQUENCY    = 666.67MHZ
*   TEST SYSTEM          = V-SERIES
*   PACKAGE SIZE         = 520
*   PACKAGE TYPE         = GNP
*   PERF BOARD           = DUMMY
*
*   CUSTSPEC REVISION    = 3.00
*   CUSTSPEC DATE/TIME   = 04/12/2002 13:40:24
*
*   HANDOFF PACKAGE      = LAST
*   ARCHIVE REVISION     = LAST
*   HANDOFF DATE         =
*   HANDOFF STATE        =
*   HANDOFF ORIGINATOR   =
*   HDL FILE NAME        = Not used
*   CUSTOMER SPEC        = f741576b.msf
*   TDL DIRECTORY        = /data/pe4/awil/f741576b
*   TDL FILE NAME        = tdl.BIST.1.00.gz tdl.BURNIN.2.00.gz
*     tdl.DLP53_1.2.00.gz tdl.DLP53_11.2.00.gz tdl.DLP53_12.2.00.gz
*     tdl.DLP53_13.2.00.gz tdl.DLP53_14.2.00.gz tdl.DLP53_16.2.00.gz
*     tdl.DLP53_17.2.00.gz tdl.DLP53_18.2.00.gz tdl.DLP53_19.2.00.gz
*     tdl.DLP53_2.2.00.gz tdl.DLP53_3.2.00.gz tdl.DLP53_4.2.00.gz
*     tdl.DLP53_6.2.00.gz tdl.DLP53_7.2.00.gz tdl.DLP53_8.2.00.gz
*     tdl.DLP53_9.2.00.gz tdl.IDQ.2.00.gz tdl.LU.1.00.gz tdl.RX_1_1.2.00.gz
*     tdl.RX_622_3305.2.00.gz tdl.RX_622_6610.2.00.gz tdl.RX_SLOW.2.00.gz
*     tdl.Scan_AC1.1.00.gz tdl.Scan_AC2.1.00.gz tdl.Scan_AC3.1.00.gz
*     tdl.Scan_AC4.1.00.gz tdl.Scanchk.1.00.gz tdl.TC_PLL.1.01.gz
*     tdl.TC_PLL50.1.00.gz tdl.TC_PLL83.2.00.gz tdl.TX_1_1.1.00.gz
*     tdl.TX_1_10.1.00.gz tdl.TX_1_11.1.00.gz tdl.TX_1_12.1.00.gz
*     tdl.TX_1_13.1.00.gz tdl.TX_1_14.1.00.gz tdl.TX_1_15.1.00.gz
*     tdl.TX_1_16.1.00.gz tdl.TX_1_17.1.00.gz tdl.TX_1_18.1.00.gz
*     tdl.TX_1_19.1.00.gz tdl.TX_1_2.1.00.gz tdl.TX_1_3.1.00.gz
*     tdl.TX_1_4.1.00.gz tdl.TX_1_5.1.00.gz tdl.TX_1_6.1.00.gz
*     tdl.TX_1_7.1.00.gz tdl.TX_1_8.1.00.gz tdl.TX_1_9.1.00.gz
*     tdl.TX_2.1.00.gz tdl.TX_3.1.00.gz tdl.VBOX_ALL.1.00.gz tdl.clv.1.02.gz
*     tdl.dch.1.01.gz tdl.dch_all.1.00.gz tdl.die.1.01.gz tdl.hzv.1.02.gz
*     tdl.pat_1_tclk3_tdl.1.00.gz tdl.pat_1_tclk5_tdl.1.00.gz
*     tdl.pat_2_tclk3_tdl.1.00.gz tdl.pat_3_tclk3_tdl.1.00.gz
*     tdl.pat_4_tclk3_tdl.1.00.gz tdl.pat_5_tclk3_tdl.1.00.gz tdl.tdv.2.02.gz
*     tdl.tgl.1.02.gz tdl.thr.1.02.gz
*
*   EXTENDED EMZDI       = YES
*   SPC INCLUDED         = YES
*   GOI INCLUDED         = TRUE
*
*   GENERATED BY         = Alan Williams
*   DATE GENERATED       = Thu Apr 25 18:15:11 2002
*
*
*
*   AUTOGEN EXCEPTIONS:
*
* STATUS  autogen front-end version 1.02
* STATUS  autogen release PROD
* STATUS  autogen version 5.1.0
* STATUS  autogen version date 8/18/2000
* WARNING certification issue: user_parm_file_custspec_filename=f741576b
* .msf
* WARNING *** Supply VSS in ASSOCIATION TABLE not found in vcc list.
* WARNING *** Unknown output class (null) for cell CK814A.
* WARNING *** Unknown output class (null) for cell TG001.
* WARNING *** Clamp Diode field not found for pin D2G7_OUTP(0). Default
* to B.
* WARNING *** Clamp Diode field not found for pin C1G35_INN. Default to
* B.
* WARNING *** Clamp Diode field not found for pin C1G35_OUTN. Default to
*  B.
* WARNING *** Clamp Diode field not found for pin D2G7_OUTN(3). Default
* to B.
* WARNING *** Clamp Diode field not found for pin P2G7_OUTN. Default to
* B.
* WARNING *** Clamp Diode field not found for pin VBIASLVDSIA1. Default
* to B.
* WARNING *** Clamp Diode field not found for pin VBIASLVDSIB1. Default
* to B.
* WARNING *** Clamp Diode field not found for pin VBIASLVDSIA. Default t
* o B.
* WARNING *** Clamp Diode field not found for pin VBIASLVDSIB. Default t
* o B.
* WARNING *** Clamp Diode field not found for pin D2G7_OUTN(0). Default
* to B.
* WARNING *** Clamp Diode field not found for pin C1G35_INP. Default to
* B.
* WARNING *** Clamp Diode field not found for pin C1G35_OUTP. Default to
*  B.
* WARNING *** Clamp Diode field not found for pin D2G7_OUTP(3). Default
* to B.
* WARNING *** Clamp Diode field not found for pin P2G7_OUTP. Default to
* B.
* WARNING *** Clamp Diode field not found for pin D2G7_OUTP(1). Default
* to B.
* WARNING *** Clamp Diode field not found for pin D2G7_OUTP(2). Default
* to B.
* WARNING *** Clamp Diode field not found for pin D2G7_OUTN(1). Default
* to B.
* WARNING *** Clamp Diode field not found for pin D2G7_OUTN(2). Default
* to B.
* WARNING *** Clamp Diode field not found for pin VDDTXBIAS. Default to
* B.
* WARNING *** Clamp Diode field not found for pin VBIASLVDSOA. Default t
* o B.
* WARNING *** Clamp Diode field not found for pin VBIASLVDSOB. Default t
* o B.
* WARNING *** Source/drive current for cell GNDLF2T5C0W0 not found.
* WARNING *** Source/drive current for cell OUKB3 not found.
* WARNING *** Source/drive current for cell OPD083 not found.
* WARNING *** Source/drive current for cell CK814A not found.
* WARNING *** Source/drive current for cell OUK83 not found.
* WARNING certification issue: command_line_tdl_filename=tdl.BIST.1.00.g
* z tdl.BURNIN.2.00.gz tdl.DLP53_1.2.00.gz tdl.DLP53_11.2.00.gz tdl.DLP5
* 3_12.2.00.gz tdl.DLP53_13.2.00.gz tdl.DLP53_14.2.00.gz tdl.DLP53_16.2.
* 00.gz tdl.DLP53_17.2.00.gz tdl.DLP53_18.2.00.gz tdl.DLP53_19.2.00.gz t
* dl.DLP53_2.2.00.gz tdl.DLP53_3.2.00.gz tdl.DLP53_4.2.00.gz tdl.DLP53_6
* .2.00.gz tdl.DLP53_7.2.00.gz tdl.DLP53_8.2.00.gz tdl.DLP53_9.2.00.gz t
* dl.IDQ.2.00.gz tdl.LU.1.00.gz tdl.RX_1_1.2.00.gz tdl.RX_622_3305.2.00.
* gz tdl.RX_622_6610.2.00.gz tdl.RX_SLOW.2.00.gz tdl.Scan_AC1.1.00.gz td
* l.Scan_AC2.1.00.gz tdl.Scan_AC3.1.00.gz tdl.Scan_AC4.1.00.gz tdl.Scanc
* hk.1.00.gz tdl.TC_PLL.1.01.gz tdl.TC_PLL50.1.00.gz tdl.TC_PLL83.2.00.g
* z tdl.TX_1_1.1.00.gz tdl.TX_1_10.1.00.gz tdl.TX_1_11.1.00.gz tdl.TX_1_
* 12.1.00.gz tdl.TX_1_13.1.00.gz tdl.TX_1_14.1.00.gz tdl.TX_1_15.1.00.gz
*  tdl.TX_1_16.1.00.gz tdl.TX_1_17.1.00.gz tdl.TX_1_18.1.00.gz tdl.TX_1_
* 19.1.00.gz tdl.TX_1_2.1.00.gz tdl.TX_1_3.1.00.gz tdl.TX_1_4.1.00.gz td
* l.TX_1_5.1.00.gz tdl.TX_1_6.1.00.gz tdl.TX_1_7.1.00.gz tdl.TX_1_8.1.00
* .gz tdl.TX_1_9.1.00.gz tdl.TX_2.1.00.gz tdl.TX_3.1.00.gz tdl.VBOX_ALL.
* 1.00.gz tdl.clv.1.02.gz tdl.dch.1.01.gz tdl.dch_all.1.00.gz tdl.die.1.
* 01.gz tdl.hzv.1.02.gz tdl.pat_1_tclk3_tdl.1.00.gz tdl.pat_1_tclk5_tdl.
* 1.00.gz tdl.pat_2_tclk3_tdl.1.00.gz tdl.pat_3_tclk3_tdl.1.00.gz tdl.pa
* t_4_tclk3_tdl.1.00.gz tdl.pat_5_tclk3_tdl.1.00.gz tdl.tdv.2.02.gz tdl.
* tgl.1.02.gz tdl.thr.1.02.gz
* WARNING
* WARNING File: 'tdl.RX_SLOW.2.00'.
* WARNING (21466):CLKPINS VAR = ( "T_CLK(0)" ),
* ERROR   ***------------------------^ ERROR : ';' expected.
* WARNING
* WARNING File: 'tdl.die.1.01'.
* WARNING (00389):NUMBITS=64, BITORDER VAR=(LSBFIRST,HLBUILD)";
* WARNING ***-------------------------------------------------^
* WARNING    WARNING: DieID Test is not implemented in Autogen. You will
*  have to add it manually.
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin C1G35
* _OUTP(B18)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin C1G35
* _OUTP(B18)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin C1G35
* _OUTN(A18)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin C1G35
* _OUTN(A18)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin P2G7_
* OUTP(B20)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin P2G7_
* OUTP(B20)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin P2G7_
* OUTN(A20)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin P2G7_
* OUTN(A20)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin D2G7_
* OUTP(3)(B19)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin D2G7_
* OUTP(3)(B19)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin D2G7_
* OUTP(2)(C15)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin D2G7_
* OUTP(2)(C15)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin D2G7_
* OUTP(1)(C14)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin D2G7_
* OUTP(1)(C14)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin D2G7_
* OUTP(0)(A13)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin D2G7_
* OUTP(0)(A13)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin D2G7_
* OUTN(3)(A19)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin D2G7_
* OUTN(3)(A19)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin D2G7_
* OUTN(2)(D15)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin D2G7_
* OUTN(2)(D15)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin D2G7_
* OUTN(1)(D14)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin D2G7_
* OUTN(1)(D14)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin D2G7_
* OUTN(0)(B13)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin D2G7_
* OUTN(0)(B13)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  MODE2G7(A22)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  MODE2G7(A22)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  D5_HCH_RX_PAR(D10)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  D5_HCH_RX_PAR(D10)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  D5_HCH_RX(7)(A9)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  D5_HCH_RX(7)(A9)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  D5_HCH_RX(6)(E10)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  D5_HCH_RX(6)(E10)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  D5_HCH_RX(5)(B9)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  D5_HCH_RX(5)(B9)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  D5_HCH_RX(4)(C9)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  D5_HCH_RX(4)(C9)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  D5_HCH_RX(3)(D9)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  D5_HCH_RX(3)(D9)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  D5_HCH_RX(2)(A8)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  D5_HCH_RX(2)(A8)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  D5_HCH_RX(1)(E9)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  D5_HCH_RX(1)(E9)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  D5_HCH_RX(0)(B8)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  D5_HCH_RX(0)(B8)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  D10_BXI_RX(C10)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  D10_BXI_RX(C10)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  CICLK(E22)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  CICLK(E22)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  CIINF(7)(B25)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  CIINF(7)(B25)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  CIINF(6)(E24)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  CIINF(6)(E24)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  CIINF(5)(A25)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  CIINF(5)(A25)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  CIINF(4)(D24)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  CIINF(4)(D24)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  CIINF(3)(C24)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  CIINF(3)(C24)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  CIINF(2)(B24)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  CIINF(2)(B24)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  CIINF(1)(E23)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  CIINF(1)(E23)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  CIINF(0)(A24)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  CIINF(0)(A24)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  AISINSMSOH(H4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  AISINSMSOH(H4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(15)(J5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(15)(J5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(14)(J4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(14)(J4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(13)(J2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(13)(J2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(12)(J1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(12)(J1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(11)(K3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(11)(K3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(10)(K1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(10)(K1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(9)(L3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(9)(L3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(8)(M5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(8)(M5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(7)(M3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(7)(M3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(6)(M1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(6)(M1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(5)(N4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(5)(N4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(4)(N2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(4)(N2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(3)(P5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(3)(P5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(2)(P3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(2)(P3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(1)(P1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(1)(P1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIO OFF for pin
*  GPIO(0)(R4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIO OFF for pin
*  GPIO(0)(R4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  BYPASS_PLL(U1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  BYPASS_PLL(U1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN ON for pin
* THZ_N(D8)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THZ_N(D8)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THZ_N(D8)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_SET_BD2IN(C6)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_SET_BD2IN(C6)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_DISARST(AG4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_DISARST(AG4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(13)(AE3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(13)(AE3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(12)(B4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(12)(B4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(11)(B6)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(11)(B6)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(10)(AA3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(10)(AA3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(9)(AA2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(9)(AA2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(8)(Y5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(8)(Y5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(7)(Y4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(7)(Y4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(6)(Y3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(6)(Y3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(5)(Y2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(5)(Y2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(4)(Y1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(4)(Y1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(3)(W5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(3)(W5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(2)(W4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(2)(W4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(1)(W3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(1)(W3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T_CLK(0)(W2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T_CLK(0)(W2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TM_SCAN(H3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TM_SCAN(H3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TE_SCAN(R2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TE_SCAN(R2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TSCI(7)(AC2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TSCI(7)(AC2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TSCI(6)(AB5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TSCI(6)(AB5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TSCI(5)(AC1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TSCI(5)(AC1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TSCI(4)(AB4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TSCI(4)(AB4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TSCI(3)(AB3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TSCI(3)(AB3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TSCI(2)(AB2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TSCI(2)(AB2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TSCI(1)(AB1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TSCI(1)(AB1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TSCI(0)(AA4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TSCI(0)(AA4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TDI(D2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TDI(D2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TMS(C5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TMS(C5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TRSTN(E4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TRSTN(E4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TBIST_RUN(U2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TBIST_RUN(U2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TBIST_ROT(AC4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TBIST_ROT(AC4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TM_RAM(U3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TM_RAM(U3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TM_PLL(AE27)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TM_PLL(AE27)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TPLL_TEST1(R1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TPLL_TEST1(R1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TM_HSI(AK28)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TM_HSI(AK28)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_BYPASS(1)(AF4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_BYPASS(1)(AF4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_BYPASS(0)(AF27)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_BYPASS(0)(AF27)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_SEL0(1)(AF28)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_SEL0(1)(AF28)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_SEL0(0)(AG30)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_SEL0(0)(AG30)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_SEL1(1)(AF5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_SEL1(1)(AF5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_SEL1(0)(AG2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_SEL1(0)(AG2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_PWRDN(AJ27)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_PWRDN(AJ27)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  RSTZ_HSI(AG26)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  RSTZ_HSI(AG26)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_OPEN(AG3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_OPEN(AG3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(15)(AE2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(15)(AE2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(14)(AD5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(14)(AD5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(13)(AE1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(13)(AE1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(12)(AD4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(12)(AD4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(11)(AD3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(11)(AD3)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(10)(AD2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(10)(AD2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(9)(AC5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(9)(AC5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(8)(AD1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(8)(AD1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(7)(AH26)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(7)(AH26)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(6)(AL27)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(6)(AL27)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(5)(AJ26)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(5)(AJ26)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(4)(AG25)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(4)(AG25)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(3)(AK26)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(3)(AK26)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(2)(AH25)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(2)(AH25)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(1)(AJ25)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(1)(AJ25)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TESTSELZ(0)(AK25)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TESTSELZ(0)(AK25)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_STANDBY(AH2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_STANDBY(AH2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_CKGEN(1)(AF2)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_CKGEN(1)(AF2)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_CKGEN(0)(AG31)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_CKGEN(0)(AG31)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_SEL_EN(1)(AG1)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_SEL_EN(1)(AG1)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_SEL_EN(0)(AF29)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_SEL_EN(0)(AF29)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_ACC_START(AE4)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_ACC_START(AE4)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_RESYNCHZ(AE5)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_RESYNCHZ(AE5)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TC78_SEL(AF3)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TC78_SEL(AF3)
* WARNING **** WARNING: Cannot find PM stop to perform VOL for pin THSI_
* OUTA(AG7)
* WARNING **** WARNING: Cannot find PM stop to perform VOH for pin THSI_
* OUTA(AG7)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_P2S(C26)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_P2S(C26)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  BYPASS_HSI_PLL(D25)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  BYPASS_HSI_PLL(D25)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  RSTZ_SHSI(E25)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  RSTZ_SHSI(E25)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  THSI_RP_BYPASS(B26)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  THSI_RP_BYPASS(B26)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T2G7_BYPASS(D20)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T2G7_BYPASS(D20)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T2G7_PRE_EMP0(D21)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T2G7_PRE_EMP0(D21)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T2G7_PRE_EMP1(C21)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T2G7_PRE_EMP1(C21)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  TM_SHSI(E20)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  TM_SHSI(E20)
* WARNING **** WARNING: Cannot find PM stop to perform ILPIN OFF for pin
*  T2G7_TDI(B21)
* WARNING **** WARNING: Cannot find PM stop to perform IHPIN OFF for pin
*  T2G7_TDI(B21)
* WARNING **** WARNING: ICCQ PM stop 10 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 11 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 12 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 13 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 14 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 15 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 16 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 17 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 18 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 19 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 20 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 21 has pins with pullups driving lo
* w
* WARNING **** WARNING: ICCQ PM stop 22 has pins with pullups driving lo
* w
* WARNING
* WARNING File: 'tdl.RX_1_1.2.00'.
* WARNING (00639):ASIC_TEST = "FREQ INTERVAL=100US, TO="THSI_OUTD(0)",LI
* MIT=83.3MHz,REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.RX_1_1.2.00'.
* WARNING (00646):ASIC_TEST = "FREQ INTERVAL=100US, TO="THSI_OUTD(1)",LI
* MIT=83.3MHz,REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.RX_622_3305.2.00'.
* WARNING (15410):CLKPINS VAR  = ( "T_CLK(0)" ),
* ERROR   ***ERROR : ';' expected.----^
* WARNING
* WARNING File: 'tdl.RX_622_6610.2.00'.
* WARNING (15412):CLKPINS VAR = ( "T_CLK(0)" ),
* ERROR   ***------------------------^ ERROR : ';' expected.
* WARNING
* WARNING File: 'tdl.TC_PLL50.1.00'.
* WARNING (00317):             LIMIT=25MHz,REJECT=YES";
* WARNING ***-----------------------------------------^
* WARNING    WARNING: Frequency Test is not implemented in Autogen. You
* will have to add it manually.
* WARNING
* WARNING File: 'tdl.TC_PLL50.1.00'.
* WARNING (00325):             LIMIT=25MHz,REJECT=YES";
* WARNING ***-----------------------------------------^
* WARNING    WARNING: Frequency Test is not implemented in Autogen. You
* will have to add it manually.
* WARNING
* WARNING File: 'tdl.TC_PLL83.2.00'.
* WARNING (00318):             LIMIT=82.5MHz,REJECT=YES";
* WARNING ***-------------------------------------------^
* WARNING    WARNING: Frequency Test is not implemented in Autogen. You
* will have to add it manually.
* WARNING
* WARNING File: 'tdl.TC_PLL83.2.00'.
* WARNING (00326):             LIMIT=82.5MHz,REJECT=YES";
* WARNING ***-------------------------------------------^
* WARNING    WARNING: Frequency Test is not implemented in Autogen. You
* will have to add it manually.
* WARNING
* WARNING File: 'tdl.TX_1_1.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO=C6XX_OUTP, LIMIT=
* 666MHz, REJECT=YES";
* WARNING ***-----------------------------------------------------------
* -------------------^
* WARNING    WARNING: Frequency Test is not implemented in Autogen. You
* will have to add it manually.
* WARNING
* WARNING File: 'tdl.TX_1_1.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO=C6XX_OUTN, LIMIT=
* 666MHz, REJECT=YES";
* WARNING ***-----------------------------------------------------------
* -------------------^
* WARNING    WARNING: Frequency Test is not implemented in Autogen. You
* will have to add it manually.
* WARNING
* WARNING File: 'tdl.TX_1_10.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(9)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_10.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(9)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_11.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(8)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_11.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(8)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_12.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(7)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_12.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(7)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_13.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(6)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_13.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(6)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_14.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(5)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_14.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(5)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_15.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(4)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_15.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(4)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_16.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(3)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_16.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(3)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_17.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(2)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_17.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(2)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_18.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(1)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_18.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(1)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_19.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(0)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_19.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(0)", L
* IMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_2.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO=C167_155_OUTP, LI
* MIT=333MHz, REJECT=YES";
* WARNING ***-----------------------------------------------------------
* -----------------------^
* WARNING    WARNING: Frequency Test is not implemented in Autogen. You
* will have to add it manually.
* WARNING
* WARNING File: 'tdl.TX_1_2.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO=C167_155_OUTN, LI
* MIT=333MHz, REJECT=YES";
* WARNING ***-----------------------------------------------------------
* -----------------------^
* WARNING    WARNING: Frequency Test is not implemented in Autogen. You
* will have to add it manually.
* WARNING
* WARNING File: 'tdl.TX_1_3.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO=PAR_6XX_OUTP, LIM
* IT=333MHz, REJECT=YES";
* WARNING ***-----------------------------------------------------------
* ----------------------^
* WARNING    WARNING: Frequency Test is not implemented in Autogen. You
* will have to add it manually.
* WARNING
* WARNING File: 'tdl.TX_1_3.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO=PAR_6XX_OUTN, LIM
* IT=333MHz, REJECT=YES";
* WARNING ***-----------------------------------------------------------
* ----------------------^
* WARNING    WARNING: Frequency Test is not implemented in Autogen. You
* will have to add it manually.
* WARNING
* WARNING File: 'tdl.TX_1_4.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(15)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_4.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(15)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_5.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(14)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_5.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(14)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_6.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(13)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_6.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(13)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_7.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(12)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_7.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(12)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_8.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(11)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_8.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(11)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_9.1.00'.
* WARNING (00706):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTP(10)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_1_9.1.00'.
* WARNING (00713):ASIC_TEST = "FREQ INTERVAL=100US, TO="D6XX_OUTN(10)",
* LIMIT=333MHz, REJECT=YES";
* ERROR   ***ERROR : ';' expected.--------------------------^
* WARNING
* WARNING File: 'tdl.TX_3.1.00'.
* WARNING (00625):ASIC_TEST = "FREQ INTERVAL=100US,TO="TOUT(0)",LIMIT=83
* MHz,REJECT=YES";
* ERROR   ***ERROR : ';' expected.----------------------^
* STATUS  **** NOTE: This program uses EMZDI.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 4
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 40.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "BURNIN".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 50.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "IDQ".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 50.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "LU".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 50.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "Scan_AC1".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 50.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "Scan_AC2".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 50.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "Scan_AC3".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 50.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "Scan_AC4".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 50.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "Scanchk".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 50.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 3
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 50.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 30.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "VBOX_ALL".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 70.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 5.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "pat_1_tclk3_tdl".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 70.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 5.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "pat_1_tclk5_tdl".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 70.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 5.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "pat_2_tclk3_tdl".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 70.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 5.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "pat_3_tclk3_tdl".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 70.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 5.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "pat_4_tclk3_tdl".
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D2G7_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTP(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(15)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(14)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(13)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(12)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(11)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(10)  spec value (null)  tdl v
* alue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(9)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(8)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(7)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(6)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(5)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name D6XX_OUTN(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(7)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(6)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(5)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(4)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(3)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(2)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(1)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name CIINF(0)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 70.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN  spec value (null)  tdl
* value 10.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name DATA_VALID_INN.
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(15)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(14)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(13)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(12)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(11)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(10)  spec value (null)  tdl value
* 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(9)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(8)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name GPIO(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(7)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(6)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(5)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(4)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(3)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(2)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(1)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name TOUT(0)  spec value (null)  tdl value 2
* 0.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(13).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(12).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(11).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10)  spec value (null)  tdl value
*  70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(10).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(9).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(8).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(7).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(6).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 40.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(5).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(4).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 5.00NS
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 35.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3)  spec value (null)  tdl value
* 33.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(3).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(2).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(1).
* WARNING **** WARNING: Hold1 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 10.00NS
* WARNING **** WARNING: Hold0 value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0)  spec value (null)  tdl value
* 70.00NS
* WARNING **** WARNING: Polarity value mismatch between spec and tdl
* WARNING               Pin name T_CLK(0).
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name THSI_OUTD(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(4)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(3)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(2)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(1)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Strobe value mismatch between spec and tdl
* WARNING               Pin name PRBSGSYNC(0)  spec value (null)  tdl va
* lue 20.00NS
* WARNING **** WARNING: Timings mismatch between spec and tdl in pattern
*  set "pat_5_tclk3_tdl".
* WARNING certification issue: default_final_test_package_orientation=(N
* ULL)
* STATUS  shutdown from "agen_core.c" line 635: normal end
*
*
*
*  REVISION HISTORY:
*  REV  DATE     CHANGES                                       MADE BY
* {VPLUS_FIX_TIMING} Corrected T3 timing for VPLUS patterns
* {VPLUS_FIX_TIMING} Added on Thu Apr 25 19:41:42 CDT 2002
* {TA} Added code to allow ALL tests to be tested, while binning correctly.
* {TA} Added on Thu Apr 25 19:41:32 CDT 2002
* ----------------------------------------------------------rev_ICCQ - begin
*                 Updated ICCQ test for hot/low-voltage test
*                 Original Program : f741576b_75917504.itp
*                 date : Thu Apr 25 19:41:22 CDT 2002
*                 Search rev_ICCQ for revisions.
* ----------------------------------------------------------rev_ICCQ - end 
*
*
*
*
*
* margins begin
* margins 04/25/02  Modified margins to use pin groups,
*                   changed default limits to 2ns and 500mv
*                   added new pinlists as necessary             awil
* margins end
*
* rev00a 01/14/02 Fixed CML voltages. These are Gandalf cells........awil
*
* rev00b 01/14/02 Due to the mux pins for transistion fault tdl's:
*        pat_1_tclk3_tdl 1.00 SCAN_AC
*        pat_1_tclk5_tdl 1.00 SCAN_AC
*        pat_2_tclk3_tdl 1.00 SCAN_AC
*        pat_3_tclk3_tdl 1.00 SCAN_AC
*        pat_4_tclk3_tdl 1.00 SCAN_AC
*        pat_5_tclk3_tdl 1.00 SCAN_AC
*        I had to modify the ft gcl. The edits were to change it 
*        back. Edits also need to be made to the vgs file. Handing
*        off these tdls caused problems with speccap, so the tdls
*        in the handoff are not the ones used in the program. The
*        tdls used in the program will be located in the directory
*        and called tf_tdls.tar.docbook.
*        Please see "issues_cert.docbook" section G..................awil
* rev00c 01/14/02 Corrected default AC timing to allow for high
*        speed patterns..............................................awil
* rev00d 01/14/02 Removed TMPDIOA and TMPDIOK from pinlists..........awil       
* rev00e 01/14/02 Added LVDS bias pin groups and setups..............awil
* rev00f 01/14/02 Autogen error, replaced IXXX with the correct
*        current value.Please see "issues_cert.docbook" section F....awil
* rev00g 01/14/02 Added MISR signature match code to RX_SLOW,
         RX_622_3305, and RX_622_6610................................awil
* rev00h 01/14/02 Added setup for Gandalf VDDTXBIAS pin..............awil
* rev00k 01/14/02 Setup differential input leakage test on LVDS
*        input pins.  Should be 100 ohm resistor, apply 1.3V to one 
*        group, 0.9V to the other which gives 400mV across a 100 ohm
*        resistor which is 4mA. Set limits between 2mA and 6mA.......awil   
* rev00l 01/14/02 Removed LVDS pins from open/short/pin2pin test.....awil 
* rev00m 01/14/02 Corrected supply shorts/leakage limits.............awil
* rev00p 01/14/02 Added die id code..................................awil
* rev01a 01/17/02 Added comments for pattern loading.................awil
* rev01c 01/17/02 Removed transition fault tdl's for final test.
*        Add neccessary edits for TF timing at probe only due to not
*        having a mux final test board...............................awil
* rev01d 01/16/02 Added Frequency Counter Testsfor pins THSI_OUTD0, 
*        THSI_OUTD1,C6XX_OUTP,C6XX_OUTN,C83_EXTP,C83_EXTN
*        C167_15UTP,PAR_6XX_TP,DX6X_OUTP5,DX6X_OUTP4,DX6X_OUTP3, 
*        DX6X_OUTP2,DX6X_OUTP1,D6XX_OUTP1,D6XX_OUTP9,D6XX_OUTP8, 
*        D6XX_OUTP7,D6XX_OUTP6,D6XX_OUTP5,D6XX_OUTP4,D6XX_OUTP3, 
*        D6XX_OUTP2,D6XX_OUT10,D6XX_OUTP0,C167_155_O,PAR_6XX_OU, 
*        DX6X_OUTN5,DX6X_OUTN4,DX6X_OUTN3,DX6X_OUTN2,DX6X_OUTN1,
*        D6XX_OUTN1,D6XX_OUTN9,D6XX_OUTN8,D6XX_OUTN7,D6XX_OUTN6, 
*        D6XX_OUTN5,D6XX_OUTN4,D6XX_OUTN3,D6XX_OUTN2,D6XX_OUT11,
*        D6XX_OUTN0..................................................awil 
* rev03a 04/18/02 Replaced the VIH/VIL Derived From thr PATTERN
*        F741576B_55917051 with the original thr pattern. The 
*        autogen generated program fails at normal tcl limits........awil
* rev03b 04/19/02 Changed the TC_PLL50 and TC_PLL83 tdls vecters 
*        from 4K to 20K to lock in the PLL.
*        Please see "issues_cert.docbook" section D..................awil
* rev03c 04/19/02 Removed GOI test as it seems to be causing damage
*        and is not required by ASIC Ramp to Production document.....awil
* rev03f 04/24/02 ICCQ edits related to hot testing..................awil 
* rev03g 04/24/02 Removed Burn_IN tdl from production testing........awil 
* rev03h 04/24/02 Increase functional supply current from 2Ma to 6mA.awil 
* rev03i 04/24/02 Corrected the LVDS Vout limit to match the tcl.....awil 
* rev03j 04/24/02 Masked a couple of the first cycles in TX_2 min.
*        Please see "issues_cert.docbook" section E..................awil
* rev04a 04/24/02 Added 100ps to T2 of RTO clocks in TIMING_15.    
*        Necessary because of extra gate delay in V+ pin electronics
*        on RTZ edges; without the pad, the RTO and RTZ clocks are
*        slightly offset and are seen as jitter by the device........awil
* rev04b 04/30/02 Removed bias pins from the voltage margins.........awil
* rev04c 04/30/02 Implemented changes for Probe ROOM Temp & FT
*        HOT Temp conversion.........................................awil
* rev04d 04/30/02 Corrected limit for shmoo of Functional and IDDQ ..awil
* rev04e 05/01/02 Drop vdd by 75mV during min func test as 
*        required for NBTI...........................................awil 
* rev04f 04/01/02 Modified FT IDDQ limits to 25% of QC. increase
*        wait time...................................................awil
* rev04g 05/03/02 IDDQ edits to power down subchip...................awil
* rev04h 05/08/02 Masked 10 cycles in all DLP53min/max for margins.
*        Please see "issues_cert.docbook" section B..................awil
*
*
* revvmin begin
* revvmin 05/01/02  Added VMin shift and VBOX test. (VMINSHIFT)..... awil
* revvmin end
* revtw begin
* revtw 05/03/02  Added TWPDL statements test.......................drice
* revtw end
* rev05a 05/08/02 Edits made by Dan sulc to improve 666mhz freq
*        test, power ramping, and tdl execution......................awil
*
* rev05b 05/08/02 Removed 18 at-speed TX_1_ tdls to increase test 
*        time. All freq measurements done using TX_1_1. The tdls are 
*        redundant for freq measurements. Please see 
*        "issues_cert.docbook" section C.............................awil
* rev06a 05/10/02  Changed pgm rev for upload to checkout............awil
*
* rev06b 08/09/02 Add iccq power up sequence for iccq................awil
*
* rev06c 08/14/02 Removed some of the high speed functional testing
*        at probe....................................................awil
*
* rev07a 08/14/02 Received waiver not to test the analog input pin
*        because the switch controlling it can not be turned off.....awil
*
* rev08a 03/03/04 Updated the LVDS Vout and VOD limits to match TCL..awil
* rev10a 04/15/11 Changed binning to new standard....................bvance
* rev10b 04/15/11 Updated ICCQ limits/test based on lot that came....bvance
*                 out near the upper-edge of process spec............bvance
*
************************************************************************
****            PROGRAM DOCUMENTATION                               ****
************************************************************************
* PATTERN SETS USED:              NAME           REV   TYPE
*   GLOBAL PATTERN FILE
*     F741576B_55917G04
*   1MHZ FUNCTIONAL PATTERNS
*     F741576B_55917014           Scanchk         2.00 SCANCHK
*     F741576B_55917024           hzv             1.02 DC_PARA, Z_STATE
*     F741576B_55917034           tgl             1.02 DC_PARA
*     F741576B_55917044           thr             1.02 DC_PARA, VIH/VIL
*     F741576B_55917064           DLP53_1         2.00 FUNC
*     F741576B_55917074           DLP53_11        2.00 FUNC
*     F741576B_55917084           DLP53_12        2.00 FUNC
*     F741576B_55917094           DLP53_13        2.00 FUNC
*     F741576B_55917104           DLP53_14        2.00 FUNC
*     F741576B_55917114           DLP53_16        2.00 FUNC
*     F741576B_55917124           DLP53_17        2.00 FUNC
*     F741576B_55917134           DLP53_18        2.00 FUNC
*     F741576B_55917144           DLP53_19        2.00 FUNC
*     F741576B_55917154           DLP53_2         2.00 FUNC
*     F741576B_55917164           DLP53_3         2.00 FUNC
*     F741576B_55917174           DLP53_4         2.00 FUNC
*     F741576B_55917184           DLP53_6         2.00 FUNC
*     F741576B_55917194           DLP53_7         2.00 FUNC
*     F741576B_55917204           DLP53_8         2.00 FUNC
*     F741576B_55917214           DLP53_9         2.00 FUNC
*     F741576B_55917224           RX_SLOW         2.00 FUNC
*     F741576B_55917234           TC_PLL          1.01 FUNC
*     F741576B_55917244           TX_2            1.00 FUNC
*     F741576B_55917254           clv             1.02 FUNC
*     F741576B_55917264           dch             1.01 FUNC
*     F741576B_55917274           DCH_ALL         1.00 FUNC
*     F741576B_55917284           die             1.01 FUNC
*     F741576B_55917294           tdv             2.02 FUNC
*     F741576B_55917304           BURNIN          2.00 SCAN
*     F741576B_55917314           VBOX_ALL        1.00 SCAN
*   VOUT FUNCTIONAL PATTERNS
*     F741576B_55917344           ( Derived From hzv )
*     F741576B_55917354           ( Derived From tgl )
*   ICCQ PATTERNS
*     F741576B_55917324           IDQ             2.00 ICCQ
*     F741576B_55917334           LU              1.00 ICCQ
*   VIH/VIL PATTERNS
*     F741576B_55917044           thr             1.02 DC_PARA, VIH/VIL
*     F741576B_55917054           ( Derived From thr )
*   FUNCTIONAL AT SPEED PATTERNS
*     F741576B_55917364           RX_1_1          2.00 FUNC_AC
*     F741576B_55917374           RX_622_3305     2.00 FUNC_AC
*     F741576B_55917384           RX_622_6610     2.00 FUNC_AC
*     F741576B_55917394           TC_PLL50        1.00 FUNC_AC
*     F741576B_55917404           TC_PLL83        2.00 FUNC_AC
*     F741576B_55917414           TX_1_1          1.00 FUNC_AC
*     F741576B_55917424           TX_1_10         1.00 FUNC_AC
*     F741576B_55917434           TX_1_11         1.00 FUNC_AC
*     F741576B_55917444           TX_1_12         1.00 FUNC_AC
*     F741576B_55917454           TX_1_13         1.00 FUNC_AC
*     F741576B_55917464           TX_1_14         1.00 FUNC_AC
*     F741576B_55917474           TX_1_15         1.00 FUNC_AC
*     F741576B_55917484           TX_1_16         1.00 FUNC_AC
*     F741576B_55917494           TX_1_17         1.00 FUNC_AC
*     F741576B_55917504           TX_1_18         1.00 FUNC_AC
*     F741576B_55917514           TX_1_19         1.00 FUNC_AC
*     F741576B_55917524           TX_1_2          1.00 FUNC_AC
*     F741576B_55917534           TX_1_3          1.00 FUNC_AC
*     F741576B_55917544           TX_1_4          1.00 FUNC_AC
*     F741576B_55917554           TX_1_5          1.00 FUNC_AC
*     F741576B_55917564           TX_1_6          1.00 FUNC_AC
*     F741576B_55917574           TX_1_7          1.00 FUNC_AC
*     F741576B_55917584           TX_1_8          1.00 FUNC_AC
*     F741576B_55917594           TX_1_9          1.00 FUNC_AC
*     F741576B_55917604           TX_3            1.00 FUNC_AC
*     F741576B_55917614           Scan_AC1        2.00 SCAN_AC
*     F741576B_55917624           Scan_AC2        2.00 SCAN_AC
*     F741576B_55917634           Scan_AC3        2.00 SCAN_AC
*     F741576B_55917644           Scan_AC4        2.00 SCAN_AC
*     F741576B_55917654           pat_1_tclk3_tdl 1.00 SCAN_AC
*     F741576B_55917664           pat_1_tclk5_tdl 1.00 SCAN_AC
*     F741576B_55917674           pat_2_tclk3_tdl 1.00 SCAN_AC
*     F741576B_55917684           pat_3_tclk3_tdl 1.00 SCAN_AC
*     F741576B_55917694           pat_4_tclk3_tdl 1.00 SCAN_AC
*     F741576B_55917704           pat_5_tclk3_tdl 1.00 SCAN_AC
*     F741576B_55917714           BIST            1.00 BIST_AC
*
*
*
*
*
*                          PIN CONFIGURATION
*
*    DEF     LC        PIN                   PIN         LC     DEF
*                            **************
*      OU   186   C6XX_OUTP  *   1     520* VDDSHV       *0    GL
*      OU   185   C6XX_OUTN  *   2     519* VSS          *0    GL
*      OU   162   C167_15UTP *   3     518* VDDSHV       *0    GL
*      OU   161   C167_155_O *   4     517* VDDSHV       *0    GL
*      OU   130   C1G35_OUTP *   5     516* VSS          *0    GL
*      OU   129   C1G35_OUTN *   6     515* VSS          *0    GL
*      OU    81   PAR_6XX_TP *   7     514* VDD          *0    GL
*      OU    82   PAR_6XX_OU *   8     513* VDD          *0    GL
*      OU   138   P2G7_OUTP  *   9     512* VSS         *512   GL
*      OU   137   P2G7_OUTN  *  10     511* VSS         *511   GL
*      OU   134   D2G7_OUTP3 *  11     510* VDD         *508   GL
*      OU     9   D2G7_OUTP2 *  12     509* VDD         *507   GL
*      OU     5   D2G7_OUTP1 *  13     508* VDD         *504   GL
*      OU     1   D2G7_OUTP0 *  14     507* VDD         *503   GL
*      OU   133   D2G7_OUTN3 *  15     506* VSS         *500   GL
*      OU    10   D2G7_OUTN2 *  16     505* VSS         *499   GL
*      OU     6   D2G7_OUTN1 *  17     504* VDDSHV      *496   GL
*      OU     2   D2G7_OUTN0 *  18     503* VDDSHV      *492   GL
*      IN    21   MODE2G7    *  19     502* VSS         *491   GL
*      OU   182   DX6X_OUTP5 *  20     501* VSS         *488   GL
*      OU   178   DX6X_OUTP4 *  21     500* VDDSHV      *487   GL
*      OU    62   DX6X_OUTP3 *  22     499* VDD         *484   GL
*      OU    58   DX6X_OUTP2 *  23     498* VSS         *480   GL
*      OU    54   DX6X_OUTP1 *  24     497* VSS         *479   GL
*      OU    50   D6XX_OUTP1 *  25     496* VDD         *476   GL
*      OU   174   D6XX_OUTP9 *  26     495* VSS         *472   GL
*      OU   170   D6XX_OUTP8 *  27     494* VDDSHV      *471   GL
*      OU   197   D6XX_OUTP7 *  28     493* VDDSHV      *468   GL
*      OU   201   D6XX_OUTP6 *  29     492* VDD         *464   GL
*      OU    77   D6XX_OUTP5 *  30     491* VDDSHV      *463   GL
*      OU   193   D6XX_OUTP4 *  31     490* VSS         *460   GL
*      OU    69   D6XX_OUTP3 *  32     489* VDD         *459   GL
*      OU    73   D6XX_OUTP2 *  33     488* VSS         *456   GL
*      OU    66   D6XX_OUT10 *  34     487* VSS         *453   GL
*      OU   190   D6XX_OUTP0 *  35     486* VDD2        *448   GL
*      OU   181   DX6X_OUTN5 *  36     485* VDD         *444   GL
*      OU   177   DX6X_OUTN4 *  37     484* VDDSHV      *440   GL
*      OU    61   DX6X_OUTN3 *  38     483* VSS         *436   GL
*      OU    57   DX6X_OUTN2 *  39     482* VSS         *432   GL
*      OU    53   DX6X_OUTN1 *  40     481* VSS         *428   GL
*      OU    49   D6XX_OUTN1 *  41     480* VSS         *424   GL
*      OU   173   D6XX_OUTN9 *  42     479* VDDSHV      *423   GL
*      OU   169   D6XX_OUTN8 *  43     478* VDD2        *420   GL
*      OU   198   D6XX_OUTN7 *  44     477* VDD         *416   GL
*      OU   202   D6XX_OUTN6 *  45     476* VSS         *412   GL
*      OU    78   D6XX_OUTN5 *  46     475* VDDSHV      *411   GL
*      OU   194   D6XX_OUTN4 *  47     474* VSS         *408   GL
*      OU    70   D6XX_OUTN3 *  48     473* VDDSHV      *407   GL
*      OU    74   D6XX_OUTN2 *  49     472* VSS         *404   GL
*      OU    65   D6XX_OUT11 *  50     471* VDD2        *403   GL
*      OU   189   D6XX_OUTN0 *  51     470* VSS         *400   GL
*      IN   409   D622_INP15 *  52     469* VDD         *399   GL
*      IN   405   D622_INP14 *  53     468* VSS         *396   GL
*      IN   401   D622_INP13 *  54     467* VSS         *395   GL
*      IN   281   D622_INP12 *  55     466* VSS         *392   GL
*      IN   285   D622_INP11 *  56     465* VDDSHV      *391   GL
*      IN   273   D622_INP10 *  57     464* VSS         *388   GL
*      IN   277   D622_INP9  *  58     463* VSS         *387   GL
*      IN   393   D622_INP8  *  59     462* VDDSHV      *384   GL
*      IN   397   D622_INP7  *  60     461* VSS         *383   GL
*      IN   385   D622_INP6  *  61     460* VDD         *380   GL
*      IN   389   D622_INP5  *  62     459* VSS         *379   GL
*      IN   270   D622_INP4  *  63     458* VSS         *376   GL
*      IN   266   D622_INP3  *  64     457* VDD         *372   GL
*      IN   262   D622_INP2  *  65     456* VDD         *371   GL
*      IN   258   D622_INP1  *  66     455* VSS         *368   GL
*      IN   254   D622_INP0  *  67     454* VSS         *367   GL
*      IN   410   D622_INN15 *  68     453* VDDG        *364   GL
*      IN   406   D622_INN14 *  69     452* VDD         *360   GL
*      IN   402   D622_INN13 *  70     451* VSS         *359   GL
*      IN   282   D622_INN12 *  71     450* VDDG        *356   GL
*      IN   286   D622_INN11 *  72     449* VSS         *355   GL
*      IN   274   D622_INN10 *  73     448* VDD         *352   GL
*      IN   278   D622_INN9  *  74     447* VSS         *351   GL
*      IN   394   D622_INN8  *  75     446* VDD         *348   GL
*      IN   398   D622_INN7  *  76     445* VSS         *347   GL
*      IN   386   D622_INN6  *  77     444* VDDSHV      *344   GL
*      IN   390   D622_INN5  *  78     443* VDD         *340   GL
*      IN   269   D622_INN4  *  79     442* VDD         *339   GL
*      IN   265   D622_INN3  *  80     441* VDD         *336   GL
*      IN   261   D622_INN2  *  81     440* VDD         *332   GL
*      IN   257   D622_INN1  *  82     439* VDDSHV      *331   GL
*      IN   253   D622_INN0  *  83     438* VDDG        *328   GL
*      IN   246   C155_BPLNP *  84     437* VDDG        *327   GL
*      IN   245   C155_BPL_I *  85     436* VDD         *324   GL
*      IN   413   C8K_BPLP   *  86     435* VDDG        *321   GL
*      IN   414   C8K_BPLN   *  87     434* VSS         *316   GL
*      IN   250   C155_CSDNP *  88     433* VDDSHV      *312   GL
*      IN   249   C155_CSD_I *  89     432* VDD         *311   GL
*      IN   289   C8K_CSDP   *  90     431* VSS         *308   GL
*      IN   290   C8K_CSDN   *  91     430* VSS         *304   GL
*      OU   501   C5_HCH_RX  *  92     429* VDD         *300   GL
*      OU   378   P5_HCH_RX  *  93     428* VDD         *296   GL
*      IN   382   D5_HCH_RX_ *  94     427* VDD         *292   GL
*      IN   373   D5_HCH_RX7 *  95     426* VSS         *291   GL
*      IN   497   D5_HCH_RX6 *  96     425* VSS         *288   GL
*      IN   370   D5_HCH_RX5 *  97     424* VSS         *287   GL
*      IN   374   D5_HCH_RX4 *  98     423* VSS         *284   GL
*      IN   375   D5_HCH_RX3 *  99     422* VSS         *283   GL
*      IN   493   D5_HCH_RX2 * 100     421* VSS         *280   GL
*      IN   377   D5_HCH_RX1 * 101     420* VDD         *279   GL
*      IN   494   D5_HCH_RX0 * 102     419* VSS         *276   GL
*      IN   381   D10_BXI_RX * 103     418* VDDSHV      *275   GL
*      IN   114   C6XX_EXTP  * 104     417* VSS         *272   GL
*      IN   113   C6XX_EXTN  * 105     416* VSS         *271   GL
*      IN   238   C666_EXTP  * 106     415* VSS         *268   GL
*      IN   237   C666_EXTN  * 107     414* VDD         *267   GL
*      OU    85   C80_EXTP   * 108     413* VSS         *264   GL
*      OU    86   C80_EXTN   * 109     412* VSS         *263   GL
*      OU   205   C83_EXTP   * 110     411* VSS         *260   GL
*      OU   206   C83_EXTN   * 111     410* VDDSHV      *259   GL
*      IN   485   ONDDSI     * 112     409* VDD         *256   GL
*      IN   369   ONMFRI     * 113     408* VSS         *255   GL
*      IN   489   ONCKI      * 114     407* VSS         *252   GL
*      IN    25   CICLK      * 115     406* VSS         *251   GL
*      IN    29   CICSN      * 116     405* VSS         *248   GL
*      IO   154   CIINF7     * 117     404* VSS         *247   GL
*      IO   149   CIINF6     * 118     403* VSS         *244   GL
*      IO   153   CIINF5     * 119     402* VSS         *243   GL
*      IO   148   CIINF4     * 120     401* VSS         *240   GL
*      IO   147   CIINF3     * 121     400* VSS         *239   GL
*      IO   146   CIINF2     * 122     399* VSS         *236   GL
*      IO    30   CIINF1     * 123     398* VSS         *232   GL
*      IO   145   CIINF0     * 124     397* VDD         *231   GL
*      OU    22   CIACKN     * 125     396* VSS         *228   GL
*      OU    23   CICSRN     * 126     395* VSS         *227   GL
*      IN    26   CTLID_RSTN * 127     394* VSS         *224   GL
*      IN   126   DATA_V_INP * 128     393* VSS         *223   GL
*      IN   125   DATA_VALID * 129     392* VSS         *220   GL
*      IN   242   ES_SPILLP  * 130     391* VSS         *219   GL
*      IN   241   ES_SPILLN  * 131     390* VSS         *216   GL
*      IN   122   DATVAL_INP * 132     389* VDD2        *215   GL
*      IN   121   DATVAL_ES_ * 133     388* VSS         *212   GL
*      OU   478   RECENTER   * 134     387* VSS         *211   GL
*      OU   354   MX_PAR_TOG * 135     386* VSS         *208   GL
*      IN   466   AISINSMSOH * 136     385* VSS         *207   GL
*      IN   486   RSTN       * 137     384* VDDSHV      *204   GL
*      IN   481   POISON     * 138     383* VDD         *203   GL
*      IN   490   REIRDI     * 139     382* VDDSHV      *200   GL
*      IN   217   KAINP      * 140     381* VSS         *199   GL
*      IN   218   KAINN      * 141     380* VSS         *196   GL
*      IN   209   KBINP      * 142     379* VDD         *195   GL
*      IN   210   KBINN      * 143     378* VSS         *192   GL
*      IO   350   GPIO15     * 144     377* VSS         *191   GL
*      IO   349   GPIO14     * 145     376* VDDSHV      *188   GL
*      IO   346   GPIO13     * 146     375* VDD         *187   GL
*      IO   345   GPIO12     * 147     374* VSS         *184   GL
*      IO   343   GPIO11     * 148     373* VSS         *183   GL
*      IO   342   GPIO10     * 149     372* VDD         *180   GL
*      IO   341   GPIO9      * 150     371* VSS         *179   GL
*      IO   338   GPIO8      * 151     370* VSS         *176   GL
*      IO   337   GPIO7      * 152     369* VDD         *175   GL
*      IO   462   GPIO6      * 153     368* VDD         *172   GL
*      IO   461   GPIO5      * 154     367* VDD         *171   GL
*      IO   458   GPIO4      * 155     366* VSS         *168   GL
*      IO   457   GPIO3      * 156     365* VDD         *167   GL
*      IO   455   GPIO2      * 157     364* VSS         *164   GL
*      IO   454   GPIO1      * 158     363* VSS         *163   GL
*      IO   442   GPIO0      * 159     362* VDD2        *160   GL
*      IN   333   BYPASS_PLL * 160     361* VSS         *159   GL
*      IN   358   IDDQN      * 161     360* VDDSHV      *156   GL
*      IN   495   THZ_N      * 162     359* VDD         *152   GL
*      IN   366   T_SET_BD2I * 163     358* VSS         *151   GL
*      IN   298   T_DISARST  * 164     357* VDD         *150   GL
*      OU   467   TOUT7      * 165     356* VDD         *144   GL
*      OU   469   TOUT6      * 166     355* VDD         *140   GL
*      OU   470   TOUT5      * 167     354* VSS         *139   GL
*      OU   473   TOUT4      * 168     353* VDDSHV      *136   GL
*      OU   475   TOUT3      * 169     352* VDDSHV      *135   GL
*      OU   474   TOUT2      * 170     351* VSS         *132   GL
*      OU   477   TOUT1      * 171     350* VSS         *131   GL
*      OU   353   TOUT0      * 172     349* VDD         *128   GL
*      OU   294   TPO        * 173     348* VSS         *127   GL
*      IN    93   TC166P     * 174     347* VDD2        *124   GL
*      IN    94   TC166N     * 175     346* VSS         *123   GL
*      IN   427   T_CLK13    * 176     345* VDDSHV      *120   GL
*      IN   361   T_CLK12    * 177     344* VDDSHV      *119   GL
*      IN   365   T_CLK11    * 178     343* VDD         *116   GL
*      IN   438   T_CLK10    * 179     342* VSS         *115   GL
*      IN   437   T_CLK9     * 180     341* VDDSHV      *112   GL
*      IN   446   T_CLK8     * 181     340* VDD         *108   GL
*      IN   445   T_CLK7     * 182     339* VDDSHV      *107   GL
*      IN   443   T_CLK6     * 183     338* VDD2        *106   GL
*      IN   452   T_CLK5     * 184     337* VDD         *105   GL
*      IN   441   T_CLK4     * 185     336* VDDSHV      *104   GL
*      IN   320   T_CLK3     * 186     335* VSS         *100   GL
*      IN   322   T_CLK2     * 187     334* VSS         *99    GL
*      IN   323   T_CLK1     * 188     333* VDDSHV      *96    GL
*      IN   447   T_CLK0     * 189     332* VDD         *95    GL
*      IN   465   TM_SCAN    * 190     331* VSS         *92    GL
*      IN   450   TE_SCAN    * 191     330* VDDSHV      *88    GL
*      IN   313   TSCI7      * 192     329* VDD2        *87    GL
*      IN   435   TSCI6      * 193     328* VSS         *84    GL
*      IN   315   TSCI5      * 194     327* VDD         *83    GL
*      IN   434   TSCI4      * 195     326* VDDSHV      *80    GL
*      IN   433   TSCI3      * 196     325* VSS         *79    GL
*      IN   318   TSCI2      * 197     324* VSS         *76    GL
*      IN   317   TSCI1      * 198     323* VSS         *75    GL
*      IN   439   TSCI0      * 199     322* VDDSHV      *72    GL
*      OU   483   TDO        * 200     321* VSS         *71    GL
*      IN   357   TDI        * 201     320* VDD         *68    GL
*      IN   482   TCK        * 202     319* VSS         *67    GL
*      IN   363   TMS        * 203     318* VDD         *64    GL
*      IN   362   TRSTN      * 204     317* VDDSHV      *63    GL
*      IN   334   TBIST_RUN  * 205     316* VSS         *60    GL
*      IN   314   TBIST_ROT  * 206     315* VDDSHV      *59    GL
*      IN   335   TM_RAM     * 207     314* VSS         *56    GL
*      OU   330   TBIST_FAIL * 208     313* VDDSHV      *55    GL
*      OU   329   TBIST_DONE * 209     312* VDD         *52    GL
*      IN   214   TM_PLL     * 210     311* VSS         *51    GL
*      IN   449   TPLL_TEST1 * 211     310* VDDSHV      *48    GL
*      IN   103   TM_HSI     * 212     309* VDD         *44    GL
*      IN   421   THSI_BYPS1 * 213     308* VSS         *43    GL
*      IN   221   THSI_BYPAS * 214     307* VSS         *40    GL
*      IN   222   THSI_SEL01 * 215     306* VDDSHV      *39    GL
*      IN   101   THSI_SEL00 * 216     305* VSS         *36    GL
*      IN   302   THSI_SEL11 * 217     304* VDD         *35    GL
*      IN   425   THSI_SEL10 * 218     303* VSS         *32    GL
*      IN   109   THSI_PWRDN * 219     302* VSS         *31    GL
*      IN   111   RSTZ_HSI   * 220     301* VSS         *28    GL
*      IN   295   THSI_INA   * 221     300* VSS         *27    GL
*      IN   301   THSI_OPEN  * 222     299* VDDSHV      *24    GL
*      IN   426   TESTSELZ15 * 223     298* VSS         *20    GL
*      IN   309   TESTSELZ14 * 224     297* VSS         *19    GL
*      IN   429   TESTSELZ13 * 225     296* VSS         *16    GL
*      IN   431   TESTSELZ12 * 226     295* VSS         *12    GL
*      IN   306   TESTSELZ11 * 227     294* VSS         *11    GL
*      IN   305   TESTSELZ10 * 228     293* VDDG         *8    GL
*      IN   310   TESTSELZ9  * 229     292* VDDG         *7    GL
*      IN   307   TESTSELZ8  * 230     291* VSS          *4    GL
*      IN   225   TESTSELZ7  * 231     290* VDD          *3    GL
*      IN   110   TESTSELZ6  * 232     289* M_T_CLK5    451    MUX
*      IN   226   TESTSELZ5  * 233     288* M_T_CLK5    451    MUX
*      IN   230   TESTSELZ4  * 234     287* VBIASLVDSO  166    REF
*      IN   229   TESTSELZ3  * 235     286* VBIASLVDSA  165    REF
*      IN   233   TESTSELZ2  * 236     285* VDDTXBIAS    15    REF
*      IN   234   TESTSELZ1  * 237     284* VBIASLVDSI  117    REF
*      IN   235   TESTSELZ0  * 238     283* VIBASLVDSA  118    REF
*      IN   303   THSI_STAND * 239     282* VBIASLVDB1  213    REF
*      IN   418   THSI_CKGE1 * 240     281* VBIASLVDA1   91    REF
*      IN    98   THSI_CKGEN * 241     280* TMPDIOK     325    DIODE
*      IN   417   THSI_SELN1 * 242     279* TMPDIOA     326    DIODE
*      IN    97   THSI_SEL_E * 243     278* PRBSGSYNC0  510    OU
*      IN   422   THSI_ACC_S * 244     277* PRBSGSYNC1  509    OU
*      IN   430   THSI_RESYN * 245     276* PRBSGSYNC2  506    OU
*      IN   419   TC78_SEL   * 246     275* PRBSGSYNC3  505    OU
*      OU   415   THSI_OUTA  * 247     274* PRBSGSYNC4  502    OU
*      OU   297   THSI_TCKOU * 248     273* T2G7_TDI    143    IN
*      OU   299   THSI_TESTD * 249     272* TM_SHSI     142    IN
*      OU   293   THSI_OUTD1 * 250     271* T2G7_PRE_E   17    IN
*      OU   102   THSI_OUTD0 * 251     270* T2G7_PRMP0   18    IN
*      IN    33   THSI_P2S   * 252     269* T2G7_TDO    498    OU
*      IN    45   THSI_D787  * 253     268* T2G7_BYPAS  141    IN
*      IN    47   THSI_D786  * 254     267* C1G35_INN    13    IN
*      IN    42   THSI_D785  * 255     266* C1G35_INP    14    IN
*      IN    46   THSI_D784  * 256     265* THSI_RP_BY  158    IN
*      IN    41   THSI_D783  * 257     264* RSTZ_SHSI   157    IN
*      IN    37   THSI_D782  * 258     263* TC622N       90    IN
*      IN    38   THSI_D781  * 259     262* TC622P       89    IN
*      IN    34   THSI_D780  * 260     261* BYPASS_HSI  155    IN
*                            **************
*
*
*
*         TESTER PIN CROSS-REFERENCE TABLE
*
* TESTER        DEVICE         PIN              PIN
*   PIN           PIN         NAME             TYPE
*     1          14(A13)      D2G7_OUTP0        OU
*     2          18(B13)      D2G7_OUTN0        OU
*     5          13(C14)      D2G7_OUTP1        OU
*     6          17(D14)      D2G7_OUTN1        OU
*     9          12(C15)      D2G7_OUTP2        OU
*    10          16(D15)      D2G7_OUTN2        OU
*    13         267(A17)      C1G35_INN         IN
*    14         266(B17)      C1G35_INP         IN
*    15         285(D17)      VDDTXBIAS         REF
*    17         271(C21)      T2G7_PRE_E        IN
*    18         270(D21)      T2G7_PRMP0        IN
*    21          19(A22)      MODE2G7           IN
*    22         125(C22)      CIACKN            OU
*    23         126(D22)      CICSRN            OU
*    25         115(E22)      CICLK             IN
*    26         127(B23)      CTLID_RSTN        IN
*    29         116(C23)      CICSN             IN
*    30         123(E23)      CIINF1            IO
*    33         252(C26)      THSI_P2S          IN
*    34         260(D26)      THSI_D780         IN
*    37         258(E26)      THSI_D782         IN
*    38         259(B27)      THSI_D781         IN
*    41         257(C27)      THSI_D783         IN
*    42         255(E30)      THSI_D785         IN
*    45         253(E31)      THSI_D787         IN
*    46         256(F27)      THSI_D784         IN
*    47         254(F28)      THSI_D786         IN
*    49          41(K29)      D6XX_OUTN1        OU
*    50          25(K30)      D6XX_OUTP1        OU
*    53          40(L29)      DX6X_OUTN1        OU
*    54          24(L30)      DX6X_OUTP1        OU
*    57          39(M28)      DX6X_OUTN2        OU
*    58          23(M29)      DX6X_OUTP2        OU
*    61          38(M30)      DX6X_OUTN3        OU
*    62          22(M31)      DX6X_OUTP3        OU
*    65          50(R28)      D6XX_OUT11        OU
*    66          34(R29)      D6XX_OUT10        OU
*    69          32(U28)      D6XX_OUTP3        OU
*    70          48(U29)      D6XX_OUTN3        OU
*    73          33(U30)      D6XX_OUTP2        OU
*    74          49(U31)      D6XX_OUTN2        OU
*    77          30(V28)      D6XX_OUTP5        OU
*    78          46(V29)      D6XX_OUTN5        OU
*    81           7(Y30)      PAR_6XX_TP        OU
*    82           8(Y31)      PAR_6XX_OU        OU
*    85         108(AA29)       C80_EXTP        OU
*    86         109(AA30)       C80_EXTN        OU
*    89         262(AB29)       TC622P          IN
*    90         263(AB30)       TC622N          IN
*    91         281(AC28)       VBIASLVDA1      REF
*    93         174(AC29)       TC166P          IN
*    94         175(AC30)       TC166N          IN
*    97         243(AF29)       THSI_SEL_E      IN
*    98         241(AG31)       THSI_CKGEN      IN
*   101         216(AG30)       THSI_SEL00      IN
*   102         251(AH30)       THSI_OUTD0      OU
*   103         212(AK28)       TM_HSI          IN
*   109         219(AJ27)       THSI_PWRDN      IN
*   110         232(AL27)       TESTSELZ6       IN
*   111         220(AG26)       RSTZ_HSI        IN
*   113         105(AJ23)       C6XX_EXTN       IN
*   114         104(AK23)       C6XX_EXTP       IN
*   117         284(AL23)       VBIASLVDSI      REF
*   118         283(AG22)       VIBASLVDSA      REF
*   121         133(AJ22)       DATVAL_ES_      IN
*   122         132(AK22)       DATVAL_INP      IN
*   125         129(AJ21)       DATA_VALID      IN
*   126         128(AK21)       DATA_V_INP      IN
*   129           6(A18)      C1G35_OUTN        OU
*   130           5(B18)      C1G35_OUTP        OU
*   133          15(A19)      D2G7_OUTN3        OU
*   134          11(B19)      D2G7_OUTP3        OU
*   137          10(A20)      P2G7_OUTN         OU
*   138           9(B20)      P2G7_OUTP         OU
*   141         268(D20)      T2G7_BYPAS        IN
*   142         272(E20)      TM_SHSI           IN
*   143         273(B21)      T2G7_TDI          IN
*   145         124(A24)      CIINF0            IO
*   146         122(B24)      CIINF2            IO
*   147         121(C24)      CIINF3            IO
*   148         120(D24)      CIINF4            IO
*   149         118(E24)      CIINF6            IO
*   153         119(A25)      CIINF5            IO
*   154         117(B25)      CIINF7            IO
*   155         261(D25)      BYPASS_HSI        IN
*   157         264(E25)      RSTZ_SHSI         IN
*   158         265(B26)      THSI_RP_BY        IN
*   161           4(G29)      C167_155_O        OU
*   162           3(G30)      C167_15UTP        OU
*   165         286(G31)      VBIASLVDSA        REF
*   166         287(H28)      VBIASLVDSO        REF
*   169          43(H29)      D6XX_OUTN8        OU
*   170          27(H30)      D6XX_OUTP8        OU
*   173          42(J29)      D6XX_OUTN9        OU
*   174          26(J30)      D6XX_OUTP9        OU
*   177          37(N28)      DX6X_OUTN4        OU
*   178          21(N29)      DX6X_OUTP4        OU
*   181          36(N30)      DX6X_OUTN5        OU
*   182          20(N31)      DX6X_OUTP5        OU
*   185           2(P28)      C6XX_OUTN         OU
*   186           1(P29)      C6XX_OUTP         OU
*   189          51(P30)      D6XX_OUTN0        OU
*   190          35(P31)      D6XX_OUTP0        OU
*   193          31(V30)      D6XX_OUTP4        OU
*   194          47(V31)      D6XX_OUTN4        OU
*   197          28(W28)      D6XX_OUTP7        OU
*   198          44(W29)      D6XX_OUTN7        OU
*   201          29(W30)      D6XX_OUTP6        OU
*   202          45(W31)      D6XX_OUTN6        OU
*   205         110(Y28)      C83_EXTP          OU
*   206         111(Y29)      C83_EXTN          OU
*   209         142(AD29)       KBINP           IN
*   210         143(AD30)       KBINN           IN
*   213         282(AD31)       VBIASLVDB1      REF
*   214         210(AE27)       TM_PLL          IN
*   217         140(AE29)       KAINP           IN
*   218         141(AE30)       KAINN           IN
*   221         214(AF27)       THSI_BYPAS      IN
*   222         215(AF28)       THSI_SEL01      IN
*   225         231(AH26)       TESTSELZ7       IN
*   226         233(AJ26)       TESTSELZ5       IN
*   229         235(AK26)       TESTSELZ3       IN
*   230         234(AG25)       TESTSELZ4       IN
*   233         236(AH25)       TESTSELZ2       IN
*   234         237(AJ25)       TESTSELZ1       IN
*   235         238(AK25)       TESTSELZ0       IN
*   237         107(AJ24)       C666_EXTN       IN
*   238         106(AK24)       C666_EXTP       IN
*   241         131(AH20)       ES_SPILLN       IN
*   242         130(AJ20)       ES_SPILLP       IN
*   245          85(AK20)       C155_BPL_I      IN
*   246          84(AL20)       C155_BPLNP      IN
*   249          89(AH19)       C155_CSD_I      IN
*   250          88(AJ19)       C155_CSDNP      IN
*   253          83(AK19)       D622_INN0       IN
*   254          67(AL19)       D622_INP0       IN
*   257          82(AH18)       D622_INN1       IN
*   258          66(AJ18)       D622_INP1       IN
*   261          81(AK18)       D622_INN2       IN
*   262          65(AL18)       D622_INP2       IN
*   265          80(AH17)       D622_INN3       IN
*   266          64(AJ17)       D622_INP3       IN
*   269          79(AK17)       D622_INN4       IN
*   270          63(AL17)       D622_INP4       IN
*   273          57(AH13)       D622_INP10      IN
*   274          73(AJ13)       D622_INN10      IN
*   277          58(AK13)       D622_INP9       IN
*   278          74(AL13)       D622_INN9       IN
*   281          55(AH12)       D622_INP12      IN
*   282          71(AJ12)       D622_INN12      IN
*   285          56(AK12)       D622_INP11      IN
*   286          72(AL12)       D622_INN11      IN
*   289          90(AJ7)      C8K_CSDP          IN
*   290          91(AK7)      C8K_CSDN          IN
*   293         250(AG6)      THSI_OUTD1        OU
*   294         173(AH6)      TPO               OU
*   295         221(AJ6)      THSI_INA          IN
*   297         248(AJ5)      THSI_TCKOU        OU
*   298         164(AG4)      T_DISARST         IN
*   299         249(AK4)      THSI_TESTD        OU
*   301         222(AG3)      THSI_OPEN         IN
*   302         217(AF5)      THSI_SEL11        IN
*   303         239(AH2)      THSI_STAND        IN
*   305         228(AD2)      TESTSELZ10        IN
*   306         227(AD3)      TESTSELZ11        IN
*   307         230(AD1)      TESTSELZ8         IN
*   309         224(AD5)      TESTSELZ14        IN
*   310         229(AC5)      TESTSELZ9         IN
*   313         192(AC2)      TSCI7             IN
*   314         206(AC4)      TBIST_ROT         IN
*   315         194(AC1)      TSCI5             IN
*   317         198(AB1)      TSCI1             IN
*   318         197(AB2)      TSCI2             IN
*   320         186(W5)       T_CLK3            IN
*   322         187(W4)       T_CLK2            IN
*   323         188(W3)       T_CLK1            IN
*   325         280(V1)       TMPDIOK           DIODE
*   326         279(V2)       TMPDIOA           DIODE
*   329         209(V4)       TBIST_DONE        OU
*   330         208(V5)       TBIST_FAIL        OU
*   333         160(U1)       BYPASS_PLL        IN
*   334         205(U2)       TBIST_RUN         IN
*   335         207(U3)       TM_RAM            IN
*   337         152(M3)       GPIO7             IO
*   338         151(M5)       GPIO8             IO
*   341         150(L3)       GPIO9             IO
*   342         149(K1)       GPIO10            IO
*   343         148(K3)       GPIO11            IO
*   345         147(J1)       GPIO12            IO
*   346         146(J2)       GPIO13            IO
*   349         145(J4)       GPIO14            IO
*   350         144(J5)       GPIO15            IO
*   353         172(E1)       TOUT0             OU
*   354         135(E2)       MX_PAR_TOG        OU
*   357         201(D2)       TDI               IN
*   358         161(E3)       IDDQN             IN
*   361         177(B4)       T_CLK12           IN
*   362         204(E4)       TRSTN             IN
*   363         203(C5)       TMS               IN
*   365         178(B6)       T_CLK11           IN
*   366         163(C6)       T_SET_BD2I        IN
*   369         113(E8)       ONMFRI            IN
*   370          97(B9)       D5_HCH_RX5        IN
*   373          95(A9)       D5_HCH_RX7        IN
*   374          98(C9)       D5_HCH_RX4        IN
*   375          99(D9)       D5_HCH_RX3        IN
*   377         101(E9)       D5_HCH_RX1        IN
*   378          93(A10)      P5_HCH_RX         OU
*   381         103(C10)      D10_BXI_RX        IN
*   382          94(D10)      D5_HCH_RX_        IN
*   385          61(AH15)       D622_INP6       IN
*   386          77(AJ15)       D622_INN6       IN
*   389          62(AK15)       D622_INP5       IN
*   390          78(AL15)       D622_INN5       IN
*   393          59(AH14)       D622_INP8       IN
*   394          75(AJ14)       D622_INN8       IN
*   397          60(AK14)       D622_INP7       IN
*   398          76(AL14)       D622_INN7       IN
*   401          54(AJ11)       D622_INP13      IN
*   402          70(AK11)       D622_INN13      IN
*   405          53(AJ10)       D622_INP14      IN
*   406          69(AK10)       D622_INN14      IN
*   409          52(AJ9)      D622_INP15        IN
*   410          68(AK9)      D622_INN15        IN
*   413          86(AJ8)      C8K_BPLP          IN
*   414          87(AK8)      C8K_BPLN          IN
*   415         247(AG7)      THSI_OUTA         OU
*   417         242(AG1)      THSI_SELN1        IN
*   418         240(AF2)      THSI_CKGE1        IN
*   419         246(AF3)      TC78_SEL          IN
*   421         213(AF4)      THSI_BYPS1        IN
*   422         244(AE4)      THSI_ACC_S        IN
*   425         218(AG2)      THSI_SEL10        IN
*   426         223(AE2)      TESTSELZ15        IN
*   427         176(AE3)      T_CLK13           IN
*   429         225(AE1)      TESTSELZ13        IN
*   430         245(AE5)      THSI_RESYN        IN
*   431         226(AD4)      TESTSELZ12        IN
*   433         196(AB3)      TSCI3             IN
*   434         195(AB4)      TSCI4             IN
*   435         193(AB5)      TSCI6             IN
*   437         180(AA2)      T_CLK9            IN
*   438         179(AA3)      T_CLK10           IN
*   439         199(AA4)      TSCI0             IN
*   441         185(Y1)       T_CLK4            IN
*   442         159(R4)       GPIO0             IO
*   443         183(Y3)       T_CLK6            IN
*   445         182(Y4)       T_CLK7            IN
*   446         181(Y5)       T_CLK8            IN
*   447         189(W2)       T_CLK0            IN
*   449         211(R1)       TPLL_TEST1        IN
*   450         191(R2)       TE_SCAN           IN
*   451         288()         M_T_CLK5          MUX
*   452         184(Y2)       T_CLK5            IN
*   454         158(P1)       GPIO1             IO
*   455         157(P3)       GPIO2             IO
*   457         156(P5)       GPIO3             IO
*   458         155(N2)       GPIO4             IO
*   461         154(N4)       GPIO5             IO
*   462         153(M1)       GPIO6             IO
*   465         190(H3)       TM_SCAN           IN
*   466         136(H4)       AISINSMSOH        IN
*   467         165(H5)       TOUT7             OU
*   469         166(G2)       TOUT6             OU
*   470         167(G3)       TOUT5             OU
*   473         168(G4)       TOUT4             OU
*   474         170(G5)       TOUT2             OU
*   475         169(F2)       TOUT3             OU
*   477         171(F3)       TOUT1             OU
*   478         134(F5)       RECENTER          OU
*   481         138(D7)       POISON            IN
*   482         202(E6)       TCK               IN
*   483         200(D6)       TDO               OU
*   485         112(B7)       ONDDSI            IN
*   486         137(C7)       RSTN              IN
*   489         114(A7)       ONCKI             IN
*   490         139(E7)       REIRDI            IN
*   493         100(A8)       D5_HCH_RX2        IN
*   494         102(B8)       D5_HCH_RX0        IN
*   495         162(D8)       THZ_N             IN
*   497          96(E10)      D5_HCH_RX6        IN
*   498         269(B11)      T2G7_TDO          OU
*   501          92(D11)      C5_HCH_RX         OU
*   502         274(A12)      PRBSGSYNC4        OU
*   505         275(B12)      PRBSGSYNC3        OU
*   506         276(C12)      PRBSGSYNC2        OU
*   509         277(D12)      PRBSGSYNC1        OU
*   510         278(E12)      PRBSGSYNC0        OU
*
*
*
*
*
*           SUMMARY OF ELECTRONIC CUSTOMER SPEC
*
*
*  TEXAS INSTRUMENTS
*  ASIC CMOS DESIGN SPECIFICATION
*
*  REVISION NO:  3.00
*
*  CUSTOMER PART NUMBER: F741576B
*
*  CUSTOMER INFORMATION
*
*   Lucent Technologies Network Systems GmbH
*   Botterstraat 45
*   Huizen,
*   Netherlands  1270 AA
*
*
*1. PRODUCT DESCRIPTION
*
*   Technology         : gs30
*   Core Voltage       : 1.800000
*   Operating Cond     : 1.8V_INDUSTRIAL
*   Metal System       : 5lm
*   Total Gate Count   : 1005119.31250
*
*   +---------------------------+---------------+---------------------------
*--+
*   |MEGAMODULE CELL NAME       | QUANTITY      | TYPE
*  |
*   +---------------------------+---------------+---------------------------
*--+
*   |FA002V                     | 1             | DIE-ID
*  |
*   |EY00032033040              | 4             | RAM
*  |
*   |EY00160033040              | 4             | RAM
*  |
*   |EY00512033040              | 8             | RAM
*  |
*   |DLP53                      | 20            | DCR
*  |
*   +---------------------------+---------------+---------------------------
*--+
*
*2. STATIC CURRENT MEASUREMENTS
*
*                                                      MAXIMUM            UN
*IT
* IDDQ - Static DC current on VCC with SRAMs and
*        pull-up/downs powered down and the device     1511.425
*UA
*        in a static state.
*
*        For the TGCXXXX product, the limit ZZZZ is extracted from the GOOD.
* For
*        the TSCXXXX product, the limit ZZZZ is a calculated value. The IDDQ
* Max
*        limit algorithm is :
*
*                             {  33.9 + (0.001470 * Gate Count) } UA    ;
*
*3. FREEFORM INFORMATION
*
*
*
*
*
*
*
*
*
*
*>>>>>>>>>>>>>>>>>>>>>> FINAL MSF REPORT <<<<<<<<<<<<<<<<<<<<<<<<<
* >>>>>>>>>>>>>>>>>>>>>> FOR PRODUCTION RELEASE <<<<<<<<<<<<<<<<<<<<<<<<<
*
*     TEXAS INSTRUMENTS      04/12/2002  13:40:24    SpecCap Version: 7.1.5
*
*     ASIC FINAL SPECIFICATION                       PAGE 2    OF 316
*                           ****** MANUFACTURING ******
*                               REVISION NO : 3.00
*
*4. DESIGN ENVIRONMENT
*
*       TIDSS release            : 2.3
*       Library release          : 1.8
*       Workstation              : SUN5
*       Schematic capture tool   : not used
*       Logic synthesis tool     : Design Compiler 2000.05
*       Software simulator       : NC-VHDL/Verilog LVD 3.2
*       Hardware simulator       : not used
*       Timing verification tool : Primetime 2000.05
*       Test synthesis tool      : Test Compiler 2000.05
*       Fault grading tool       : not used
*       ATPG tool                : Tetramax 2000.05
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*>>>>>>>>>>>>>>>>>>>>>> FINAL MSF REPORT <<<<<<<<<<<<<<<<<<<<<<<<<
* >>>>>>>>>>>>>>>>>>>>>> FOR PRODUCTION RELEASE <<<<<<<<<<<<<<<<<<<<<<<<<
*
*     TEXAS INSTRUMENTS      04/12/2002  13:40:24    SpecCap Version: 7.1.5
*
*     ASIC FINAL SPECIFICATION                       PAGE 3    OF 316
*                           ****** MANUFACTURING ******
*                               REVISION NO : 3.00
*
*5. MISCELLANEOUS STATISTICS
*
*---------------------------------------------------------------------------
*------
*NOTE:   SPECCAP WILL REPORT ZERO SITES USED, IF THE SITE DOES NOT EXIST IN
*THE
*        BASE ARRAY TECHNOLOGY SELECTED FOR THE DESIGN.  THE FOLLOWING TABLE
*        LISTS THE SITES THAT EXIST FOR EACH BASE ARRAY TECHNOLOGY.
*
*              TECHNOLOGY                      SITE TYPES
*              ----------                      ----------
*              TGC1000/TGC1000LV               C SITES
*              TGC2000/TGC2000LV               C SITES
*              TGC2500                         C SITES
*              TGC3000/TGC3000T                CS, CL SITES
*              TGC4000                         CS, CL SITES
*              TGB2000                         C, B, D, I SITES
*              TSC2000/TSC2000LV               DOES NOT APPLY
*              TSC3000                         DOES NOT APPLY
*---------------------------------------------------------------------------
*------
*
*      Bipolar Cell Count (b sites)                 : 0.000000
*      CMOS Cell Count (c sites)                    : 0.000000
*      Differential core cell count (d sites)       : 0.000000
*      Core-to-core interface  cell count (i sites) : 0.000000
*      Small CMOS cell count (cs sites)             : 0.000000
*      Large CMOS cell count (cl sites)             : 0.000000
*      BICMOS cell count (bn sites)                 : 0.000000
*      Total Gates used                             : 1005119.312500
*
*6. ABSOLUTE MAXIMUM RATINGS OVER OPERATING FREE_AIR TEMPERATURE RANGE
*
*
*    VDD  Supply voltage                           -0.5  V to 2.0 V
*    VDDS Supply voltage (1833c05)                 -0.5  V to 4.0 V
*    VDDA  Supply voltage                          -0.5 V to 4.0 V
*    VDD3V Supply voltage                          -0.5 V to 4.0 V
*    VHSTL Supply Voltage Range                    -0.5V to 1.6V
*    VI   Input voltage (18c05 - standard)         -0.5 V to VDD
*    VI   Input voltage (18c05 - failsafe)         -0.5 V to 2.0V
*    VI   Input voltage (1833c05 - standard ls)    -0.5 V to VDDS+ 0.5 V
*    VI   Input voltage (1833c05 - failsafe ls)    -0.5 V to 4.0V
*    VO   Input voltage (18c05 - standard)         -0.5 V to VDD
*    VO   Input voltage (18c05 - failsafe)         -0.5 V to 2.0V
*    VO   Input voltage (1833c05 - standard ls)    -0.5 V to VDDS+ 0.5 V
*    VO   Input voltage (1833c05 - failsafe ls)    -0.5 V to 4.0V
*    IIK  Input clamp current (VI<0 OR VI>VDD) #    +/-20 mA
*    IOK  Output clamp current (VO<0 OR VO>VDD)    +/-20 mA
*    Storage temperature range                      -65 oC to 150 oC
*
*    # - Applies for external input buffers.  Level shift inputs are
*        relative to VDDS.  VI>VDD or VDDS does not apply for failsafe
*         pins.
*     - Applies for external output buffers.  Level shift outputs are
*        relative to VDDS.  VO>VDD or VDDS does not apply for failsafe
*        pins.
*
*    Stresses beyond those listed under 'ABSOLUTE MAXIMUM RATINGS' may
*
*
*>>>>>>>>>>>>>>>>>>>>>> FINAL MSF REPORT <<<<<<<<<<<<<<<<<<<<<<<<<
* >>>>>>>>>>>>>>>>>>>>>> FOR PRODUCTION RELEASE <<<<<<<<<<<<<<<<<<<<<<<<<
*
*     TEXAS INSTRUMENTS      04/12/2002  13:40:24    SpecCap Version: 7.1.5
*
*     ASIC FINAL SPECIFICATION                       PAGE 4    OF 316
*                           ****** MANUFACTURING ******
*                               REVISION NO : 3.00
*
*6. ABSOLUTE MAXIMUM RATINGS OVER OPERATING FREE_AIR TEMPERATURE RANGE (Cont
*inued..)
*
*    cause permanent damage to the device.  These are stress ratings only
*    and operation of the device at these or any other condition(s) beyond
*    those indicated in the 'RECOMMENDED OPERATING CONDITIONS' section of
*    this specification is not implied.  Exposure to absolute maximum
*    rated conditions for extended periods may affect device reliability.
*
*
*7. RECOMMENDED OPERATING CONDITIONS
*
*   RECOMMENDED 1.8V_INDUSTRIAL OPERATING CONDITIONS
*               ------------
*
*                                                     MIN    NOM    MAX    U
*NIT
*                                                     ---    ---    ---    -
*---
*    VDD   Supply voltage                             1.65   1.8    1.95
*  V
*    VDDSHV  Supply voltage                           3.00   3.30   3.60
*  V
*    VDDG    Supply voltage                           1.65   1.80   1.95
*  V
*    VDD2 Supply voltage                              1.65   1.80   1.95
*  V
*
*
*>>>>>>>>>>>>>>>>>>>>>> FINAL MSF REPORT <<<<<<<<<<<<<<<<<<<<<<<<<
* >>>>>>>>>>>>>>>>>>>>>> FOR PRODUCTION RELEASE <<<<<<<<<<<<<<<<<<<<<<<<<
*
*     TEXAS INSTRUMENTS      04/12/2002  13:40:24    SpecCap Version: 7.1.5
*
*     ASIC FINAL SPECIFICATION                       PAGE 5    OF 316
*                           ****** MANUFACTURING ******
*                               REVISION NO : 3.00
*
*7. RECOMMENDED OPERATING CONDITIONS (Continued..)
*
*   RECOMMENDED 1.8V_INDUSTRIAL OPERATING CONDITIONS
*               ------------
*    VI    Input voltage                              0             VDDS
*  V
*    VO    Output voltage                             0             VDDS
*  V
*    VIH   18c05 non-level shifting (LVCMOS)          0.7VDD        VDD
*  V
*    VIH   1833c05 non-level shifting (LVCMOS)        0.7VDD        VDD
*  V
*    VIH   1833c05 level shifting (LVCMOS)            0.7VDDS       VDDS
*  V
*    VIH   1833c05 level shifting (LVTTL)             2.0           VDDS
*  V
*    VIH   1833c05 level shifting (PCI  )             0.475VDDS     VDDS
*  V
*    VIL   18c05 non-level shifting (LVCMOS)          0            0.3VDD
*  V
*    VIL   1833c05 non-level shifting (LVCMOS)        0            0.3VDD
*  V
*    VIL   1833c05 level shifting (LVCMOS)            0            0.3VDDS
*  V
*    VIL   1833c05 level shifting (LVTTL)             0            0.8
*  V
*    VIL   1833c05 level shifting (PCI  )             0            0.325VDDS
*  V
*    tt    Input transitions (tr & tf, 10% to 90
*  ns
*    TA    Operating Ambient Temperature Range        85     25     -40
*  oC
*    TJ    Junction Temperature Range                 125    25     -40
*    oC
*
*
*USER REMARKS
*
*    VOLTAGE NAME           REMARKS
*    -----------------------------------------------------------------------
*-
*    VDD                    Core VDD
*    VSSS                   Secondary VSS
*    VDDSHV1                Secondary Supply Voltage for LVDS/3.3 IOs
*    VDDSHV2                Secondary Supply Voltage for LVDS/3.3 IOs
*    VDDSHV3                Secondary Supply Voltage for LVDS/3.3 IOs
*    VDDSHV4                Secondary Supply Voltage for LVDS/3.3 IOs
*    VDDSHV5                Secondary Supply Voltage for LVDS/3.3 IOs
*    VDDTXBIAS              BIAS Voltage for Tx Gandalf
*    VSSS1                  Secondary VSS
*    VSSS2                  Secondary VSS
*    VSSS3                  Secondary VSS
*    VSSS4                  Secondary VSS
*    VSSS5                  Secondary VSS
*    VDDGANA                Analogue VDD for Tx Gandalf
*    VDDGANB                Analogue VDD for Tx Gandalf
*    VDDGANC                Analogue VDD for Tx Gandalf
*    VDDGAND                Analogue VDD for Tx Gandalf
*    VDDGANE                Analogue VDD for Tx Gandalf
*    VDDGANF                Analogue VDD for Tx Gandalf
*    VDDAHV                 Analogue VDD
*    VDDGANG                Analogue VDD for Tx Gandalf
*    VDD1                   VDD RX Subchip
*    VDD2                   VDD TX Subchip
*    VBIASLVDSIA            BIAS Voltage for LVDS inputs (IREF)
*    VBIASLVDSIB            BIAS Voltage for LVDS inputs (VREF)
*    VBIASLVDSIA1           BIAS Voltage for LVDS inputs (IREF)
*    VBIASLVDSIB1           BIAS Voltage for LVDS inputs (VREF)
*    VBIASLVDSOA            BIAS Voltage for LVDS outputs (IREF)
*    VBIASLVDSOB            BIAS Voltage for LVDS outputs (IREF)
*    VDDSHV                 Secondary Supply Voltage for LVDS/3.3 IOs
*    VSS1                   VSS RX Subchip
*
*>>>>>>>>>>>>>>>>>>>>>> FINAL MSF REPORT <<<<<<<<<<<<<<<<<<<<<<<<<
* >>>>>>>>>>>>>>>>>>>>>> FOR PRODUCTION RELEASE <<<<<<<<<<<<<<<<<<<<<<<<<
*
*     TEXAS INSTRUMENTS      04/12/2002  13:40:24    SpecCap Version: 7.1.5
*
*     ASIC FINAL SPECIFICATION                       PAGE 6    OF 316
*                           ****** MANUFACTURING ******
*                               REVISION NO : 3.00
*
*USER REMARKS (Continued..)
*
*    VOLTAGE NAME           REMARKS
*    -----------------------------------------------------------------------
*-
*    VSS2                   VSS TX Subchip
*    VSSGANA                Analogue VSS for Tx Gandalf
*    VSSGANB                Analogue VSS for Tx Gandalf
*    VSSGANC                Analogue VSS for Tx Gandalf
*    VSSGAND                Analogue VSS for Tx Gandalf
*    VSSGANE                Analogue VSS for Tx Gandalf
*    VSSGANF                Analogue VSS for Tx Gandalf
*    VSSGANG                Analogue VSS for Tx Gandalf
*    VSSA                   Analogue VSS
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*>>>>>>>>>>>>>>>>>>>>>> FINAL MSF REPORT <<<<<<<<<<<<<<<<<<<<<<<<<
* >>>>>>>>>>>>>>>>>>>>>> FOR PRODUCTION RELEASE <<<<<<<<<<<<<<<<<<<<<<<<<
*
*     TEXAS INSTRUMENTS      04/12/2002  13:40:24    SpecCap Version: 7.1.5
*
*     ASIC FINAL SPECIFICATION                       PAGE 7    OF 316
*                           ****** MANUFACTURING ******
*                               REVISION NO : 3.00
*
*8. DIE-ID MACRO TABLE
*
*DIE ID MACRO TABLE LEGEND:
* BIT ORDER :
*     Bit Order  Build Order  BIT ORDER in Table
*     ---------  -----------  ------------------
*     LSBFIRST   LHBUID       LL
*     LSBFIRST   HLBUILD      LH
*     MSBFIRST   LHBUID       ML
*     MSBFIRST   HLBUILD      MH
* FORMAT CODE :
*     64H=64 HAMM
*+-----+-----+---+--+------------+----+--------------+--------+-----+-------
*---+
*|     |OPN  |   |  |            |FC  |              |        |     |
*   |
*|CPN  |UIA  |NOB|BO|            |OO  |              |        |     |
*   |
*|LIA  |TNM  |UFI|IR|            |RD  |              |        |     |    TDL
*   |
*|ONM  |P E  |M T|TD|            |ME  |              |        |     |  PATTE
*RN |
*|C E  |U S  |B  | E|  VARIABLE  |A   |   INSTANCE   |EXPECTED| DIE |    SET
*   |
*|K S  |T    |E  | R|    NAME    |T   |     NAME     | VALUE  | ID  |    NAM
*E  |
*+-----+-----+---+--+------------+----+--------------+--------+-----+-------
*---+
*|T_CL&|TOUT&|26 |  |            |    |              |        |     |RX_SLOW
*   |
*|K(0) |(1)  |   |  |            |    |              |        |     |
*   |
*+-----+-----+---+--+------------+----+--------------+--------+-----+-------
*---+
*
*9. RAM REPAIR DATA TABLE
*
*+--------------+------------+------------+------------+------------+-------
*---+
*|   INSTANCE   |    CELL    |  COMPSTAT  |    DONE    |   CLOCK    | PATTER
*N  |
*|     NAME     |    NAME    |    PIN     |    PIN     |    PIN     | SET NA
*ME |
*+--------------+------------+------------+------------+------------+-------
*---+
*+--------------+------------+------------+------------+------------+-------
*---+
*
*
*
*###########################################################################
*#####
* PACKAGE PART NUMBER : 4201032
* TI PART NUMBER      : F741576B
*###########################################################################
*#####
*
*SPECIFICATIONS REVISIONS
*
*  REVISIONS    DATE         SECTIONS CHANGED
*-------------------------------------------------------------------------
*  0.01         02/5/2002    INITIAL VERSION
*  1.00         02/12/2002   12
*  2.00         02/12/2002   12
*  3.00         04/12/2002   10
*-------------------------------------------------------------------------
*
*
*
*
*
*
*
*
*
*
*
*>>>>>>>>>>>>>>>>>>>>>> FINAL MSF REPORT <<<<<<<<<<<<<<<<<<<<<<<<<
* >>>>>>>>>>>>>>>>>>>>>> FOR PRODUCTION RELEASE <<<<<<<<<<<<<<<<<<<<<<<<<
*
*     TEXAS INSTRUMENTS      04/12/2002  13:40:24    SpecCap Version: 7.1.5
*
*     ASIC FINAL SPECIFICATION                       PAGE 8    OF 316
*                           ****** MANUFACTURING ******
*                               REVISION NO : 3.00
*
*10. FUNCTIONAL DESCRIPTION
*
*The following identifies the items that will be used in the production of t
*his
*ASIC device
*+--------------------------------------------------------------------------
*----+
*|                                                     REV
*    |
*|ITEMS           FILE NAME      TYPE                  NO.   DATE       TIME
*    |
*+--------------------------------------------------------------------------
*----+
*|Verilog Netlist F741576_17120&                       1.0.0 02/6/2002  09:4
*0:03|
*|                1_NODIODE.v
*    |
*|GOOD Netlist    F741576B                                   04/11/2002 13:3
*0:46|
*|GOOD Cell       cell                                 1.9.3 12/17/2001 08:4
*8:53|
*|GOOD Cell       gndlf2t5c0w0                         1.2   10/12/2000 19:1
*0:52|
*|GOOD Cell       analog                               1.5.1 03/14/2000 16:1
*3:13|
*|GOOD Cell       custom_io_v1_&                       1.0.& 08/8/2001  23:2
*2:30|
*|                0_83                                 83
*    |
*|GOOD Cell       p8s22                                1.0   04/28/2000 13:4
*2:27|
*|GOOD Cell       s8p22                                1.0   04/6/2000  10:1
*5:02|
*|GOOD Cell       sync8                                1.0   04/28/2000 10:0
*8:06|
*|GOOD Cell       COMPILER_GOOD&                       1.0.0 02/11/2000 09:0
*7:19|
*|                DB
*    |
*|GOOD Cell       io                                   1.8.0 10/30/2000 16:2
*1:38|
*|GOOD Cell       ga                                   1.6.3 02/23/2000 11:1
*3:39|
*|GOOD Cell       eco                                  1.6.3 02/23/2000 10:5
*8:54|
*|GOOD Cell       arch_ga                              1.5.1 02/21/2000 09:5
*8:23|
*|GOOD Cell       arch                                 1.9.0 01/25/2001 15:2
*5:45|
*|GOOD Package    package                              1.2.0 12/6/2001  11:1
*5:54|
*|GOOD Package    520ghm_starbg&                       1.0.0 04/6/2000  11:0
*5:18|
*|                a_cd_stagg
*    |
*|GOOD Package    520gnp_gbga_c&                       1.0.0 06/12/2000 09:4
*1:26|
*|                d_4201032
*    |
*|GOOD Tester     tester                               1.2.3 03/21/2002 13:3
*6:29|
*|GOOD Tester     gs30.v1.1.8.t&                       1.1.8 04/11/2001 15:5
*9:33|
*|                ester
*    |
*|Pattern set     BIST           BIST_AC               1.00  12/18/2001
*    |
*|Pattern set     BURNIN         SCAN                  2.00  04/04/2002
*    |
*|Pattern set     DCH_ALL        FUNC                  1.00  12/12/2000
*    |
*|Pattern set     DLP53_1        FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_11       FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_12       FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_13       FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_14       FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_16       FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_17       FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_18       FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_19       FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_2        FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_3        FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_4        FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_6        FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_7        FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_8        FUNC                  2.00  01/18/2002
*    |
*|Pattern set     DLP53_9        FUNC                  2.00  01/18/2002
*    |
*|Pattern set     IDQ            IDDQ                  2.00  02/02/2001
*    |
*|Pattern set     LU             IDDQ                  1.00  12/04/2002
*    |
*---------------------------------------------------------------------------
*-----
*|Pattern set     RX_1_1         FUNC_AC               2.00  01/18/2002
*    |
*|Pattern set     RX_622_3305    FUNC_AC               2.00  01/18/2002
*    |
*|Pattern set     RX_622_6610    FUNC_AC               2.00  01/18/2002
*    |
*|Pattern set     RX_SLOW        FUNC                  2.00  01/18/2002
*    |
*|Pattern set     Scan_AC1       SCAN_AC               2.00  12/18/2001
*    |
*|Pattern set     Scan_AC2       SCAN_AC               2.00  12/18/2001
*    |
*|Pattern set     Scan_AC3       SCAN_AC               2.00  12/18/2001
*    |
*|Pattern set     Scan_AC4       SCAN_AC               2.00  12/18/2001
*    |
*|Pattern set     Scanchk        SCANCHK               2.00  12/18/2001
*    |
*|Pattern set     TC_PLL         FUNC                  1.01  12/18/2001
*    |
*|Pattern set     TC_PLL50       APLL_AC               1.00  02/12/2002
*    |
*|Pattern set     TC_PLL83       APLL_AC               2.00  02/11/2002
*    |
*|Pattern set     TX_1_1         FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_10        FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_11        FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_12        FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_13        FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_14        FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_15        FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_16        FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_17        FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_18        FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_19        FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_2         FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_3         FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_4         FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_5         FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_6         FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_7         FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_8         FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_1_9         FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     TX_2           FUNC                  1.00  01/15/2002
*    |
*|Pattern set     TX_3           FUNC_AC               1.00  12/18/2001
*    |
*|Pattern set     VBOX_ALL       VBOXALL,SCAN          1.00  02/11/2002
*    |
*|Pattern set     clv            FUNC                  1.02  12/18/2001
*    |
*|Pattern set     dch            FUNC                  1.01  12/18/2001
*    |
*|Pattern set     die            FUNC                  1.01  12/18/2001
*    |
*|Pattern set     hzv            DC_PARA,Z_STATE       1.02  12/18/2001
*    |
*|Pattern set     pat_1_tclk3_t& SCAN_AC               1.00  11/12/2001
*    |
*|                dl
*    |
*|Pattern set     pat_1_tclk5_t& SCAN_AC               1.00  11/21/2001
*    |
*|                dl
*    |
*|Pattern set     pat_2_tclk3_t& SCAN_AC               1.00  11/12/2001
*    |
*|                dl
*    |
*|Pattern set     pat_3_tclk3_t& SCAN_AC               1.00  11/12/2001
*    |
*|                dl
*    |
*|Pattern set     pat_4_tclk3_t& SCAN_AC               1.00  11/13/2001
*    |
*---------------------------------------------------------------------------
*-----
*|                dl
*    |
*|Pattern set     pat_5_tclk3_t& SCAN_AC               1.00  11/19/2001
*    |
*|                dl
*    |
*|Pattern set     tdv            FUNC                  2.02  12/10/2001
*    |
*|Pattern set     tgl            DC_PARA               1.02  12/18/2001
*    |
*|Pattern set     thr            DC_PARA,VIH_VIL       1.02  12/18/2001
*    |
*---------------------------------------------------------------------------
*-----
*
*
*  PACKAGE PIN COUNT: 520
*  PACKAGE TYPE:      520GNP_GBGA_CD
*
*
*
*    SUPPLY VOLTAGE            MIN: 1.65V
*                              MAX: 1.95V
*
*    OUTPUT CAPACITANCE LOADING
*
*
*
            |==============================================|
            |          TEST CONDITIONS AND LIMITS          |
            |            0.15UM CMOS STANDARD CELL/GATE ARR|
            |==============================================|
            |         | VDD |MIN|        |        |  QRA   |
            |PARAMETER|     | OR|  ROOM  |  HOT   | AT ANY |
            |         |     |MAX|        |        |  TEMP  |
            |==============================================|
            |CONT. AND|     |MIN| -??-   | -??-   | -??-   |
            |  SHORTS |     |   |        |        |        |
            |  TEST   |     |MAX|1.4V    |1.4V    |1.4V    |
            |==============================================|
            |  ICCQ   |1.95V|   |        |        |        |
            |QUIESCENT|     |MIN| -5% OF MEASUREMENT RANGE |
            | SUPPLY  |     |   |        |        |        |
            | CURRENT |     |MAX|151.14UA|181.37UA|1511.425UA|
            |==============================================|
            |         |     |   | VIL=0.0V(TTL,CMOS)       |
            | FUNCT'L |1.65V|   | VIH=3.0V(TTL)            |
            |   AND   | AND |   | VIH=VDD(CMOS)            |
            |STUCK-@-0|1.8V |   |--------------------------|
            |   AND   | AND |   | VOL=0.25*VDD(TTL,CMOS)   |
            |STUCK-@-1|1.95V|   | VOH=0.75*VDD(TTL,CMOS)   |
            |==============================================|
            |         |     |   | VIL=0.0V(TTL,CMOS)       |
            |         |     |   | VIH=3.0V(TTL) VDD(CMOS)  |
            | FUNCT'L |1.65V|   |--------------------------|
            | AT-SPEED| AND |   | VOL=1.3V(TTL)            |
            |  TESTS  |1.95V|   | VOL=0.5*VDD(CMOS)        |
            |         |     |   | VOH=1.3V(TTL)            |
            |         |     |   | VOH=0.5*VDD(CMOS)        |
            |==============================================|
            | IIH: INPUT-HIGH LEAKAGE CURRENT              |
            |----------------------------------------------|
            |   NO    |1.95V|MAX|70NA    |70NA    |1UA     |
            |  INPUT  |     |   |        |        |        |
            |RESISTOR |     |MIN|-35NA   |-35NA   |-500NA  |
            |==============================================|
            | IIL: INPUT-LOW LEAKAGE CURRENT               |
            |----------------------------------------------|
            |   NO    |1.95V|MAX|35NA    |35NA    |500NA   |
            |  INPUT  |     |   |        |        |        |
            |RESISTOR |     |MIN|-70NA   |-70NA   |-1UA    |
            |---------|     |---|--------|--------|--------|
            |  INPUT  |     |MAX|                          |
            | PULL-UP |     |   |LIMITS PER CELL DATA SHEET|
            |RESISTOR |     |MIN|                          |
            |==============================================|
            | VOHL: HIGH-LEVEL OUTPUT VOLTAGE,LOADED       |
            |----------------------------------------------|
            | LOADED  |1.65V|MIN|VTMN1V-0.585V|VTMN1V-0.590V|VTMN1V-0.600V|
            |AT RATED |     |   |        |        |        |
            | BUFFER  |     |   |        |        |        |
            | CURRENT |     |   |        |        |        |
            |==============================================|
            | VOLL: LOW-LEVEL OUTPUT VOLTAGE,LOADED        |
            |----------------------------------------------|
            | LOADED  |1.65V|MAX|0.485V  |0.490V  |0.500V  |
            |AT RATED |     |   |        |        |        |
            | BUFFER  |     |   |        |        |        |
            | CURRENT |     |   |        |        |        |
            |==============================================|
            | VOHN: HIGH-LEVEL OUTPUT VOLTAGE,NO LOAD      |
            |----------------------------------------------|
            | LOADED  |1.65V|MIN|2.65V   |2.65V   |2.60V   |
            |AT 1% OF |     |   |        |        |        |
            | BUFFER  |     |   |        |        |        |
            | CURRENT |     |   |        |        |        |
            |==============================================|
            | VOLN: LOW-LEVEL OUTPUT VOLTAGE,NO LOAD       |
            |----------------------------------------------|
            | LOADED  |1.65V|MAX| -??-   | -??-   | -??-   |
            |AT 1% OF |     |   |        |        |        |
            | BUFFER  |     |   |        |        |        |
            | CURRENT |     |   |        |        |        |
            |---------|     |---|--------|--------|--------|
            |  INPUT  |     |MAX|                          |
            | PULL-UP |     |   |LIMITS PER CELL DATA SHEET|
            |RESISTOR |     |MIN|                          |
            |==============================================|
            |   AC    |1.65V|   | VIL=0.0V(TTL),0.0V(CMOS) |
            |  PROP   | AND |   | VIH=3.0V(TTL), VDD(CMOS) |
            |  DELAY  |1.95V|   |                          |
            |         |     |   |VOL=1.3V(TTL),0.5*VDD(CMOS)
            |         |     |   |VOH=1.3V(TTL),0.5*VDD(CMOS)
            |==============================================|
*
*
*
*
*
*
*                SUMMARY OF 0.15UM CMOS STANDARD CELL/GATE ARRAY GS30 CELLS
*
*
*  PIN  LC  PIN                        SINK/SOURCE     OUTPUT    INPUT
*  NO.  NO. NAME              CELL TYPE  CURRENT        TYPE      TYPE
*      C6XX_OUTP  OPD083              LVDS
*      C6XX_OUTN  OPD083              LVDS
*      C167_15UTP OPD083              LVDS
*      C167_155_O OPD083              LVDS
*      C1G35_OUTP GNDLF2T5C0W0        CML,3-STATE
*      C1G35_OUTN GNDLF2T5C0W0        CML,3-STATE
*      PAR_6XX_TP OPD083              LVDS
*      PAR_6XX_OU OPD083              LVDS
*      P2G7_OUTP  GNDLF2T5C0W0        CML,3-STATE
*      P2G7_OUTN  GNDLF2T5C0W0        CML,3-STATE
*      D2G7_OUTP3 GNDLF2T5C0W0        CML,3-STATE
*      D2G7_OUTP2 GNDLF2T5C0W0        CML,3-STATE
*      D2G7_OUTP1 GNDLF2T5C0W0        CML,3-STATE
*      D2G7_OUTP0 GNDLF2T5C0W0        CML,3-STATE
*      D2G7_OUTN3 GNDLF2T5C0W0        CML,3-STATE
*      D2G7_OUTN2 GNDLF2T5C0W0        CML,3-STATE
*      D2G7_OUTN1 GNDLF2T5C0W0        CML,3-STATE
*      D2G7_OUTN0 GNDLF2T5C0W0        CML,3-STATE
*      MODE2G7    IDH09                             CMOS,PULLUP   20UA
*      DX6X_OUTP5 OPD083              LVDS
*      DX6X_OUTP4 OPD083              LVDS
*      DX6X_OUTP3 OPD083              LVDS
*      DX6X_OUTP2 OPD083              LVDS
*      DX6X_OUTP1 OPD083              LVDS
*      D6XX_OUTP1 OPD083              LVDS
*      D6XX_OUTP9 OPD083              LVDS
*      D6XX_OUTP8 OPD083              LVDS
*      D6XX_OUTP7 OPD083              LVDS
*      D6XX_OUTP6 OPD083              LVDS
*      D6XX_OUTP5 OPD083              LVDS
*      D6XX_OUTP4 OPD083              LVDS
*      D6XX_OUTP3 OPD083              LVDS
*      D6XX_OUTP2 OPD083              LVDS
*      D6XX_OUT10 OPD083              LVDS
*      D6XX_OUTP0 OPD083              LVDS
*      DX6X_OUTN5 OPD083              LVDS
*      DX6X_OUTN4 OPD083              LVDS
*      DX6X_OUTN3 OPD083              LVDS
*      DX6X_OUTN2 OPD083              LVDS
*      DX6X_OUTN1 OPD083              LVDS
*      D6XX_OUTN1 OPD083              LVDS
*      D6XX_OUTN9 OPD083              LVDS
*      D6XX_OUTN8 OPD083              LVDS
*      D6XX_OUTN7 OPD083              LVDS
*      D6XX_OUTN6 OPD083              LVDS
*      D6XX_OUTN5 OPD083              LVDS
*      D6XX_OUTN4 OPD083              LVDS
*      D6XX_OUTN3 OPD083              LVDS
*      D6XX_OUTN2 OPD083              LVDS
*      D6XX_OUT11 OPD083              LVDS
*      D6XX_OUTN0 OPD083              LVDS
*      D622_INP15 IPD174                            LVDS
*      D622_INP14 IPD174                            LVDS
*      D622_INP13 IPD174                            LVDS
*      D622_INP12 IPD174                            LVDS
*      D622_INP11 IPD174                            LVDS
*      D622_INP10 IPD174                            LVDS
*      D622_INP9  IPD174                            LVDS
*      D622_INP8  IPD174                            LVDS
*      D622_INP7  IPD174                            LVDS
*      D622_INP6  IPD174                            LVDS
*      D622_INP5  IPD174                            LVDS
*      D622_INP4  IPD174                            LVDS
*      D622_INP3  IPD174                            LVDS
*      D622_INP2  IPD174                            LVDS
*      D622_INP1  IPD174                            LVDS
*      D622_INP0  IPD174                            LVDS
*      D622_INN15 IPD174                            LVDS
*      D622_INN14 IPD174                            LVDS
*      D622_INN13 IPD174                            LVDS
*      D622_INN12 IPD174                            LVDS
*      D622_INN11 IPD174                            LVDS
*      D622_INN10 IPD174                            LVDS
*      D622_INN9  IPD174                            LVDS
*      D622_INN8  IPD174                            LVDS
*      D622_INN7  IPD174                            LVDS
*      D622_INN6  IPD174                            LVDS
*      D622_INN5  IPD174                            LVDS
*      D622_INN4  IPD174                            LVDS
*      D622_INN3  IPD174                            LVDS
*      D622_INN2  IPD174                            LVDS
*      D622_INN1  IPD174                            LVDS
*      D622_INN0  IPD174                            LVDS
*      C155_BPLNP IPD174                            LVDS
*      C155_BPL_I IPD174                            LVDS
*      C8K_BPLP   IPD174                            LVDS
*      C8K_BPLN   IPD174                            LVDS
*      C155_CSDNP IPD174                            LVDS
*      C155_CSD_I IPD174                            LVDS
*      C8K_CSDP   IPD174                            LVDS
*      C8K_CSDN   IPD174                            LVDS
*      C5_HCH_RX  OUI83     8MA  8MA  CMOS,3-STATE
*      P5_HCH_RX  OUI83     8MA  8MA  CMOS,3-STATE
*      D5_HCH_RX_ IDH09                             CMOS,PULLUP   20UA
*      D5_HCH_RX7 IDH09                             CMOS,PULLUP   20UA
*      D5_HCH_RX6 IDH09                             CMOS,PULLUP   20UA
*      D5_HCH_RX5 IDH09                             CMOS,PULLUP   20UA
*      D5_HCH_RX4 IDH09                             CMOS,PULLUP   20UA
*      D5_HCH_RX3 IDH09                             CMOS,PULLUP   20UA
*      D5_HCH_RX2 IDH09                             CMOS,PULLUP   20UA
*      D5_HCH_RX1 IDH09                             CMOS,PULLUP   20UA
*      D5_HCH_RX0 IDH09                             CMOS,PULLUP   20UA
*      D10_BXI_RX IDH09                             CMOS,PULLUP   20UA
*      C6XX_EXTP  IPD174                            LVDS
*      C6XX_EXTN  IPD174                            LVDS
*      C666_EXTP  IPD174                            LVDS
*      C666_EXTN  IPD174                            LVDS
*      C80_EXTP   OPD083              LVDS
*      C80_EXTN   OPD083              LVDS
*      C83_EXTP   OPD083              LVDS
*      C83_EXTN   OPD083              LVDS
*      ONDDSI     IDH04                             CMOS
*      ONMFRI     IDH04                             CMOS
*      ONCKI      IDH09                             CMOS
*      CICLK      IDH09                             CMOS,PULLUP   20UA
*      CICSN      IDH09                             CMOS
*      CIINF7     IDI09                             CMOS,PULLUP   100UA
*      CIINF7     OUKB3               CMOS,3-STATE  CMOS,PULLUP   100UA
*      CIINF6     IDI09                             CMOS,PULLUP   100UA
*      CIINF6     OUKB3               CMOS,3-STATE  CMOS,PULLUP   100UA
*      CIINF5     IDI09                             CMOS,PULLUP   100UA
*      CIINF5     OUKB3               CMOS,3-STATE  CMOS,PULLUP   100UA
*      CIINF4     IDI09                             CMOS,PULLUP   100UA
*      CIINF4     OUKB3               CMOS,3-STATE  CMOS,PULLUP   100UA
*      CIINF3     IDI09                             CMOS,PULLUP   100UA
*      CIINF3     OUKB3               CMOS,3-STATE  CMOS,PULLUP   100UA
*      CIINF2     IDI09                             CMOS,PULLUP   100UA
*      CIINF2     OUKB3               CMOS,3-STATE  CMOS,PULLUP   100UA
*      CIINF1     IDI09                             CMOS,PULLUP   100UA
*      CIINF1     OUKB3               CMOS,3-STATE  CMOS,PULLUP   100UA
*      CIINF0     IDI09                             CMOS,PULLUP   100UA
*      CIINF0     OUKB3               CMOS,3-STATE  CMOS,PULLUP   100UA
*      CIACKN     OUKB3     24MA  12MA  CMOS,3-STATE
*      CICSRN     OUKB3     24MA  12MA  CMOS,3-STATE
*      CTLID_RSTN IDI09                             CMOS
*      DATA_V_INP IPD174                            LVDS
*      DATA_VALID IPD174                            LVDS
*      ES_SPILLP  IPD174                            LVDS
*      ES_SPILLN  IPD174                            LVDS
*      DATVAL_INP IPD174                            LVDS
*      DATVAL_ES_ IPD174                            LVDS
*      RECENTER   OUK83     8MA  8MA  CMOS,3-STATE
*      MX_PAR_TOG OUK83     8MA  8MA  CMOS,3-STATE
*      AISINSMSOH IDH09                             CMOS,PULLUP   20UA
*      RSTN       IDH04                             CMOS
*      POISON     IDH04                             CMOS
*      REIRDI     IDH09                             CMOS
*      KAINP      IPD174                            LVDS
*      KAINN      IPD174                            LVDS
*      KBINP      IPD174                            LVDS
*      KBINN      IPD174                            LVDS
*      GPIO15     IDI09                             CMOS,PULLUP   100UA
*      GPIO15     OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO14     IDI09                             CMOS,PULLUP   100UA
*      GPIO14     OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO13     IDI09                             CMOS,PULLUP   100UA
*      GPIO13     OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO12     IDI09                             CMOS,PULLUP   100UA
*      GPIO12     OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO11     IDI09                             CMOS,PULLUP   100UA
*      GPIO11     OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO10     IDI09                             CMOS,PULLUP   100UA
*      GPIO10     OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO9      IDI09                             CMOS,PULLUP   100UA
*      GPIO9      OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO8      IDI09                             CMOS,PULLUP   100UA
*      GPIO8      OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO7      IDI09                             CMOS,PULLUP   100UA
*      GPIO7      OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO6      IDI09                             CMOS,PULLUP   100UA
*      GPIO6      OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO5      IDI09                             CMOS,PULLUP   100UA
*      GPIO5      OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO4      IDI09                             CMOS,PULLUP   100UA
*      GPIO4      OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO3      IDI09                             CMOS,PULLUP   100UA
*      GPIO3      OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO2      IDI09                             CMOS,PULLUP   100UA
*      GPIO2      OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO1      IDI09                             CMOS,PULLUP   100UA
*      GPIO1      OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      GPIO0      IDI09                             CMOS,PULLUP   100UA
*      GPIO0      OUK83               CMOS,3-STATE  CMOS,PULLUP   100UA
*      BYPASS_PLL IDH09                             CMOS,PULLUP   20UA
*      IDDQN      IDH04                             CMOS
*      THZ_N      IDH09                             CMOS,PULLUP   20UA
*      T_SET_BD2I IDH09                             CMOS,PULLUP   20UA
*      T_DISARST  IDH09                             CMOS,PULLUP   20UA
*      TOUT7      OUK43     4MA  4MA  CMOS,3-STATE
*      TOUT6      OUK43     4MA  4MA  CMOS,3-STATE
*      TOUT5      OUK43     4MA  4MA  CMOS,3-STATE
*      TOUT4      OUK43     4MA  4MA  CMOS,3-STATE
*      TOUT3      OUK43     4MA  4MA  CMOS,3-STATE
*      TOUT2      OUK43     4MA  4MA  CMOS,3-STATE
*      TOUT1      OUK43     4MA  4MA  CMOS,3-STATE
*      TOUT0      OUK43     4MA  4MA  CMOS,3-STATE
*      TPO        OUK43     4MA  4MA  CMOS,3-STATE
*      TC166P     IPD174                            LVDS
*      TC166N     IPD174                            LVDS
*      T_CLK13    IDH09                             CMOS,PULLUP   20UA
*      T_CLK12    IDH09                             CMOS,PULLUP   20UA
*      T_CLK11    IDH09                             CMOS,PULLUP   20UA
*      T_CLK10    IDH09                             CMOS,PULLUP   20UA
*      T_CLK9     IDH09                             CMOS,PULLUP   20UA
*      T_CLK8     IDH09                             CMOS,PULLUP   20UA
*      T_CLK7     IDH09                             CMOS,PULLUP   20UA
*      T_CLK6     IDH09                             CMOS,PULLUP   20UA
*      T_CLK5     IDH09                             CMOS,PULLUP   20UA
*      T_CLK4     IDH09                             CMOS,PULLUP   20UA
*      T_CLK3     IDH09                             CMOS,PULLUP   20UA
*      T_CLK2     IDH09                             CMOS,PULLUP   20UA
*      T_CLK1     IDH09                             CMOS,PULLUP   20UA
*      T_CLK0     IDH09                             CMOS,PULLUP   20UA
*      TM_SCAN    IDH09                             CMOS,PULLUP   20UA
*      TE_SCAN    IDH09                             CMOS,PULLUP   20UA
*      TSCI7      IDH09                             CMOS,PULLUP   20UA
*      TSCI6      IDH09                             CMOS,PULLUP   20UA
*      TSCI5      IDH09                             CMOS,PULLUP   20UA
*      TSCI4      IDH09                             CMOS,PULLUP   20UA
*      TSCI3      IDH09                             CMOS,PULLUP   20UA
*      TSCI2      IDH09                             CMOS,PULLUP   20UA
*      TSCI1      IDH09                             CMOS,PULLUP   20UA
*      TSCI0      IDH09                             CMOS,PULLUP   20UA
*      TDO        OUKB3     24MA  12MA  CMOS,3-STATE
*      TDI        IDH09                             CMOS,PULLUP   20UA
*      TCK        IDH09                             CMOS
*      TMS        IDH09                             CMOS,PULLUP   20UA
*      TRSTN      IDH09                             CMOS,PULLUP   20UA
*      TBIST_RUN  IDH09                             CMOS,PULLUP   20UA
*      TBIST_ROT  IDH09                             CMOS,PULLUP   20UA
*      TM_RAM     IDH09                             CMOS,PULLUP   20UA
*      TBIST_FAIL OUK43     4MA  4MA  CMOS,3-STATE
*      TBIST_DONE OUK43     4MA  4MA  CMOS,3-STATE
*      TM_PLL     IDH09                             CMOS,PULLUP   20UA
*      TPLL_TEST1 IDH09                             CMOS,PULLUP   20UA
*      TM_HSI     IDH09                             CMOS,PULLUP   20UA
*      THSI_BYPS1 IDH09                             CMOS,PULLUP   20UA
*      THSI_BYPAS IDH09                             CMOS,PULLUP   20UA
*      THSI_SEL01 IDH09                             CMOS,PULLUP   20UA
*      THSI_SEL00 IDH09                             CMOS,PULLUP   20UA
*      THSI_SEL11 IDH09                             CMOS,PULLUP   20UA
*      THSI_SEL10 IDH09                             CMOS,PULLUP   20UA
*      THSI_PWRDN IDH09                             CMOS,PULLUP   20UA
*      RSTZ_HSI   IDH09                             CMOS,PULLUP   20UA
*      THSI_INA   CK814A                            TESTINA
*      THSI_OPEN  IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ15 IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ14 IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ13 IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ12 IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ11 IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ10 IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ9  IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ8  IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ7  IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ6  IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ5  IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ4  IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ3  IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ2  IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ1  IDH09                             CMOS,PULLUP   20UA
*      TESTSELZ0  IDH09                             CMOS,PULLUP   20UA
*      THSI_STAND IDH09                             CMOS,PULLUP   20UA
*      THSI_CKGE1 IDH09                             CMOS,PULLUP   20UA
*      THSI_CKGEN IDH09                             CMOS,PULLUP   20UA
*      THSI_SELN1 IDH09                             CMOS,PULLUP   20UA
*      THSI_SEL_E IDH09                             CMOS,PULLUP   20UA
*      THSI_ACC_S IDH09                             CMOS,PULLUP   20UA
*      THSI_RESYN IDH09                             CMOS,PULLUP   20UA
*      TC78_SEL   IDH09                             CMOS,PULLUP   20UA
*      THSI_OUTA  CK814A              AOUT
*      THSI_TCKOU OUK43     4MA  4MA  CMOS,3-STATE
*      THSI_TESTD OUK43     4MA  4MA  CMOS,3-STATE
*      THSI_OUTD1 OUK43     4MA  4MA  CMOS,3-STATE
*      THSI_OUTD0 OUK43     4MA  4MA  CMOS,3-STATE
*      THSI_P2S   IDH09                             CMOS,PULLUP   20UA
*      THSI_D787  IDH04                             CMOS
*      THSI_D786  IDH04                             CMOS
*      THSI_D785  IDH04                             CMOS
*      THSI_D784  IDH04                             CMOS
*      THSI_D783  IDH04                             CMOS
*      THSI_D782  IDH04                             CMOS
*      THSI_D781  IDH04                             CMOS
*      THSI_D780  IDH04                             CMOS
*      BYPASS_HSI IDH09                             CMOS,PULLUP   20UA
*      TC622P     IPD174                            LVDS
*      TC622N     IPD174                            LVDS
*      RSTZ_SHSI  IDH09                             CMOS,PULLUP   20UA
*      THSI_RP_BY IDH09                             CMOS,PULLUP   20UA
*      C1G35_INP  GNDLF2T5C0W0                      CML
*      C1G35_INN  GNDLF2T5C0W0                      CML
*      T2G7_BYPAS IDH09                             CMOS,PULLUP   20UA
*      T2G7_TDO   OUK43     4MA  4MA  CMOS,3-STATE
*      T2G7_PRMP0 IDH09                             CMOS,PULLUP   20UA
*      T2G7_PRE_E IDH09                             CMOS,PULLUP   20UA
*      TM_SHSI    IDH09                             CMOS,PULLUP   20UA
*      T2G7_TDI   IDH09                             CMOS,PULLUP   20UA
*      PRBSGSYNC4 OUK43     4MA  4MA  CMOS,3-STATE
*      PRBSGSYNC3 OUK43     4MA  4MA  CMOS,3-STATE
*      PRBSGSYNC2 OUK43     4MA  4MA  CMOS,3-STATE
*      PRBSGSYNC1 OUK43     4MA  4MA  CMOS,3-STATE
*      PRBSGSYNC0 OUK43     4MA  4MA  CMOS,3-STATE






                         Autogen DC Pattern Scanner


 Pin Pin                  Pin   In   In   In   In   In   In   Out  Out  Out
 No. Name                 Type  Low  Low  Low  Hi   Hi   Hi   Low  Hi   HiZ
                                UNK  ON   OFF  UNK  ON   OFF
 ---------------------------------------------------------------------------
P29  C6XX_OUTP            OU      0    0    0    0    0    0    9    8    5
P28  C6XX_OUTN            OU      0    0    0    0    0    0    8    9    5
G30  C167_155_OUTP        OU      0    0    0    0    0    0    9    8    5
G29  C167_155_OUTN        OU      0    0    0    0    0    0    8    9    5
B18  C1G35_OUTP           OU      0    0    0    0    0    0    0    0    0
A18  C1G35_OUTN           OU      0    0    0    0    0    0    0    0    0
Y30  PAR_6XX_OUTP         OU      0    0    0    0    0    0    9    8    5
Y31  PAR_6XX_OUTN         OU      0    0    0    0    0    0    8    9    5
B20  P2G7_OUTP            OU      0    0    0    0    0    0    0    0    0
A20  P2G7_OUTN            OU      0    0    0    0    0    0    0    0    0
B19  D2G7_OUTP(3)         OU      0    0    0    0    0    0    0    0    0
C15  D2G7_OUTP(2)         OU      0    0    0    0    0    0    0    0    0
C14  D2G7_OUTP(1)         OU      0    0    0    0    0    0    0    0    0
A13  D2G7_OUTP(0)         OU      0    0    0    0    0    0    0    0    0
A19  D2G7_OUTN(3)         OU      0    0    0    0    0    0    0    0    0
D15  D2G7_OUTN(2)         OU      0    0    0    0    0    0    0    0    0
D14  D2G7_OUTN(1)         OU      0    0    0    0    0    0    0    0    0
B13  D2G7_OUTN(0)         OU      0    0    0    0    0    0    0    0    0
A22  MODE2G7              IN      0    6    0    0    0    0    0    0    0
N31  D6XX_OUTP(15)        OU      0    0    0    0    0    0    9    8    5
N29  D6XX_OUTP(14)        OU      0    0    0    0    0    0    9    8    5
M31  D6XX_OUTP(13)        OU      0    0    0    0    0    0    9    8    5
M29  D6XX_OUTP(12)        OU      0    0    0    0    0    0    9    8    5
L30  D6XX_OUTP(11)        OU      0    0    0    0    0    0    9    8    5
K30  D6XX_OUTP(10)        OU      0    0    0    0    0    0    9    8    5
J30  D6XX_OUTP(9)         OU      0    0    0    0    0    0    9    8    5
H30  D6XX_OUTP(8)         OU      0    0    0    0    0    0    9    8    5
W28  D6XX_OUTP(7)         OU      0    0    0    0    0    0    9    8    5
W30  D6XX_OUTP(6)         OU      0    0    0    0    0    0    9    8    5
V28  D6XX_OUTP(5)         OU      0    0    0    0    0    0    9    8    5
V30  D6XX_OUTP(4)         OU      0    0    0    0    0    0    9    8    5
U28  D6XX_OUTP(3)         OU      0    0    0    0    0    0    9    8    5
U30  D6XX_OUTP(2)         OU      0    0    0    0    0    0    9    8    5
R29  D6XX_OUTP(1)         OU      0    0    0    0    0    0    9    8    5
P31  D6XX_OUTP(0)         OU      0    0    0    0    0    0    9    8    5
N30  D6XX_OUTN(15)        OU      0    0    0    0    0    0    8    9    5
N28  D6XX_OUTN(14)        OU      0    0    0    0    0    0    8    9    5
M30  D6XX_OUTN(13)        OU      0    0    0    0    0    0    8    9    5
M28  D6XX_OUTN(12)        OU      0    0    0    0    0    0    8    9    5
L29  D6XX_OUTN(11)        OU      0    0    0    0    0    0    8    9    5
K29  D6XX_OUTN(10)        OU      0    0    0    0    0    0    8    9    5
J29  D6XX_OUTN(9)         OU      0    0    0    0    0    0    8    9    5
H29  D6XX_OUTN(8)         OU      0    0    0    0    0    0    8    9    5
W29  D6XX_OUTN(7)         OU      0    0    0    0    0    0    8    9    5
W31  D6XX_OUTN(6)         OU      0    0    0    0    0    0    8    9    5
V29  D6XX_OUTN(5)         OU      0    0    0    0    0    0    8    9    5
V31  D6XX_OUTN(4)         OU      0    0    0    0    0    0    8    9    5
U29  D6XX_OUTN(3)         OU      0    0    0    0    0    0    8    9    5
U31  D6XX_OUTN(2)         OU      0    0    0    0    0    0    8    9    5
R28  D6XX_OUTN(1)         OU      0    0    0    0    0    0    8    9    5
P30  D6XX_OUTN(0)         OU      0    0    0    0    0    0    8    9    5
D11  C5_HCH_RX            OU      0    0    0    0    0    0    9    8    5
A10  P5_HCH_RX            OU      0    0    0    0    0    0    9    8    5
D10  D5_HCH_RX_PAR        IN      0    6    0    0    0    0    0    0    0
A9   D5_HCH_RX(7)         IN      0    7    0    0    0    0    0    0    0
E10  D5_HCH_RX(6)         IN      0    6    0    0    0    0    0    0    0
B9   D5_HCH_RX(5)         IN      0    7    0    0    0    0    0    0    0
C9   D5_HCH_RX(4)         IN      0    6    0    0    0    0    0    0    0
D9   D5_HCH_RX(3)         IN      0    7    0    0    0    0    0    0    0
A8   D5_HCH_RX(2)         IN      0    6    0    0    0    0    0    0    0
E9   D5_HCH_RX(1)         IN      0    7    0    0    0    0    0    0    0
B8   D5_HCH_RX(0)         IN      0    6    0    0    0    0    0    0    0
C10  D10_BXI_RX           IN      0    7    0    0    0    0    0    0    0
AA29 C80_EXTP             OU      0    0    0    0    0    0    9    8    5
AA30 C80_EXTN             OU      0    0    0    0    0    0    8    9    5
Y28  C83_EXTP             OU      0    0    0    0    0    0    9    8    5
Y29  C83_EXTN             OU      0    0    0    0    0    0    8    9    5
E22  CICLK                IN      0    7    0    0    0    0    0    0    0
B25  CIINF(7)             IO      0    7    0    0    0    0    9    8    0
E24  CIINF(6)             IO      0    6    0    0    0    0    9    8    0
A25  CIINF(5)             IO      0    7    0    0    0    0    9    8    0
D24  CIINF(4)             IO      0    6    0    0    0    0    9    8    0
C24  CIINF(3)             IO      0    7    0    0    0    0    9    8    0
B24  CIINF(2)             IO      0    6    0    0    0    0    9    8    0
E23  CIINF(1)             IO      0    7    0    0    0    0    9    8    0
A24  CIINF(0)             IO      0    6    0    0    0    0    9    8    0
C22  CIACKN               OU      0    0    0    0    0    0    9    8    5
D22  CICSRN               OU      0    0    0    0    0    0    9    8    5
F5   RECENTER             OU      0    0    0    0    0    0    9    8    5
E2   MX_PAR_TOG           OU      0    0    0    0    0    0    9    8    5
H4   AISINSMSOH           IN      0    7    0    0    0    0    0    0    0
J5   GPIO(15)             IO      0    7    0    0    0    0    9    8    0
J4   GPIO(14)             IO      0    6    0    0    0    0    9    8    0
J2   GPIO(13)             IO      0    7    0    0    0    0    9    8    0
J1   GPIO(12)             IO      0    6    0    0    0    0    9    8    0
K3   GPIO(11)             IO      0    7    0    0    0    0    9    8    0
K1   GPIO(10)             IO      0    6    0    0    0    0    9    8    0
L3   GPIO(9)              IO      0    7    0    0    0    0    9    8    0
M5   GPIO(8)              IO      0    6    0    0    0    0    9    8    0
M3   GPIO(7)              IO      0    7    0    0    0    0    9    8    0
M1   GPIO(6)              IO      0    6    0    0    0    0    9    8    0
N4   GPIO(5)              IO      0    7    0    0    0    0    9    8    0
N2   GPIO(4)              IO      0    6    0    0    0    0    9    8    0
P5   GPIO(3)              IO      0    7    0    0    0    0    9    8    0
P3   GPIO(2)              IO      0    6    0    0    0    0    9    8    0
P1   GPIO(1)              IO      0    7    0    0    0    0    9    8    0
R4   GPIO(0)              IO      0    6    0    0    0    0    9    8    0
U1   BYPASS_PLL           IN      0    7    0    0    0    0    0    0    0
C6   T_SET_BD2IN          IN      0    6    0    0    0    0    0    0    0
AG4  T_DISARST            IN      0    7    0    0    0    0    0    0    0
H5   TOUT(7)              OU      0    0    0    0    0    0    9    8    5
G2   TOUT(6)              OU      0    0    0    0    0    0    9    8    5
G3   TOUT(5)              OU      0    0    0    0    0    0    9    8    5
G4   TOUT(4)              OU      0    0    0    0    0    0    9    8    5
F2   TOUT(3)              OU      0    0    0    0    0    0    9    8    5
G5   TOUT(2)              OU      0    0    0    0    0    0    9    8    5
F3   TOUT(1)              OU      0    0    0    0    0    0    9    8    5
E1   TOUT(0)              OU      0    0    0    0    0    0    9    8    5
AH6  TPO                  OU      0    0    0    0    0    0    9    8    5
AE3  T_CLK(13)            IN      0    6    0    0    0    0    0    0    0
B4   T_CLK(12)            IN      0    7    0    0    0    0    0    0    0
B6   T_CLK(11)            IN      0    6    0    0    0    0    0    0    0
AA3  T_CLK(10)            IN      0    6    0    0    0    0    0    0    0
AA2  T_CLK(9)             IN      0    7    0    0    0    0    0    0    0
Y5   T_CLK(8)             IN      0    6    0    0    0    0    0    0    0
Y4   T_CLK(7)             IN      0    7    0    0    0    0    0    0    0
Y3   T_CLK(6)             IN      0    6    0    0    0    0    0    0    0
Y2   T_CLK(5)             IN      0    7    0    0    0    0    0    0    0
Y1   T_CLK(4)             IN      0    6    0    0    0    0    0    0    0
W5   T_CLK(3)             IN      0    7    0    0    0    0    0    0    0
W4   T_CLK(2)             IN      0    6    0    0    0    0    0    0    0
W3   T_CLK(1)             IN      0    7    0    0    0    0    0    0    0
W2   T_CLK(0)             IN      0    6    0    0    0    0    0    0    0
H3   TM_SCAN              IN      0    6    0    0    0    0    0    0    0
R2   TE_SCAN              IN      0    7    0    0    0    0    0    0    0
AC2  TSCI(7)              IN      0    6    0    0    0    0    0    0    0
AB5  TSCI(6)              IN      0    7    0    0    0    0    0    0    0
AC1  TSCI(5)              IN      0    6    0    0    0    0    0    0    0
AB4  TSCI(4)              IN      0    7    0    0    0    0    0    0    0
AB3  TSCI(3)              IN      0    6    0    0    0    0    0    0    0
AB2  TSCI(2)              IN      0    7    0    0    0    0    0    0    0
AB1  TSCI(1)              IN      0    6    0    0    0    0    0    0    0
AA4  TSCI(0)              IN      0    7    0    0    0    0    0    0    0
D6   TDO                  OU      0    0    0    0    0    0    4    3    5
D2   TDI                  IN      0    2    0    0    0    0    0    0    0
C5   TMS                  IN      0    7    0    0    0    0    0    0    0
E4   TRSTN                IN      0    1    0    0    0    0    0    0    0
U2   TBIST_RUN            IN      0    6    0    0    0    0    0    0    0
AC4  TBIST_ROT            IN      0    7    0    0    0    0    0    0    0
U3   TM_RAM               IN      0    7    0    0    0    0    0    0    0
V5   TBIST_FAILN          OU      0    0    0    0    0    0    9    8    5
V4   TBIST_DONE           OU      0    0    0    0    0    0    9    8    5
AE27 TM_PLL               IN      0    6    0    0    0    0    0    0    0
R1   TPLL_TEST1           IN      0    6    0    0    0    0    0    0    0
AK28 TM_HSI               IN      0    7    0    0    0    0    0    0    0
AF4  THSI_BYPASS(1)       IN      0    6    0    0    0    0    0    0    0
AF27 THSI_BYPASS(0)       IN      0    7    0    0    0    0    0    0    0
AF28 THSI_SEL0(1)         IN      0    7    0    0    0    0    0    0    0
AG30 THSI_SEL0(0)         IN      0    6    0    0    0    0    0    0    0
AF5  THSI_SEL1(1)         IN      0    6    0    0    0    0    0    0    0
AG2  THSI_SEL1(0)         IN      0    7    0    0    0    0    0    0    0
AJ27 THSI_PWRDN           IN      0    6    0    0    0    0    0    0    0
AG26 RSTZ_HSI             IN      0    7    0    0    0    0    0    0    0
AG3  THSI_OPEN            IN      0    7    0    0    0    0    0    0    0
AE2  TESTSELZ(15)         IN      0    7    0    0    0    0    0    0    0
AD5  TESTSELZ(14)         IN      0    6    0    0    0    0    0    0    0
AE1  TESTSELZ(13)         IN      0    7    0    0    0    0    0    0    0
AD4  TESTSELZ(12)         IN      0    6    0    0    0    0    0    0    0
AD3  TESTSELZ(11)         IN      0    7    0    0    0    0    0    0    0
AD2  TESTSELZ(10)         IN      0    6    0    0    0    0    0    0    0
AC5  TESTSELZ(9)          IN      0    7    0    0    0    0    0    0    0
AD1  TESTSELZ(8)          IN      0    6    0    0    0    0    0    0    0
AH26 TESTSELZ(7)          IN      0    6    0    0    0    0    0    0    0
AL27 TESTSELZ(6)          IN      0    7    0    0    0    0    0    0    0
AJ26 TESTSELZ(5)          IN      0    6    0    0    0    0    0    0    0
AG25 TESTSELZ(4)          IN      0    7    0    0    0    0    0    0    0
AK26 TESTSELZ(3)          IN      0    6    0    0    0    0    0    0    0
AH25 TESTSELZ(2)          IN      0    7    0    0    0    0    0    0    0
AJ25 TESTSELZ(1)          IN      0    6    0    0    0    0    0    0    0
AK25 TESTSELZ(0)          IN      0    7    0    0    0    0    0    0    0
AH2  THSI_STANDBY         IN      0    6    0    0    0    0    0    0    0
AF2  THSI_CKGEN(1)        IN      0    6    0    0    0    0    0    0    0
AG31 THSI_CKGEN(0)        IN      0    6    0    0    0    0    0    0    0
AG1  THSI_SEL_EN(1)       IN      0    7    0    0    0    0    0    0    0
AF29 THSI_SEL_EN(0)       IN      0    7    0    0    0    0    0    0    0
AE4  THSI_ACC_START       IN      0    7    0    0    0    0    0    0    0
AE5  THSI_RESYNCHZ        IN      0    7    0    0    0    0    0    0    0
AF3  TC78_SEL             IN      0    6    0    0    0    0    0    0    0
AG7  THSI_OUTA            OU      0    0    0    0    0    0    0    0    0
AJ5  THSI_TCKOUT          OU      0    0    0    0    0    0    9    8    5
AK4  THSI_TESTDOUT        OU      0    0    0    0    0    0    9    8    5
AG6  THSI_OUTD(1)         OU      0    0    0    0    0    0    9    8    5
AH30 THSI_OUTD(0)         OU      0    0    0    0    0    0    9    8    5
C26  THSI_P2S             IN      0    6    0    0    0    0    0    0    0
D25  BYPASS_HSI_PLL       IN      0    7    0    0    0    0    0    0    0
E25  RSTZ_SHSI            IN      0    7    0    0    0    0    0    0    0
B26  THSI_RP_BYPASS       IN      0    6    0    0    0    0    0    0    0
D20  T2G7_BYPASS          IN      0    7    0    0    0    0    0    0    0
B11  T2G7_TDO             OU      0    0    0    0    0    0    9    8    5
D21  T2G7_PRE_EMP0        IN      0    7    0    0    0    0    0    0    0
C21  T2G7_PRE_EMP1        IN      0    6    0    0    0    0    0    0    0
E20  TM_SHSI              IN      0    6    0    0    0    0    0    0    0
B21  T2G7_TDI             IN      0    7    0    0    0    0    0    0    0
A12  PRBSGSYNC(4)         OU      0    0    0    0    0    0    9    8    5
B12  PRBSGSYNC(3)         OU      0    0    0    0    0    0    9    8    5
C12  PRBSGSYNC(2)         OU      0    0    0    0    0    0    9    8    5
D12  PRBSGSYNC(1)         OU      0    0    0    0    0    0    9    8    5
E12  PRBSGSYNC(0)         OU      0    0    0    0    0    0    9    8    5
 ---------------------------------------------------------------------------

                                  I/Os In
 TDL Name        Pattern   PM     Z-State    DC PM     ICCQ PM
 --------        -------   --     -------    -----     -------
 hzv                   2    1       No        Yes       No
 hzv                  15    2       No        Yes       No
 hzv                  21    3       No        Yes       No
 hzv                  23    4       No        Yes       No
 hzv                  39    5       No        Yes       No
 tgl                 520    6       No        Yes       No
 tgl                 524    7       No        Yes       No
 tgl                1992    8       No        Yes       No
 tgl                2483    9       No        Yes       No
 IDQ                  44   10       No        No        Yes
 IDQ                  47   11       No        No        Yes
 IDQ                  50   12       No        No        Yes
 IDQ                  53   13       No        No        Yes
 IDQ                  56   14       No        No        Yes
 IDQ                  59   15       No        No        Yes
 IDQ                  62   16       No        No        Yes
 IDQ                  65   17       No        No        Yes
 IDQ                  68   18       No        No        Yes
 IDQ                  71   19       No        No        Yes
 IDQ                  74   20       No        No        Yes
 IDQ                  77   21       No        No        Yes
 LU                 4893   22       No        No        Yes
  None of these patterns contain I/O pins in Hi-Z state
**** WARNING: Cannot find PM stop to perform VOL for pin C1G35_OUTP(B18)
**** WARNING: Cannot find PM stop to perform VOH for pin C1G35_OUTP(B18)
**** WARNING: Cannot find PM stop to perform VOL for pin C1G35_OUTN(A18)
**** WARNING: Cannot find PM stop to perform VOH for pin C1G35_OUTN(A18)
**** WARNING: Cannot find PM stop to perform VOL for pin P2G7_OUTP(B20)
**** WARNING: Cannot find PM stop to perform VOH for pin P2G7_OUTP(B20)
**** WARNING: Cannot find PM stop to perform VOL for pin P2G7_OUTN(A20)
**** WARNING: Cannot find PM stop to perform VOH for pin P2G7_OUTN(A20)
**** WARNING: Cannot find PM stop to perform VOL for pin D2G7_OUTP(3)(B19)
**** WARNING: Cannot find PM stop to perform VOH for pin D2G7_OUTP(3)(B19)
**** WARNING: Cannot find PM stop to perform VOL for pin D2G7_OUTP(2)(C15)
**** WARNING: Cannot find PM stop to perform VOH for pin D2G7_OUTP(2)(C15)
**** WARNING: Cannot find PM stop to perform VOL for pin D2G7_OUTP(1)(C14)
**** WARNING: Cannot find PM stop to perform VOH for pin D2G7_OUTP(1)(C14)
**** WARNING: Cannot find PM stop to perform VOL for pin D2G7_OUTP(0)(A13)
**** WARNING: Cannot find PM stop to perform VOH for pin D2G7_OUTP(0)(A13)
**** WARNING: Cannot find PM stop to perform VOL for pin D2G7_OUTN(3)(A19)
**** WARNING: Cannot find PM stop to perform VOH for pin D2G7_OUTN(3)(A19)
**** WARNING: Cannot find PM stop to perform VOL for pin D2G7_OUTN(2)(D15)
**** WARNING: Cannot find PM stop to perform VOH for pin D2G7_OUTN(2)(D15)
**** WARNING: Cannot find PM stop to perform VOL for pin D2G7_OUTN(1)(D14)
**** WARNING: Cannot find PM stop to perform VOH for pin D2G7_OUTN(1)(D14)
**** WARNING: Cannot find PM stop to perform VOL for pin D2G7_OUTN(0)(B13)
**** WARNING: Cannot find PM stop to perform VOH for pin D2G7_OUTN(0)(B13)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin MODE2G7(A22)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin MODE2G7(A22)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin D5_HCH_RX_PAR(D10
)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin D5_HCH_RX_PAR(D10
)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin D5_HCH_RX(7)(A9)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin D5_HCH_RX(7)(A9)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin D5_HCH_RX(6)(E10)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin D5_HCH_RX(6)(E10)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin D5_HCH_RX(5)(B9)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin D5_HCH_RX(5)(B9)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin D5_HCH_RX(4)(C9)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin D5_HCH_RX(4)(C9)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin D5_HCH_RX(3)(D9)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin D5_HCH_RX(3)(D9)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin D5_HCH_RX(2)(A8)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin D5_HCH_RX(2)(A8)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin D5_HCH_RX(1)(E9)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin D5_HCH_RX(1)(E9)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin D5_HCH_RX(0)(B8)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin D5_HCH_RX(0)(B8)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin D10_BXI_RX(C10)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin D10_BXI_RX(C10)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin CICLK(E22)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin CICLK(E22)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin CIINF(7)(B25)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin CIINF(7)(B25)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin CIINF(6)(E24)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin CIINF(6)(E24)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin CIINF(5)(A25)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin CIINF(5)(A25)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin CIINF(4)(D24)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin CIINF(4)(D24)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin CIINF(3)(C24)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin CIINF(3)(C24)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin CIINF(2)(B24)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin CIINF(2)(B24)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin CIINF(1)(E23)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin CIINF(1)(E23)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin CIINF(0)(A24)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin CIINF(0)(A24)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin AISINSMSOH(H4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin AISINSMSOH(H4)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(15)(J5)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(15)(J5)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(14)(J4)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(14)(J4)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(13)(J2)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(13)(J2)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(12)(J1)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(12)(J1)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(11)(K3)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(11)(K3)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(10)(K1)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(10)(K1)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(9)(L3)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(9)(L3)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(8)(M5)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(8)(M5)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(7)(M3)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(7)(M3)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(6)(M1)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(6)(M1)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(5)(N4)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(5)(N4)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(4)(N2)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(4)(N2)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(3)(P5)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(3)(P5)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(2)(P3)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(2)(P3)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(1)(P1)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(1)(P1)
**** WARNING: Cannot find PM stop to perform ILPIO OFF for pin GPIO(0)(R4)
**** WARNING: Cannot find PM stop to perform IHPIO OFF for pin GPIO(0)(R4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin BYPASS_PLL(U1)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin BYPASS_PLL(U1)
**** WARNING: Cannot find PM stop to perform ILPIN ON for pin THZ_N(D8)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THZ_N(D8)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THZ_N(D8)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_SET_BD2IN(C6)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_SET_BD2IN(C6)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_DISARST(AG4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_DISARST(AG4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(13)(AE3)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(13)(AE3)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(12)(B4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(12)(B4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(11)(B6)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(11)(B6)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(10)(AA3)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(10)(AA3)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(9)(AA2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(9)(AA2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(8)(Y5)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(8)(Y5)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(7)(Y4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(7)(Y4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(6)(Y3)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(6)(Y3)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(5)(Y2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(5)(Y2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(4)(Y1)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(4)(Y1)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(3)(W5)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(3)(W5)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(2)(W4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(2)(W4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(1)(W3)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(1)(W3)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T_CLK(0)(W2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T_CLK(0)(W2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TM_SCAN(H3)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TM_SCAN(H3)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TE_SCAN(R2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TE_SCAN(R2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TSCI(7)(AC2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TSCI(7)(AC2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TSCI(6)(AB5)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TSCI(6)(AB5)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TSCI(5)(AC1)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TSCI(5)(AC1)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TSCI(4)(AB4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TSCI(4)(AB4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TSCI(3)(AB3)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TSCI(3)(AB3)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TSCI(2)(AB2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TSCI(2)(AB2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TSCI(1)(AB1)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TSCI(1)(AB1)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TSCI(0)(AA4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TSCI(0)(AA4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TDI(D2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TDI(D2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TMS(C5)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TMS(C5)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TRSTN(E4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TRSTN(E4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TBIST_RUN(U2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TBIST_RUN(U2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TBIST_ROT(AC4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TBIST_ROT(AC4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TM_RAM(U3)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TM_RAM(U3)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TM_PLL(AE27)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TM_PLL(AE27)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TPLL_TEST1(R1)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TPLL_TEST1(R1)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TM_HSI(AK28)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TM_HSI(AK28)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_BYPASS(1)(AF
4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_BYPASS(1)(AF
4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_BYPASS(0)(AF
27)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_BYPASS(0)(AF
27)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_SEL0(1)(AF28
)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_SEL0(1)(AF28
)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_SEL0(0)(AG30
)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_SEL0(0)(AG30
)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_SEL1(1)(AF5)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_SEL1(1)(AF5)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_SEL1(0)(AG2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_SEL1(0)(AG2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_PWRDN(AJ27)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_PWRDN(AJ27)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin RSTZ_HSI(AG26)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin RSTZ_HSI(AG26)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_OPEN(AG3)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_OPEN(AG3)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(15)(AE2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(15)(AE2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(14)(AD5)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(14)(AD5)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(13)(AE1)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(13)(AE1)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(12)(AD4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(12)(AD4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(11)(AD3)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(11)(AD3)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(10)(AD2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(10)(AD2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(9)(AC5)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(9)(AC5)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(8)(AD1)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(8)(AD1)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(7)(AH26)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(7)(AH26)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(6)(AL27)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(6)(AL27)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(5)(AJ26)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(5)(AJ26)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(4)(AG25)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(4)(AG25)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(3)(AK26)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(3)(AK26)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(2)(AH25)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(2)(AH25)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(1)(AJ25)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(1)(AJ25)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TESTSELZ(0)(AK25)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TESTSELZ(0)(AK25)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_STANDBY(AH2)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_STANDBY(AH2)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_CKGEN(1)(AF2
)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_CKGEN(1)(AF2
)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_CKGEN(0)(AG3
1)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_CKGEN(0)(AG3
1)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_SEL_EN(1)(AG
1)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_SEL_EN(1)(AG
1)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_SEL_EN(0)(AF
29)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_SEL_EN(0)(AF
29)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_ACC_START(AE
4)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_ACC_START(AE
4)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_RESYNCHZ(AE5
)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_RESYNCHZ(AE5
)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TC78_SEL(AF3)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TC78_SEL(AF3)
**** WARNING: Cannot find PM stop to perform VOL for pin THSI_OUTA(AG7)
**** WARNING: Cannot find PM stop to perform VOH for pin THSI_OUTA(AG7)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_P2S(C26)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_P2S(C26)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin BYPASS_HSI_PLL(D2
5)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin BYPASS_HSI_PLL(D2
5)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin RSTZ_SHSI(E25)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin RSTZ_SHSI(E25)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin THSI_RP_BYPASS(B2
6)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin THSI_RP_BYPASS(B2
6)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T2G7_BYPASS(D20)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T2G7_BYPASS(D20)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T2G7_PRE_EMP0(D21
)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T2G7_PRE_EMP0(D21
)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T2G7_PRE_EMP1(C21
)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T2G7_PRE_EMP1(C21
)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin TM_SHSI(E20)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin TM_SHSI(E20)
**** WARNING: Cannot find PM stop to perform ILPIN OFF for pin T2G7_TDI(B21)
**** WARNING: Cannot find PM stop to perform IHPIN OFF for pin T2G7_TDI(B21)



                      Summary of ICCQ Measure Statements

                           Assigned
 TDL Name         Pattern     PM           Min               Max
 --------         -------  --------  ---------------   ----------------
 IDQ                   44     10
 IDQ                   47     11
 IDQ                   50     12
 IDQ                   53     13
 IDQ                   56     14
 IDQ                   59     15
 IDQ                   62     16
 IDQ                   65     17
 IDQ                   68     18
 IDQ                   71     19
 IDQ                   74     20
 IDQ                   77     21
 LU                  4893     22



TDL PATTERN SET NAME: Scanchk, VBOX_ALL

THE PERIOD FOR THIS TIMING SET IS:  120.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  30.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |  50.0|  10.0|  +  | A7,AA2,AA3,AB29,AC29,AE3,AJ19,AJ20
-----+------+------+-----+--------------------------------------
                         | AK21,AK22,AK23,AK24,AL20,B4,B6,W2
-----+------+------+-----+--------------------------------------
                         | W3,W4,Y1,Y2,Y3,Y4,Y5
-----+------+------+-----+--------------------------------------
   2 |  50.0|  10.0|  -  | AB30,AC30,AG26,AH19,AH20,AJ21,AJ22
-----+------+------+-----+--------------------------------------
                         | AJ23,AJ24,AK20,B23,C7
-----+------+------+-----+--------------------------------------
   3 |  50.0|  20.0|  -  | E22
-----+------+------+-----+--------------------------------------
   4 |  35.0|  10.0|  -  | W5
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: hzv, tgl, thr, clv, tdv

THE PERIOD FOR THIS TIMING SET IS:  150.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 | 140.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: DLP53_1, DLP53_11, DLP53_12, DLP53_13,
                      DLP53_14, DLP53_16, DLP53_17, DLP53_18,
                      DLP53_19, DLP53_2, DLP53_3, DLP53_4,
                      DLP53_6, DLP53_7, DLP53_8, DLP53_9

THE PERIOD FOR THIS TIMING SET IS:  100.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  90.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |  15.0|  40.0|  +  | AJ19
-----+------+------+-----+--------------------------------------
   2 |  15.0|  40.0|  -  | AH19
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: RX_SLOW

THE PERIOD FOR THIS TIMING SET IS:  100.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  90.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |  10.0|  50.0|  +  | AJ19,W2
-----+------+------+-----+--------------------------------------
   2 |  10.0|  50.0|  -  | AH19
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: TC_PLL

THE PERIOD FOR THIS TIMING SET IS:  100.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  90.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |  30.0|  30.0|  +  | AJ19
-----+------+------+-----+--------------------------------------
   2 |  30.0|  30.0|  -  | AH19
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: TX_2

THE PERIOD FOR THIS TIMING SET IS:  100.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  90.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |   0.0|  50.0|  -  | AB29
-----+------+------+-----+--------------------------------------
   2 |   0.0|  50.0|  +  | AB30
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: dch, DCH_ALL

THE PERIOD FOR THIS TIMING SET IS: 1000.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 | 990.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: die

THE PERIOD FOR THIS TIMING SET IS:  200.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 | 190.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |   0.0| 100.0|  -  | E6
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: BURNIN

THE PERIOD FOR THIS TIMING SET IS:  120.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  40.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |  50.0|  20.0|  +  | A7,AA2,AA3,AB29,AC29,AE3,AJ19,AJ20
-----+------+------+-----+--------------------------------------
                         | AK21,AK22,AK23,AK24,AL20,B4,B6,W2
-----+------+------+-----+--------------------------------------
                         | W3,W4,Y1,Y2,Y3,Y4,Y5
-----+------+------+-----+--------------------------------------
   2 |  50.0|  20.0|  -  | AB30,AC30,AG26,AH19,AH20,AJ21,AJ22
-----+------+------+-----+--------------------------------------
                         | AJ23,AJ24,AK20,B23,C7,E22,W5
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: IDQ, LU

THE PERIOD FOR THIS TIMING SET IS:  300.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  30.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |  50.0|  10.0|  +  | A7,AA2,AA3,AB29,AC29,AE3,AJ19,AJ20
-----+------+------+-----+--------------------------------------
                         | AK21,AK22,AK23,AK24,AL20,B4,B6,W2
-----+------+------+-----+--------------------------------------
                         | W3,W4,Y1,Y2,Y3,Y4,Y5
-----+------+------+-----+--------------------------------------
   2 |  50.0|  10.0|  -  | AB30,AC30,AH19,AH20,AJ21,AJ22,AJ23
-----+------+------+-----+--------------------------------------
                         | AJ24,AK20,B23,C7
-----+------+------+-----+--------------------------------------
   3 |  50.0|  20.0|  -  | E22
-----+------+------+-----+--------------------------------------
   4 |  35.0|  10.0|  -  | W5
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: RX_1_1

THE PERIOD FOR THIS TIMING SET IS:    6.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |   5.1| A10,A12,A13,A18,A19,A20,AA29,AA30,AG7,AH6,AJ5
-----+------+---------------------------------------------------
            | AK4,B11,B12,B13,B18,B19,B20,C12,C14,C15,C22,D11
-----+------+---------------------------------------------------
            | D12,D14,D15,D22,D6,E1,E12,E2,F2,F3,F5,G2,G29,G3
-----+------+---------------------------------------------------
            | G30,G4,G5,H29,H30,H5,J29,J30,K29,K30,L29,L30,M28
-----+------+---------------------------------------------------
            | M29,M30,M31,N28,N29,N30,N31,P28,P29,P30,P31,R28
-----+------+---------------------------------------------------
            | R29,U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28
-----+------+---------------------------------------------------
            | W29,W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------
   2 |   2.6| A24,A25,B24,B25,C24,D24,E23,E24,J1,J2,J4,J5,K1
-----+------+---------------------------------------------------
            | K3,L3,M1,M3,M5,N2,N4,P1,P3,P5,R4
-----+------+---------------------------------------------------
   3 |   3.6| AG6,AH30
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |   2.0|   3.0|  +  | AJ19,W4
-----+------+------+-----+--------------------------------------
   2 |   2.0|   3.0|  -  | AH19
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: RX_622_3305, RX_622_6610

THE PERIOD FOR THIS TIMING SET IS:    3.2 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |   2.5| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |   0.0|   1.6|  +  | AH12,AH13,AH15,AH17,AH18,AJ10,AJ11
-----+------+------+-----+--------------------------------------
                         | AJ14,AK15,AK19,AK9,AL12,AL13,AL14
-----+------+------+-----+--------------------------------------
                         | AL17,AL18
-----+------+------+-----+--------------------------------------
   2 |   0.0|   1.6|  -  | AH14,AJ12,AJ13,AJ15,AJ17,AJ18,AJ9
-----+------+------+-----+--------------------------------------
                         | AK10,AK11,AK12,AK13,AK14,AK17,AK18
-----+------+------+-----+--------------------------------------
                         | AL15,AL19
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: TC_PLL50

THE PERIOD FOR THIS TIMING SET IS:   21.4 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  23.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |   5.0|  10.7|  +  | AJ19
-----+------+------+-----+--------------------------------------
   2 |   5.0|  10.7|  -  | AH19
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: TC_PLL83

THE PERIOD FOR THIS TIMING SET IS:    6.5 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |   5.2| A10,A12,AA29,AA30,AG6,AG7,AH30,AH6,AJ5,AK4,B11
-----+------+---------------------------------------------------
            | B12,C12,C22,D11,D12,D22,D6,E1,E12,E2,F2,F3,F5,G2
-----+------+---------------------------------------------------
            | G29,G3,G30,G4,G5,H29,H30,H5,J29,J30,K29,K30,L29
-----+------+---------------------------------------------------
            | L30,M28,M29,M30,M31,N28,N29,N30,N31,P28,P29,P30
-----+------+---------------------------------------------------
            | P31,R28,R29,U28,U29,U30,U31,V1,V28,V29,V30,V31
-----+------+---------------------------------------------------
            | V4,V5,W28,W29,W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------
   2 |   2.0| A13,A18,A19,A20,B13,B18,B19,B20,C14,C15,D14,D15
-----+------+---------------------------------------------------
   3 |   2.1| A24,A25,B24,B25,C24,D24,E23,E24,J1,J2,J4,J5,K1
-----+------+---------------------------------------------------
            | K3,L3,M1,M3,M5,N2,N4,P1,P3,P5,R4
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |   2.0|   3.0|  +  | AJ19
-----+------+------+-----+--------------------------------------
   2 |   2.0|   3.0|  -  | AH19
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: TX_1_1, TX_1_10, TX_1_11, TX_1_12,
                      TX_1_13, TX_1_14, TX_1_15, TX_1_16,
                      TX_1_17, TX_1_18, TX_1_19, TX_1_2,
                      TX_1_3, TX_1_4, TX_1_5, TX_1_6, TX_1_7,
                      TX_1_8, TX_1_9

THE PERIOD FOR THIS TIMING SET IS:    1.5 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |   1.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |   0.2|   0.8|  +  | AB29
-----+------+------+-----+--------------------------------------
   2 |   0.2|   0.8|  -  | AB30
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: TX_3

THE PERIOD FOR THIS TIMING SET IS:   12.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  11.9| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |   1.0|   6.0|  -  | Y2
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: Scan_AC1, Scan_AC2, Scan_AC3, Scan_AC4

THE PERIOD FOR THIS TIMING SET IS:   80.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  30.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |  50.0|  10.0|  +  | A7,AA2,AA3,AB29,AC29,AE3,AJ19,AJ20
-----+------+------+-----+--------------------------------------
                         | AK21,AK22,AK23,AK24,AL20,B4,B6,W2
-----+------+------+-----+--------------------------------------
                         | W3,W4,Y1,Y2,Y3,Y4,Y5
-----+------+------+-----+--------------------------------------
   2 |  50.0|  10.0|  -  | AB30,AC30,AG26,AH19,AH20,AJ21,AJ22
-----+------+------+-----+--------------------------------------
                         | AJ23,AJ24,AK20,B23,C7
-----+------+------+-----+--------------------------------------
   3 |  50.0|  20.0|  -  | E22
-----+------+------+-----+--------------------------------------
   4 |  35.0|  10.0|  -  | W5
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: pat_1_tclk3_tdl, pat_2_tclk3_tdl,
                      pat_3_tclk3_tdl, pat_4_tclk3_tdl,
                      pat_5_tclk3_tdl

THE PERIOD FOR THIS TIMING SET IS:   80.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  20.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------
   2 |   5.0| W5
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |  70.0|  10.0|  +  | A7,AA2,AA3,AB29,AC29,AE3,AJ19,AJ20
-----+------+------+-----+--------------------------------------
                         | AK21,AK22,AK24,AL20,B4,B6,W2,W3,W4
-----+------+------+-----+--------------------------------------
                         | Y1,Y3,Y4,Y5
-----+------+------+-----+--------------------------------------
   2 |  70.0|  10.0|  -  | AB30,AC30,AG26,AH19,AH20,AJ21,AJ22
-----+------+------+-----+--------------------------------------
                         | AJ24,AK20,B23,C7
-----+------+------+-----+--------------------------------------
   3 |  30.0|  50.0|  +  | AK23
-----+------+------+-----+--------------------------------------
   4 |  30.0|  50.0|  -  | AJ23
-----+------+------+-----+--------------------------------------
   5 |  50.0|  20.0|  +  | E22
-----+------+------+-----+--------------------------------------
   6 |  40.0|  33.0|  -  | Y2
-----+------+------+-----+--------------------------------------
   7 |  35.0|  33.0|  -  | W5
-----+------+------+-----+--------------------------------------
   8 |   5.0|      |     |
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: pat_1_tclk5_tdl

THE PERIOD FOR THIS TIMING SET IS:   80.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  20.0| A10,A12,A13,A18,A19,A20,A24,A25,AA29,AA30,AG6
-----+------+---------------------------------------------------
            | AG7,AH30,AH6,AJ5,AK4,B11,B12,B13,B18,B19,B20,B24
-----+------+---------------------------------------------------
            | B25,C12,C14,C15,C22,C24,D11,D12,D14,D15,D22,D24
-----+------+---------------------------------------------------
            | D6,E1,E12,E2,E23,E24,F2,F3,F5,G2,G29,G3,G30,G4
-----+------+---------------------------------------------------
            | G5,H29,H30,H5,J1,J2,J29,J30,J4,J5,K1,K29,K3,K30
-----+------+---------------------------------------------------
            | L29,L3,L30,M1,M28,M29,M3,M30,M31,M5,N2,N28,N29
-----+------+---------------------------------------------------
            | N30,N31,N4,P1,P28,P29,P3,P30,P31,P5,R28,R29,R4
-----+------+---------------------------------------------------
            | U28,U29,U30,U31,V1,V28,V29,V30,V31,V4,V5,W28,W29
-----+------+---------------------------------------------------
            | W30,W31,Y28,Y29,Y30,Y31
-----+------+---------------------------------------------------
   2 |   5.0| Y2
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |  70.0|  10.0|  +  | A7,AA2,AA3,AB29,AC29,AE3,AJ19,AJ20
-----+------+------+-----+--------------------------------------
                         | AK21,AK22,AK24,AL20,B4,B6,W2,W3,W4
-----+------+------+-----+--------------------------------------
                         | Y1,Y3,Y4,Y5
-----+------+------+-----+--------------------------------------
   2 |  70.0|  10.0|  -  | AB30,AC30,AG26,AH19,AH20,AJ21,AJ22
-----+------+------+-----+--------------------------------------
                         | AJ24,AK20,B23,C7
-----+------+------+-----+--------------------------------------
   3 |  30.0|  50.0|  +  | AK23
-----+------+------+-----+--------------------------------------
   4 |  30.0|  50.0|  -  | AJ23
-----+------+------+-----+--------------------------------------
   5 |  50.0|  20.0|  +  | E22
-----+------+------+-----+--------------------------------------
   6 |  40.0|  33.0|  -  | Y2
-----+------+------+-----+--------------------------------------
   7 |  35.0|  33.0|  -  | W5
-----+------+------+-----+--------------------------------------
   8 |   5.0|      |     |
-----+------+------+-----+--------------------------------------



TDL PATTERN SET NAME: BIST

THE PERIOD FOR THIS TIMING SET IS:  100.0 NS

             =====> OUTPUT STROBE GROUPS <=====
GROUP DELAY                   PIN NUMBERS
 NO.   (NS)
-----+------+---------------------------------------------------
   1 |  98.2| A10,A12,A19,A20,AG6,AG7,AH30,AJ5,AK4,B11,B12,B19
-----+------+---------------------------------------------------
            | B20,C12,C15,C22,D11,D15,D22,E1,F2,F3,F5,G2,G29
-----+------+---------------------------------------------------
            | G3,G30,G4,G5,H29,H30,H5,J29,J30,K29,K30,L29,L30
-----+------+---------------------------------------------------
            | M28,M29,M30,M31,N28,N29,N30,N31,P28,P29,P30,P31
-----+------+---------------------------------------------------
            | R28,R29,U28,U29,U30,U31,V28,V29,V30,V31,V4,V5
-----+------+---------------------------------------------------
            | W28,W29,W30,W31,Y30,Y31
-----+------+---------------------------------------------------
   2 |  16.1| A18,AA29,AA30,AH6,B18,D12,D6,E12,E2,Y28,Y29
-----+------+---------------------------------------------------
   3 |  49.1| A13,A24,A25,B13,B24,B25,C14,C24,D14,D24,E23,E24
-----+------+---------------------------------------------------
            | J1,J2,J4,J5,K1,K3,L3,M1,M3,M5,N2,N4,P1,P3,P5,R4
-----+------+---------------------------------------------------
            | V1
-----+------+---------------------------------------------------

             =====> INPUT DELAY GROUPS <=====
GROUP DELAY  WIDTH  POLAR         PIN NUMBERS
 NO.   (NS)   (NS)  (+/-)
-----+------+------+-----+--------------------------------------
   1 |  20.0|  20.0|  -  | E22
-----+------+------+-----+--------------------------------------






*
*                         S  L  O  W      T  D  L
*                       AUTOGEN AC PATTERN SCANNER
*
*
* TEST    OUTPUT     INPUT         POLARITY  TDL    MEMORY    MAX     MIN
* TYPE   PIN NAME   PIN NAME  EDGE OUT   IN PATT #   ADDR    LIMIT   LIMIT
* ===== ========== ========== ==== ======== ====== ======== ======= =======
* PROP  TPO        TDI             POS IPOS      2 4           40NS    13NS
* PROP  TPO        TDI             NEG INEG      3 5           36NS    12NS
* PROP  TPO        TDI             POS IPOS     24 26         117NS    42NS
* PROP  TPO        TDI             NEG INEG     25 27         114NS    43NS
*
*

*)


#define $SITE_TESTWARE_VALIDATE  'true'

#define $BICMOS_VOD 'TRUE'
#define $TYPES 'asic_types.include'
#include '$TYPES'

#define $PinScrambleEnabled 'true'

#define $PARTIAL_LBC_PINLISTSET 'LBC_TEST_PINS'

#define $Device_SPC 'TRUE'

#include '/usr/tc/vusp/custom/bicmos_types.include'
#define $USER_ERROR_TRAP 'TRUE';

Use
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
       '/usr/tc/vusp/custom/TWVar.p',       {revtw}
       '/usr/tc/vusp/custom/TWPDL.p',       {revtw}
       '/usr/tc/vusp/custom/TestWare.p',    {revtw}
#endif                                      {revtw}
#endif                                      {revtw}

#ifdef $Site_SPC_flag then
#if $Site_SPC_flag then
#if $Device_SPC then
    '/usr/tc/vusp/custom/bicmos_errortrap.usp',
    '/usr/tc/vusp/temp1/common.usp',
    '/usr/tc/vusp/custom/bicmos.lib',
    'char.mod',
    'meas_frequency_r8.mod',{rev01d}
    '/u/vseries/routines/sysspc/dd_common.itp';
#else
    '/usr/tc/vusp/custom/bicmos_errortrap.usp',
    '/usr/tc/vusp/temp1/common.usp',
    'char.mod',
    'meas_frequency_r8.mod',{rev01d}
    '/usr/tc/vusp/custom/bicmos.lib';
#endif
#else
    'char.mod',
    'meas_frequency_r8.mod',{rev01d}
    '/usr/tc/vusp/custom/bicmos_errortrap.usp',
    '/usr/tc/vusp/temp1/common.usp',
    '/usr/tc/vusp/custom/bicmos.lib';
#endif
#else
    '/usr/tc/programs/itp_shmoo',
    'char.mod',
    'meas_frequency_r8.mod',{rev01d}
    '/usr/tc/vusp/custom/bicmos_errortrap.usp',
    '/usr/tc/vusp/temp1/common.usp',
    '/usr/tc/vusp/custom/bicmos.lib';
#endif

 Type
    error_msg_type = string[60];
    HighSpeedClkAdjustTyp = RECORD
       PinName    : PINLIST;
       Modified   : BOOLEAN;
       T1_Offset  : TREAL;
       T2_Offset  : TREAL;
    END;                                                 {rev05a}
    ExecType = (E_PATT_EXEC, E_MISR_TEST, E_FREQ_CNTR);  {rev05a}


#DEFINE $T_EXPAND_MARGINAL_BUS 'TRUE' {margins}

TOOLUSE '/usr/tc/programs/search_t',
        '/usr/tc/programs/search_v',
        '/usr/tc/programs/lbc/lbc',
        'diff_clk_align.mod';                            {rev05a}

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
#include '/usr/tc/vusp/custom/TWglobal.h';   {revtw}
#include '/usr/tc/vusp/custom/TWVar.h';      {revtw}
#endif                                      {revtw}
#endif                                      {revtw}




var
{rev00g..begin add}
    MISR_DATA                      : Array[1..16] of integer;
    DummyB                         : Array[1..16] of integer;
{rev00g..end add}

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TWSummaryBins : array[SummBType,BinNames] of BinNames; Import;   {revtw}
#endif                                      {revtw}
#endif                                      {revtw}

    TW_TMP_String               : String[30]; {revtw}
    TW_VAR_String               : String[30]; {revtw}
    SupplyShortsResult             : boolean; {revtw}
    pos_fail                       : boolean;
    neg_fail                       : boolean;
    post_fail_V                    : boolean;
    CR                             : Char;
    UPMU_NUM                       : Option;

    Dut_Map                        : DutToChanArrayType;
    DiffArray                      : DiffArrayType;
    ICCQ_TEST_RESULT               : boolean;
    ICCQ_value                     : treal;
    ICCQ_READ                      : treal;
    ICCQ_MIN_ARR, ICCQ_MAX_ARR     : Limit_Array;
    ICCQ_MIN, ICCQ_MAX             : treal; Export;
{rev10b} NEW_ICCQ_MAX_ARR          : Limit_Array;
{rev10b} NEW_ICCQ_MAX              : treal;
{rev10b} DELTA_ICCQ_MAX_ARR          : Limit_Array;
{rev10b} DELTA_ICCQ_MAX              : treal;
{rev_ICCQ}    ICCQ_DATA_MIN, ICCQ_DATA_MAX             : treal; Export;
    DELAY_MIN, DELAY_MAX           : treal; Export;
    COMP_DLY1, COMP_DLY2           : Option; Export;
    ICCQ_RANGE_ARR                 : Limit_Array;
    ICCQ_RANGE                     : treal;
{rev10b} NEW_ICCQ_RANGE_ARR        : Limit_Array;
{rev10b} NEW_ICCQ_RANGE            : treal;
{rev_ICCQ}    ICCQ_DATA_RANGE                     : treal;
    ICCQ10_MIN_ARR, ICCQ10_MAX_ARR   : Limit_Array;
    ICCQ10_RANGE_ARR   : Limit_Array;
    ICCQ10_MIN, ICCQ10_MAX   : treal;
{rev_ICCQ}    ICCQ10_DATA_MIN, ICCQ10_DATA_MAX   : treal;
    ICCQ10_RANGE   : treal;
{rev_ICCQ}    ICCQ10_DATA_RANGE   : treal;
    ICCQ11_MIN_ARR, ICCQ11_MAX_ARR   : Limit_Array;
    ICCQ11_RANGE_ARR   : Limit_Array;
    ICCQ11_MIN, ICCQ11_MAX   : treal;
{rev_ICCQ}    ICCQ11_DATA_MIN, ICCQ11_DATA_MAX   : treal;
    ICCQ11_RANGE   : treal;
{rev_ICCQ}    ICCQ11_DATA_RANGE   : treal;
    ICCQ12_MIN_ARR, ICCQ12_MAX_ARR   : Limit_Array;
    ICCQ12_RANGE_ARR   : Limit_Array;
    ICCQ12_MIN, ICCQ12_MAX   : treal;
{rev_ICCQ}    ICCQ12_DATA_MIN, ICCQ12_DATA_MAX   : treal;
    ICCQ12_RANGE   : treal;
{rev_ICCQ}    ICCQ12_DATA_RANGE   : treal;
    ICCQ13_MIN_ARR, ICCQ13_MAX_ARR   : Limit_Array;
    ICCQ13_RANGE_ARR   : Limit_Array;
    ICCQ13_MIN, ICCQ13_MAX   : treal;
{rev_ICCQ}    ICCQ13_DATA_MIN, ICCQ13_DATA_MAX   : treal;
    ICCQ13_RANGE   : treal;
{rev_ICCQ}    ICCQ13_DATA_RANGE   : treal;
    ICCQ14_MIN_ARR, ICCQ14_MAX_ARR   : Limit_Array;
    ICCQ14_RANGE_ARR   : Limit_Array;
    ICCQ14_MIN, ICCQ14_MAX   : treal;
{rev_ICCQ}    ICCQ14_DATA_MIN, ICCQ14_DATA_MAX   : treal;
    ICCQ14_RANGE   : treal;
{rev_ICCQ}    ICCQ14_DATA_RANGE   : treal;
    ICCQ15_MIN_ARR, ICCQ15_MAX_ARR   : Limit_Array;
    ICCQ15_RANGE_ARR   : Limit_Array;
    ICCQ15_MIN, ICCQ15_MAX   : treal;
{rev_ICCQ}    ICCQ15_DATA_MIN, ICCQ15_DATA_MAX   : treal;
    ICCQ15_RANGE   : treal;
{rev_ICCQ}    ICCQ15_DATA_RANGE   : treal;
    ICCQ16_MIN_ARR, ICCQ16_MAX_ARR   : Limit_Array;
    ICCQ16_RANGE_ARR   : Limit_Array;
    ICCQ16_MIN, ICCQ16_MAX   : treal;
{rev_ICCQ}    ICCQ16_DATA_MIN, ICCQ16_DATA_MAX   : treal;
    ICCQ16_RANGE   : treal;
{rev_ICCQ}    ICCQ16_DATA_RANGE   : treal;
    ICCQ17_MIN_ARR, ICCQ17_MAX_ARR   : Limit_Array;
    ICCQ17_RANGE_ARR   : Limit_Array;
    ICCQ17_MIN, ICCQ17_MAX   : treal;
{rev_ICCQ}    ICCQ17_DATA_MIN, ICCQ17_DATA_MAX   : treal;
    ICCQ17_RANGE   : treal;
{rev_ICCQ}    ICCQ17_DATA_RANGE   : treal;
    ICCQ18_MIN_ARR, ICCQ18_MAX_ARR   : Limit_Array;
    ICCQ18_RANGE_ARR   : Limit_Array;
    ICCQ18_MIN, ICCQ18_MAX   : treal;
{rev_ICCQ}    ICCQ18_DATA_MIN, ICCQ18_DATA_MAX   : treal;
    ICCQ18_RANGE   : treal;
{rev_ICCQ}    ICCQ18_DATA_RANGE   : treal;
    ICCQ19_MIN_ARR, ICCQ19_MAX_ARR   : Limit_Array;
    ICCQ19_RANGE_ARR   : Limit_Array;
    ICCQ19_MIN, ICCQ19_MAX   : treal;
{rev_ICCQ}    ICCQ19_DATA_MIN, ICCQ19_DATA_MAX   : treal;
    ICCQ19_RANGE   : treal;
{rev_ICCQ}    ICCQ19_DATA_RANGE   : treal;
    ICCQ20_MIN_ARR, ICCQ20_MAX_ARR   : Limit_Array;
    ICCQ20_RANGE_ARR   : Limit_Array;
    ICCQ20_MIN, ICCQ20_MAX   : treal;
{rev_ICCQ}    ICCQ20_DATA_MIN, ICCQ20_DATA_MAX   : treal;
    ICCQ20_RANGE   : treal;
{rev_ICCQ}    ICCQ20_DATA_RANGE   : treal;
    ICCQ21_MIN_ARR, ICCQ21_MAX_ARR   : Limit_Array;
    ICCQ21_RANGE_ARR   : Limit_Array;
    ICCQ21_MIN, ICCQ21_MAX   : treal;
{rev_ICCQ}    ICCQ21_DATA_MIN, ICCQ21_DATA_MAX   : treal;
    ICCQ21_RANGE   : treal;
{rev_ICCQ}    ICCQ21_DATA_RANGE   : treal;
    ICCQ22_MIN_ARR, ICCQ22_MAX_ARR   : Limit_Array;
    ICCQ22_RANGE_ARR   : Limit_Array;
    ICCQ22_MIN, ICCQ22_MAX   : treal;
{rev_ICCQ}    ICCQ22_DATA_MIN, ICCQ22_DATA_MAX   : treal;
    ICCQ22_RANGE   : treal;
{rev_ICCQ}    ICCQ22_DATA_RANGE   : treal;
    (*  VIHVIL DRIVEHI, DRIVELO VARS  *)
    VIHCMOSa3V_VMAX_ARR     : Limit_Array;
    VILCMOSa3V_VMAX_ARR     : Limit_Array;
    VIHCMOSa3V_VMIN_ARR     : Limit_Array;
    VILCMOSa3V_VMIN_ARR     : Limit_Array;
    VIHCMOSa3V_VMAX,VILCMOSa3V_VMAX        : treal;
    VIHCMOSa3V_VMIN,VILCMOSa3V_VMIN        : treal;
    VIHTESTINA1V_VMAX_ARR     : Limit_Array;
    VILTESTINA1V_VMAX_ARR     : Limit_Array;
    VIHTESTINA1V_VMIN_ARR     : Limit_Array;
    VILTESTINA1V_VMIN_ARR     : Limit_Array;
    VIHTESTINA1V_VMAX,VILTESTINA1V_VMAX        : treal;
    VIHTESTINA1V_VMIN,VILTESTINA1V_VMIN        : treal;
    IIH_MIN_ARR, IIH_MAX_ARR       : Limit_Array;
    IIH_MIN, IIH_MAX               : treal;
    IIL_MIN_ARR, IIL_MAX_ARR       : Limit_Array;
    IIL_MIN, IIL_MAX               : treal;
    IIH_SINK_ARR, IIH_SOURCE_ARR   : Limit_Array;
    IIH_SINK, IIH_SOURCE           : treal;
    IIL_SINK_ARR, IIL_SOURCE_ARR   : Limit_Array;
    IIL_SINK, IIL_SOURCE           : treal;
    IILP1_MIN_ARR, IILP1_MAX_ARR   : Limit_Array;
    IILP1_SINK_ARR, IILP1_SOURCE_ARR : Limit_Array;
    IILP1_MIN, IILP1_MAX           : treal;
    IILP1_SINK, IILP1_SOURCE : treal;
    IILP1_ENABLED : boolean;
    Osc_R_State                              : integer;
    VOHL_MIN_ARR, VOLL_MAX_ARR     : Limit_Array;
    VOHL_MIN, VOLL_MAX             : treal;
    VOHL_MAX_ARR                   : Limit_Array;
    VOHL_MAX                       : treal;
    VOHL3V_MIN_ARR, VOLL3V_MAX_ARR : Limit_Array;
    VOHL3V_MIN, VOLL3V_MAX         : treal;
    VOHL3V_MAX_ARR                         : Limit_Array;
    VOHL3V_MAX                             : treal;
    VIDLVDSa1V_ARR                        : Limit_Array;
    VIDLVDSa1V                            : treal;
    VIDCML1V_ARR                        : Limit_Array;
    VIDCML1V                            : treal;
    IOLP1_MIN_ARR, IOLP1_MAX_ARR   : Limit_Array;
    IOLP1_SINK_ARR, IOLP1_SOURCE_ARR : Limit_Array;
    IOLP1_MIN, IOLP1_MAX           : treal;
    IOLP1_SINK, IOLP1_SOURCE : treal;

    IIHLVDSa1VD_MIN_ARR, IIHLVDSa1VD_MAX_ARR   : Limit_Array;
    IILLVDSa1VD_MIN_ARR, IILLVDSa1VD_MAX_ARR   : Limit_Array;
    IIHLVDSa1VD_MIN, IIHLVDSa1VD_MAX           : treal;
    IILLVDSa1VD_MIN, IILLVDSa1VD_MAX           : treal;
    IIHLVDSa1VD_FORCEV_ARR, IILLVDSa1VD_FORCEV_ARR   : Limit_Array;
    IIHLVDSa1VD_FORCEV, IILLVDSa1VD_FORCEV           : treal;
    IIHLVDSa1VD_SINK_ARR, IIHLVDSa1VD_SOURCE_ARR   : Limit_Array;
    IIHLVDSa1VD_SINK, IIHLVDSa1VD_SOURCE           : treal;
    IILLVDSa1VD_SINK_ARR, IILLVDSa1VD_SOURCE_ARR   : Limit_Array;
    IILLVDSa1VD_SINK, IILLVDSa1VD_SOURCE           : treal;

    VOHLVDSa1V_MIN_ARR, VOHLVDSa1V_MAX_ARR   : Limit_Array;
    VOLLVDSa1V_MIN_ARR, VOLLVDSa1V_MAX_ARR   : Limit_Array;
    VOHLVDSa1V_MIN, VOHLVDSa1V_MAX           : treal;
    VOLLVDSa1V_MIN, VOLLVDSa1V_MAX           : treal;
    VOHLVDSa1V_FORCEV_ARR, VOLLVDSa1V_FORCEV_ARR   : Limit_Array;
    VOHLVDSa1V_FORCEV, VOLLVDSa1V_FORCEV           : treal;

    VODLVDSa1V_MAX, VODLVDSa1V_MIN                 : treal;
    VODLVDSa1V_MAX_ARR, VODLVDSa1V_MIN_ARR         : Limit_Array;

    IIHCML1VD_MIN_ARR, IIHCML1VD_MAX_ARR   : Limit_Array;
    IILCML1VD_MIN_ARR, IILCML1VD_MAX_ARR   : Limit_Array;
    IIHCML1VD_MIN, IIHCML1VD_MAX           : treal;
    IILCML1VD_MIN, IILCML1VD_MAX           : treal;
    IIHCML1VD_FORCEV_ARR, IILCML1VD_FORCEV_ARR   : Limit_Array;
    IIHCML1VD_FORCEV, IILCML1VD_FORCEV           : treal;
    IIHCML1VD_SINK_ARR, IIHCML1VD_SOURCE_ARR   : Limit_Array;
    IIHCML1VD_SINK, IIHCML1VD_SOURCE           : treal;
    IILCML1VD_SINK_ARR, IILCML1VD_SOURCE_ARR   : Limit_Array;
    IILCML1VD_SINK, IILCML1VD_SOURCE           : treal;

    VOHCML1V_MIN_ARR, VOHCML1V_MAX_ARR   : Limit_Array;
    VOLCML1V_MIN_ARR, VOLCML1V_MAX_ARR   : Limit_Array;
    VOHCML1V_MIN, VOHCML1V_MAX           : treal;
    VOLCML1V_MIN, VOLCML1V_MAX           : treal;
    VOHCML1V_FORCEV_ARR, VOLCML1V_FORCEV_ARR   : Limit_Array;
    VOHCML1V_FORCEV, VOLCML1V_FORCEV           : treal;

    VODCML1V_MAX, VODCML1V_MIN                 : treal;
    VODCML1V_MAX_ARR, VODCML1V_MIN_ARR         : Limit_Array;
    IIHCMOSa3V_MIN_ARR, IIHCMOSa3V_MAX_ARR   : Limit_Array;
    IILCMOSa3V_MIN_ARR, IILCMOSa3V_MAX_ARR   : Limit_Array;
    IIHCMOSa3V_MIN, IIHCMOSa3V_MAX           : treal;
    IILCMOSa3V_MIN, IILCMOSa3V_MAX           : treal;
    IIHCMOSa3V_FORCEV_ARR, IILCMOSa3V_FORCEV_ARR   : Limit_Array;
    IIHCMOSa3V_FORCEV, IILCMOSa3V_FORCEV           : treal;
    IIHCMOSa3V_SINK_ARR, IIHCMOSa3V_SOURCE_ARR   : Limit_Array;
    IIHCMOSa3V_SINK, IIHCMOSa3V_SOURCE           : treal;
    IILCMOSa3V_SINK_ARR, IILCMOSa3V_SOURCE_ARR   : Limit_Array;
    IILCMOSa3V_SINK, IILCMOSa3V_SOURCE           : treal;
    IOZHCMOSa3V_MIN_ARR, IOZHCMOSa3V_MAX_ARR   : Limit_Array;
    IOZHCMOSa3V_MIN, IOZHCMOSa3V_MAX           : treal;
    IOZHCMOSa3V_FORCEV_ARR       : Limit_Array;
    IOZHCMOSa3V_FORCEV           : treal;
    IOZHCMOSa3V_SINK_ARR, IOZHCMOSa3V_SOURCE_ARR   : Limit_Array;
    IOZHCMOSa3V_SINK, IOZHCMOSa3V_SOURCE           : treal;
    IOZLCMOSa3V_MIN_ARR, IOZLCMOSa3V_MAX_ARR   : Limit_Array;
    IOZLCMOSa3V_MIN, IOZLCMOSa3V_MAX           : treal;
    IOZLCMOSa3V_FORCEV_ARR       : Limit_Array;
    IOZLCMOSa3V_FORCEV           : treal;
    IOZLCMOSa3V_SINK_ARR, IOZLCMOSa3V_SOURCE_ARR   : Limit_Array;
    IOZLCMOSa3V_SINK, IOZLCMOSa3V_SOURCE           : treal;
    VOHCMOSa3V_MIN_ARR, VOHCMOSa3V_MAX_ARR   : Limit_Array;
    VOLCMOSa3V_MIN_ARR, VOLCMOSa3V_MAX_ARR   : Limit_Array;
    VOHCMOSa3V_MIN, VOHCMOSa3V_MAX           : treal;
    VOLCMOSa3V_MIN, VOLCMOSa3V_MAX           : treal;
    VOHCMOSa3V_FORCEV_ARR, VOLCMOSa3V_FORCEV_ARR   : Limit_Array;
    VOHCMOSa3V_FORCEV, VOLCMOSa3V_FORCEV           : treal;

    IIHTESTINA1V_MIN_ARR, IIHTESTINA1V_MAX_ARR   : Limit_Array;
    IILTESTINA1V_MIN_ARR, IILTESTINA1V_MAX_ARR   : Limit_Array;
    IIHTESTINA1V_MIN, IIHTESTINA1V_MAX           : treal;
    IILTESTINA1V_MIN, IILTESTINA1V_MAX           : treal;
    IIHTESTINA1V_FORCEV_ARR, IILTESTINA1V_FORCEV_ARR   : Limit_Array;
    IIHTESTINA1V_FORCEV, IILTESTINA1V_FORCEV           : treal;
    IIHTESTINA1V_SINK_ARR, IIHTESTINA1V_SOURCE_ARR   : Limit_Array;
    IIHTESTINA1V_SINK, IIHTESTINA1V_SOURCE           : treal;
    IILTESTINA1V_SINK_ARR, IILTESTINA1V_SOURCE_ARR   : Limit_Array;
    IILTESTINA1V_SINK, IILTESTINA1V_SOURCE           : treal;

    VOHAOUT1V_MIN_ARR, VOHAOUT1V_MAX_ARR   : Limit_Array;
    VOLAOUT1V_MIN_ARR, VOLAOUT1V_MAX_ARR   : Limit_Array;
    VOHAOUT1V_MIN, VOHAOUT1V_MAX           : treal;
    VOLAOUT1V_MIN, VOLAOUT1V_MAX           : treal;
    VOHAOUT1V_FORCEV_ARR, VOLAOUT1V_FORCEV_ARR   : Limit_Array;
    VOHAOUT1V_FORCEV, VOLAOUT1V_FORCEV           : treal;

   IIHR_OFF_MAX, IIHR_OFF_MIN                 : treal;
   IIHR_OFF_MAX_ARR, IIHR_OFF_MIN_ARR         : Limit_Array;
   IIHR_OFF_SINK, IIHR_OFF_SOURCE             : treal;
   IIHR_OFF_SINK_ARR, IIHR_OFF_SOURCE_ARR     : Limit_Array;

   IILR_OFF_MAX, IILR_OFF_MIN                 : treal;
   IILR_OFF_MAX_ARR, IILR_OFF_MIN_ARR         : Limit_Array;
   IILR_OFF_SINK, IILR_OFF_SOURCE             : treal;
   IILR_OFF_SINK_ARR, IILR_OFF_SOURCE_ARR     : Limit_Array;


    I4MA_ARR            : Limit_Array;
    I4MA                : treal;
    I8MA_ARR            : Limit_Array;
    I8MA                : treal;
    I12MA_ARR           : Limit_Array;
    I12MA               : treal;
    I24MA_ARR           : Limit_Array;
    I24MA               : treal;

    PS_VSS     : Option;
    PS_VDD     : Option;
    PS_VDDG     : Option;
    PS_VDDSHV     : Option;
    PS_VDD2     : Option;


    SuppliesUsed  : SupplyInfoType; Export;

    TGB_ARR                        : Limit_Array;
    TGB                            : treal;
    PROPGB_ARR                     : Limit_Array;
    PROPGB                         : treal;

    VNM1V                  : treal;
    VMX1V                  : treal;
    VMN1V                  : treal;
    FVMN1V                 : treal; { rev04e }
    VTNM1V                 : treal;
    VTMX1V                 : treal;
{rev_ICCQ} VTTMP1V           : treal;
{rev_ICCQ} VTHOT1V           : treal;
{rev_ICCQ} VTHOT1V_GB           : treal;
{rev_ICCQ} ICCQ_SHMOO_MAX_V  : treal;
{rev_ICCQ} ICCQ_SHMOO_MIN_V  : treal;
{rev_ICCQ} ICCQ_SHMOO_STEP_V  : treal;
{rev_ICCQ} TRUE_DATA      : boolean;
{rev_ICCQ} ICCQ_COMMENT   : String80;
{rev_ICCQ} LOW_ICCQ_NAME    : String80;
{rev_ICCQ} LOW_ICCQ_RESULT  : boolean;
{rev_ICCQ} LOW_ICCQ_V       : treal;
{rev_ICCQ} LOW_ICCQ_I       : treal;
    VTMN1V                 : treal;
    VGOI1V                 : treal;

    VNM3V                  : treal;
    VMX3V                  : treal;
    VMN3V                  : treal;
    VTNM3V                 : treal;
    VTMX3V                 : treal;
    VTMN3V                 : treal;
    VGOI3V                 : treal;

    VNM1Va               : treal;
    VMX1Va               : treal;
    VMN1Va               : treal;
    VTNM1Va              : treal;
    VTMX1Va              : treal;
    VTMN1Va              : treal;
    VGOI1Va              : treal;

    VNM1Vb               : treal;
    VMX1Vb               : treal;
    VMN1Vb               : treal;
    VTNM1Vb              : treal;
    VTMX1Vb              : treal;
    VTMN1Vb              : treal;
    VGOI1Vb              : treal;

    VMNC1V                  : treal;
    VMXC1V                  : treal;
    VNMC1V                  : treal;
    VTNMC1V                 : treal;
    VTMNC1V                 : treal;
    VTMXC1V                 : treal;
    VGOIC1V                 : treal;


    t_range : treal;
    v_range : treal;
    VMINF, VMAXF, VSTEPF   : treal;
    VMINI, VMAXI, VSTEPI   : treal;
    VMIND, VMAXD, VSTEPD   : treal;

    CP                             : integer; Export;
    Reload_the_Setups              : boolean;  Export;
    Have_not_datalogged            : boolean;
    Datalog_In_Production          : boolean;
    Temp_Limit                     : Tmp_Limit_Type;
    VCC_PGM                        : treal; Export;
    PIN_COUNT                      : integer;
    PIN_ARRAY                      : PinListArrayType;
    ACMARG_PINS                    : PinListArrayType; {margins}
    DCMARG_PINS                    : PinListArrayType; {margins}
    DCMARG_CNT                     : integer; {margins}
    ACMARG_CNT                     : integer; {margins}
    I,J                            : integer;
    APP_ARRAY                      : PinListArrayType;
    APP_COUNT                      : integer;
    DL_ARRAY                       : DLArrayType;
    TIDeviceType:  DeviceType      ; Export;
    TITestType :  Test_Limit_Type  ; Export;
    TITestTemp :  Temp_Limit_Type  ; Export;
    Handler_Temp                   : Integer; Export;
    RlyCheckDone, RelayCheckDone   : boolean;
    I_Fail                         : boolean;
    V_Fail                         : boolean;
    pin_latch_result               : boolean;
    NumPMs                         : integer;
    IccqPMResult                   : boolean;
    VBoxMinV                       : array [1..2] of treal; {revvmin}
    VBoxMaxV                       : array [1..2] of treal; {revvmin}
    VMinStartV                     : array [1..2] of treal; {revvmin}
    VMinStopV                      : array [1..2] of treal; {revvmin}
    VMinLRes                       : array [1..2] of treal; {revvmin}
    VMinBRes                       : array [1..2] of treal; {revvmin}
    VMinMaxShift                   : array [1..2] of treal; {revvmin}
    VMinShiftArray                 : array [1..2] of treal; {revvmin}
    GVBoxResult                    : array [1..2] of boolean; {revvmin}
    GVMinResult                    : array [1..2] of boolean; {revvmin}

    LVDSa_COUNT                     : integer;
    LVDSa_ARRAY                     : PinListArrayType;
    CML_COUNT                     : integer;
    CML_ARRAY                     : PinListArrayType;

    (* Exported Vars needed by diff clock alignment routines. rev05a*)
    g_HighSpeedClkAdjustments : ARRAY[1..10] OF HighSpeedClkAdjustTyp; EXPORT;
    g_HighSpeedClkCnt         : INTEGER;    EXPORT;
    g_AllClocksMeasured       : BOOLEAN;    EXPORT;
    g_ExecMethod              : ExecType;   EXPORT;
    g_FreqPin                 : PINLIST;    EXPORT;

{TA}FAILED_TEST  : TestNames;
{TA}FAIL_OPT     : Option;
{TA}FAILED_FIRST : boolean;
{TA}TEST_ALL     : boolean;
{TA}FAILED_TMP   : boolean;
{rev10b} OLD_ICCQ_RESULT : boolean;
{rev10b} DELTA_ICCQ_RESULT : boolean;
{rev10b} ICCQ_MIN_READ : treal;
{rev10b} ICCQ_MAX_READ : treal;


WindowVar
    Pin_Maps    :  Pin_maps_type ;   'Pin Map:';     Export;
    Test_Limit  :  Test_Limit_Type;  'Test Limits:'; Export;
    Test_Timer  :  boolean;          'Test Timer:';
    Perpin_Data :  boolean;          'Per Pin Data:'; Export;
    AC_marg_nom :  boolean;          'AC Char NOM:';
    AC_marg_min :  boolean;          'AC Char MIN:';
    AC_marg_max :  boolean;          'AC Char MAX:';
    DC_marg_nom :  boolean;          'DC Char NOM:';
    DC_marg_min :  boolean;          'DC Char MIN:';
    DC_marg_max :  boolean;          'DC Char MAX:';
    trange      :  real;             'Tmargin Range (ns): ';
    vrange      :  real;             'Vmargin Range (mv): ';
    vddshmoo    :  boolean;          'Vdd Shmoo:';
    iddqshmoo   :  boolean;          'Iddq Shmoo:';
    delayshmoo  :  boolean;          'Delay Shmoo:';
    LU_Enable   :  boolean;          'Latch-Up Enable';
{TA}TEST_ALL_WIN : boolean;    'Test All Tests';
{TA}TEST_ALL_OPEN: boolean;    'All Unless Opens';
{TA}TEST_ALL_SHRT: boolean;    'All Unless Shorts';
{TA}TEST_ALL_JL  : boolean;    'All Unless Jnct Lkg';
{TA}TEST_ALL_P2P : boolean;    'All Unless Pin2Pin';


{rev_ICCQ} ICCQ_DATA   :  boolean;          'ICCQ Data (QC):';    {rev_ICCQ}
{rev_ICCQ} ICCQ_SHMOO  :  boolean;          'ICCQ Shmoo (QC):';   {rev_ICCQ}
{rev_ICCQ} ICCQ_SHMOO_MAX : real;           'ICCQ Shmoo Max(V):'; {rev_ICCQ}
{rev_ICCQ} ICCQ_SHMOO_MIN : real;           'ICCQ Shmoo Min(V):'; {rev_ICCQ}
{rev_ICCQ} ICCQ_SHMOO_STEP : real;          'ICCQ Shmoo Step(V):';{rev_ICCQ}
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
#include '/usr/tc/vusp/custom/TWUtilities.h'; {revtw}
#endif                                      {revtw}
#endif                                      {revtw}

(* start main shmoo code *)
#define $T_USER_PARM 'true'
#define $T_USER_EXEC 'true'
#define $T_USER_PARAMETRIC 'true'

procedure ShmooAll(CharDCSetup, CharACSetup : String20;
                   PatternName1, PatternName2 : Pattern;
                   V1, V2, DV, T1, T2, DT: TReal;
                   fail_report_option, shmoo_output_option : char;
                   FileName : String20); Import; {char}

procedure SearchVdd(CharDCSetup : String20; SearchOption : Option;
                    PatternName1, PatternName2 : Pattern;
                    V1, V2, DV : TReal; shmoo_output_option : char;
                    FileName : String20); Import; {char}

procedure ShmooIddq(CharDCSetup : String20; PatternName : Pattern;
                    V1, V2, DV : TReal; pmexit_number : integer;
                    OpenPinList, ForcePinList : PinList;
                    IddqSupplyName : SupplyName; WaitTime, SupplyClamp : TReal;
                    search_range : boolean;
                    FileName : String20); Import; {char}

procedure ShmooDelay(CharDCSetup : String20; PatternName : Pattern;
                     V1, V2, DV : TReal; delay_cycles : integer;
                     StartPin : PinList; StartTrigger : Option;
                     StopPin : PinList; StopTrigger : Option;
                     FileName : String20); Import; {char}



{ VOH and VOL binary search }
function bin_srch_vout(ttype:test_type; termination: l50_l25_ohms;
                       spec_min, spec_max : treal;
                       pin_group : pinlist) : boolean; Import;


{ VIH and VIL binary search }
function bin_srch(ttype:test_type; start_srch, stop_srch : treal;
                  spec_min, spec_max : treal;
                  pattern_name : pattern;
                  plist : pinlist) : boolean; Import;
procedure init_vout_array(var vout_array : vout_array_type); Import;

function  LVDS_VOD(pins_at_logic_high        : pinlist;
                   array_of_diff_pin_pairs   : DiffArrayType;
                   terminating_resistance    : TerminationType;
                   vref                      : treal;
                   min_voh                   : treal;
                   max_voh                   : treal;
                   min_vol                   : treal;
                   max_vol                   : treal;
                   min_vod                   : treal;
                   DiffArray_length          : integer  ) : boolean; Import;

function SE_vout(spec_min               : treal;
                 spec_max               : treal;
                 termination            : TerminationType;
                 vref                   : treal;
                 pin_group              : PinList  ) : boolean ; Import;

procedure lbc_routine; Import;
{PROCEDURE LBC_Cap_routine(path_name:string80); Import;  {rev05a}}
procedure TMULBCCompVoltage(StartEdgeDir,StopEdgeDir:Option); Import;
Procedure DCTableSet(Vdd : TReal; SelectDCTable : String20); Import; {revvmin}
Function TMULBCCompTime(ACMeas:TReal) : TReal; Import;

Procedure T_timing_search(file_name:String80; pattern_name:Pattern;
                          cycle_name:Cycle; num_pins:integer;
                          pins:PinListArrayType; edge:integer;
                          search_type, search_range_type:char;
                          range, limit, res:treal; comment:String80); Import;

Procedure T_voltage_search(file_name:String80; pattern_name:Pattern;
                           num_pins:integer; pins:PinListArrayType;
                           volt: integer;
                           search_type, search_range_type:char;
                           range, limit, res:treal; comment:String80); Import;

Procedure Operator_Setup; Import;
Procedure Test; Import;
Procedure Error_Trap( prog,line : integer;
                      routine,error : ErrorArrayType ); Import;

#ifdef $Site_SPC_flag then
#if $Site_SPC_flag then
#if ($Device_SPC = 'TRUE') then
procedure Find_Parameter_File(VAR Pin_Maps:Pin_maps_type); Import;
#endif;
#endif;
#endif;

{rev01d}
FUNCTION MeasureFrequency(patt_label     : Pattern; 
                          plist          : PinList;
                          tmucycle       : integer;
                          timebase, ExpectFreq,FreqErr: TREAL): boolean; 
                          Import;
(* Imported routines for different clock adjustments. rev05a. *)
PROCEDURE InitHighSpeedClkAdjustments; IMPORT;
FUNCTION DutyCycleCheck(PinN, PinP: PINLIST; Patt: Pattern): BOOLEAN; IMPORT;
PROCEDURE ApplyDiffClkAdjustment(PinN, PinP: PINLIST); IMPORT;

Procedure INITIALIZE_PINS;                        Export;

(*
***********************************************************************
****            INITIALIZE PINS                                    ****
***********************************************************************
*)
var
  I : integer;

  begin

    CR := chr(10);
    Have_not_datalogged := TRUE;

  CASE TIDeviceType OF   (* Supply Assignments *)
    FT_1 :
      BEGIN
        PS_VDD := s_DPS1A;
        PS_VDDG := s_DPS2B;
        PS_VDDSHV := s_DPS2A;
        PS_VDD2 := s_DPS1B;
      END;
    PB_2 :
      BEGIN
        PS_VDDG := s_DPS2A;
        PS_VDDSHV := s_DPS1B;
        PS_VDD := s_DPS1A;
        PS_VDD2 := s_DPS2B;
      END;
    OTHERWISE  (* CASE DEFAULT *)
      BEGIN
        PS_VDD := s_DPS1A;
        PS_VDDG := s_DPS2B;
        PS_VDDSHV := s_DPS2A;
        PS_VDD2 := s_DPS1B;
      END;
  END; {case of TIDeviceType}

  (* Initialize Shmoo Supplies *)
  SuppliesUsed[VDD].PS     := PS_VDD; (* 1V *)
  SuppliesUsed[VDD].Shmoo  := ON;
  SuppliesUsed[VDDG].PS     := PS_VDDG; (* 1Va *)
  SuppliesUsed[VDDG].Shmoo  := OFF;
  SuppliesUsed[VDDSHV].PS     := PS_VDDSHV; (* 3V *)
  SuppliesUsed[VDDSHV].Shmoo  := OFF;
  SuppliesUsed[VDD2].PS     := PS_VDD2; (* 1Vb *)
  SuppliesUsed[VDD2].Shmoo  := OFF;

  CASE TIDeviceType OF
    FT_1 :
      BEGIN
        Dut_Map[186] :=   1; {C6XX_OUTP }  Dut_Map[ 89] := 262; {TC622P    }
        Dut_Map[185] :=   2; {C6XX_OUTN }  Dut_Map[ 90] := 263; {TC622N    }
        Dut_Map[162] :=   3; {C167_15UTP}  Dut_Map[157] := 264; {RSTZ_SHSI }
        Dut_Map[161] :=   4; {C167_155_O}  Dut_Map[158] := 265; {THSI_RP_BY}
        Dut_Map[130] :=   5; {C1G35_OUTP}  Dut_Map[ 14] := 266; {C1G35_INP }
        Dut_Map[129] :=   6; {C1G35_OUTN}  Dut_Map[ 13] := 267; {C1G35_INN }
        Dut_Map[ 81] :=   7; {PAR_6XX_TP}  Dut_Map[141] := 268; {T2G7_BYPAS}
        Dut_Map[ 82] :=   8; {PAR_6XX_OU}  Dut_Map[498] := 269; {T2G7_TDO  }
        Dut_Map[138] :=   9; {P2G7_OUTP }  Dut_Map[ 18] := 270; {T2G7_PRMP0}
        Dut_Map[137] :=  10; {P2G7_OUTN }  Dut_Map[ 17] := 271; {T2G7_PRE_E}
        Dut_Map[134] :=  11; {D2G7_OUTP3}  Dut_Map[142] := 272; {TM_SHSI   }
        Dut_Map[  9] :=  12; {D2G7_OUTP2}  Dut_Map[143] := 273; {T2G7_TDI  }
        Dut_Map[  5] :=  13; {D2G7_OUTP1}  Dut_Map[502] := 274; {PRBSGSYNC4}
        Dut_Map[  1] :=  14; {D2G7_OUTP0}  Dut_Map[505] := 275; {PRBSGSYNC3}
        Dut_Map[133] :=  15; {D2G7_OUTN3}  Dut_Map[506] := 276; {PRBSGSYNC2}
        Dut_Map[ 10] :=  16; {D2G7_OUTN2}  Dut_Map[509] := 277; {PRBSGSYNC1}
        Dut_Map[  6] :=  17; {D2G7_OUTN1}  Dut_Map[510] := 278; {PRBSGSYNC0}
        Dut_Map[  2] :=  18; {D2G7_OUTN0}  Dut_Map[326] := 279; {TMPDIOA   }
        Dut_Map[ 21] :=  19; {MODE2G7   }  Dut_Map[325] := 280; {TMPDIOK   }
        Dut_Map[182] :=  20; {DX6X_OUTP5}  Dut_Map[ 91] := 281; {VBIASLVDA1}
        Dut_Map[178] :=  21; {DX6X_OUTP4}  Dut_Map[213] := 282; {VBIASLVDB1}
        Dut_Map[ 62] :=  22; {DX6X_OUTP3}  Dut_Map[118] := 283; {VIBASLVDSA}
        Dut_Map[ 58] :=  23; {DX6X_OUTP2}  Dut_Map[117] := 284; {VBIASLVDSI}
        Dut_Map[ 54] :=  24; {DX6X_OUTP1}  Dut_Map[ 15] := 285; {VDDTXBIAS }
        Dut_Map[ 50] :=  25; {D6XX_OUTP1}  Dut_Map[165] := 286; {VBIASLVDSA}
        Dut_Map[174] :=  26; {D6XX_OUTP9}  Dut_Map[166] := 287; {VBIASLVDSO}
        Dut_Map[170] :=  27; {D6XX_OUTP8}  Dut_Map[319] := 288; {M_T_CLK3  }
        Dut_Map[197] :=  28; {D6XX_OUTP7}  Dut_Map[451] := 289; {M_T_CLK5  }
        Dut_Map[201] :=  29; {D6XX_OUTP6}{ Dut_Map[ -1] := 290;  VDD       }
        Dut_Map[ 77] :=  30; {D6XX_OUTP5}{ Dut_Map[ -1] := 291;  VSS       }
        Dut_Map[193] :=  31; {D6XX_OUTP4}{ Dut_Map[ -1] := 292;  VDDG      }
        Dut_Map[ 69] :=  32; {D6XX_OUTP3}{ Dut_Map[ -1] := 293;  VDDG      }
        Dut_Map[ 73] :=  33; {D6XX_OUTP2}{ Dut_Map[ -1] := 294;  VSS       }
        Dut_Map[ 66] :=  34; {D6XX_OUT10}{ Dut_Map[ -1] := 295;  VSS       }
        Dut_Map[190] :=  35; {D6XX_OUTP0}{ Dut_Map[ -1] := 296;  VSS       }
        Dut_Map[181] :=  36; {DX6X_OUTN5}{ Dut_Map[ -1] := 297;  VSS       }
        Dut_Map[177] :=  37; {DX6X_OUTN4}{ Dut_Map[ -1] := 298;  VSS       }
        Dut_Map[ 61] :=  38; {DX6X_OUTN3}{ Dut_Map[ -1] := 299;  VDDSHV    }
        Dut_Map[ 57] :=  39; {DX6X_OUTN2}{ Dut_Map[ -1] := 300;  VSS       }
        Dut_Map[ 53] :=  40; {DX6X_OUTN1}{ Dut_Map[ -1] := 301;  VSS       }
        Dut_Map[ 49] :=  41; {D6XX_OUTN1}{ Dut_Map[ -1] := 302;  VSS       }
        Dut_Map[173] :=  42; {D6XX_OUTN9}{ Dut_Map[ -1] := 303;  VSS       }
        Dut_Map[169] :=  43; {D6XX_OUTN8}{ Dut_Map[ -1] := 304;  VDD       }
        Dut_Map[198] :=  44; {D6XX_OUTN7}{ Dut_Map[ -1] := 305;  VSS       }
        Dut_Map[202] :=  45; {D6XX_OUTN6}{ Dut_Map[ -1] := 306;  VDDSHV    }
        Dut_Map[ 78] :=  46; {D6XX_OUTN5}{ Dut_Map[ -1] := 307;  VSS       }
        Dut_Map[194] :=  47; {D6XX_OUTN4}{ Dut_Map[ -1] := 308;  VSS       }
        Dut_Map[ 70] :=  48; {D6XX_OUTN3}{ Dut_Map[ -1] := 309;  VDD       }
        Dut_Map[ 74] :=  49; {D6XX_OUTN2}{ Dut_Map[ -1] := 310;  VDDSHV    }
        Dut_Map[ 65] :=  50; {D6XX_OUT11}{ Dut_Map[ -1] := 311;  VSS       }
        Dut_Map[189] :=  51; {D6XX_OUTN0}{ Dut_Map[ -1] := 312;  VDD       }
        Dut_Map[409] :=  52; {D622_INP15}{ Dut_Map[ -1] := 313;  VDDSHV    }
        Dut_Map[405] :=  53; {D622_INP14}{ Dut_Map[ -1] := 314;  VSS       }
        Dut_Map[401] :=  54; {D622_INP13}{ Dut_Map[ -1] := 315;  VDDSHV    }
        Dut_Map[281] :=  55; {D622_INP12}{ Dut_Map[ -1] := 316;  VSS       }
        Dut_Map[285] :=  56; {D622_INP11}{ Dut_Map[ -1] := 317;  VDDSHV    }
        Dut_Map[273] :=  57; {D622_INP10}{ Dut_Map[ -1] := 318;  VDD       }
        Dut_Map[277] :=  58; {D622_INP9 }{ Dut_Map[ -1] := 319;  VSS       }
        Dut_Map[393] :=  59; {D622_INP8 }{ Dut_Map[ -1] := 320;  VDD       }
        Dut_Map[397] :=  60; {D622_INP7 }{ Dut_Map[ -1] := 321;  VSS       }
        Dut_Map[385] :=  61; {D622_INP6 }{ Dut_Map[ -1] := 322;  VDDSHV    }
        Dut_Map[389] :=  62; {D622_INP5 }{ Dut_Map[ -1] := 323;  VSS       }
        Dut_Map[270] :=  63; {D622_INP4 }{ Dut_Map[ -1] := 324;  VSS       }
        Dut_Map[266] :=  64; {D622_INP3 }{ Dut_Map[ -1] := 325;  VSS       }
        Dut_Map[262] :=  65; {D622_INP2 }{ Dut_Map[ -1] := 326;  VDDSHV    }
        Dut_Map[258] :=  66; {D622_INP1 }{ Dut_Map[ -1] := 327;  VDD       }
        Dut_Map[254] :=  67; {D622_INP0 }{ Dut_Map[ -1] := 328;  VSS       }
        Dut_Map[410] :=  68; {D622_INN15}{ Dut_Map[ -1] := 329;  VDD2      }
        Dut_Map[406] :=  69; {D622_INN14}{ Dut_Map[ -1] := 330;  VDDSHV    }
        Dut_Map[402] :=  70; {D622_INN13}{ Dut_Map[ -1] := 331;  VSS       }
        Dut_Map[282] :=  71; {D622_INN12}{ Dut_Map[ -1] := 332;  VDD       }
        Dut_Map[286] :=  72; {D622_INN11}{ Dut_Map[ -1] := 333;  VDDSHV    }
        Dut_Map[274] :=  73; {D622_INN10}{ Dut_Map[ -1] := 334;  VSS       }
        Dut_Map[278] :=  74; {D622_INN9 }{ Dut_Map[ -1] := 335;  VSS       }
        Dut_Map[394] :=  75; {D622_INN8 }{ Dut_Map[ -1] := 336;  VDDSHV    }
        Dut_Map[398] :=  76; {D622_INN7 }{ Dut_Map[ -1] := 337;  VDD       }
        Dut_Map[386] :=  77; {D622_INN6 }{ Dut_Map[ -1] := 338;  VDD2      }
        Dut_Map[390] :=  78; {D622_INN5 }{ Dut_Map[ -1] := 339;  VDDSHV    }
        Dut_Map[269] :=  79; {D622_INN4 }{ Dut_Map[ -1] := 340;  VDD       }
        Dut_Map[265] :=  80; {D622_INN3 }{ Dut_Map[ -1] := 341;  VDDSHV    }
        Dut_Map[261] :=  81; {D622_INN2 }{ Dut_Map[ -1] := 342;  VSS       }
        Dut_Map[257] :=  82; {D622_INN1 }{ Dut_Map[ -1] := 343;  VDD       }
        Dut_Map[253] :=  83; {D622_INN0 }{ Dut_Map[ -1] := 344;  VDDSHV    }
        Dut_Map[246] :=  84; {C155_BPLNP}{ Dut_Map[ -1] := 345;  VDDSHV    }
        Dut_Map[245] :=  85; {C155_BPL_I}{ Dut_Map[ -1] := 346;  VSS       }
        Dut_Map[413] :=  86; {C8K_BPLP  }{ Dut_Map[ -1] := 347;  VDD2      }
        Dut_Map[414] :=  87; {C8K_BPLN  }{ Dut_Map[ -1] := 348;  VSS       }
        Dut_Map[250] :=  88; {C155_CSDNP}{ Dut_Map[ -1] := 349;  VDD       }
        Dut_Map[249] :=  89; {C155_CSD_I}{ Dut_Map[ -1] := 350;  VSS       }
        Dut_Map[289] :=  90; {C8K_CSDP  }{ Dut_Map[ -1] := 351;  VSS       }
        Dut_Map[290] :=  91; {C8K_CSDN  }{ Dut_Map[ -1] := 352;  VDDSHV    }
        Dut_Map[501] :=  92; {C5_HCH_RX }{ Dut_Map[ -1] := 353;  VDDSHV    }
        Dut_Map[378] :=  93; {P5_HCH_RX }{ Dut_Map[ -1] := 354;  VSS       }
        Dut_Map[382] :=  94; {D5_HCH_RX_}{ Dut_Map[ -1] := 355;  VDD       }
        Dut_Map[373] :=  95; {D5_HCH_RX7}{ Dut_Map[ -1] := 356;  VDD       }
        Dut_Map[497] :=  96; {D5_HCH_RX6}{ Dut_Map[ -1] := 357;  VDD       }
        Dut_Map[370] :=  97; {D5_HCH_RX5}{ Dut_Map[ -1] := 358;  VSS       }
        Dut_Map[374] :=  98; {D5_HCH_RX4}{ Dut_Map[ -1] := 359;  VDD       }
        Dut_Map[375] :=  99; {D5_HCH_RX3}{ Dut_Map[ -1] := 360;  VDDSHV    }
        Dut_Map[493] := 100; {D5_HCH_RX2}{ Dut_Map[ -1] := 361;  VSS       }
        Dut_Map[377] := 101; {D5_HCH_RX1}{ Dut_Map[ -1] := 362;  VDD2      }
        Dut_Map[494] := 102; {D5_HCH_RX0}{ Dut_Map[ -1] := 363;  VSS       }
        Dut_Map[381] := 103; {D10_BXI_RX}{ Dut_Map[ -1] := 364;  VSS       }
        Dut_Map[114] := 104; {C6XX_EXTP }{ Dut_Map[ -1] := 365;  VDD       }
        Dut_Map[113] := 105; {C6XX_EXTN }{ Dut_Map[ -1] := 366;  VSS       }
        Dut_Map[238] := 106; {C666_EXTP }{ Dut_Map[ -1] := 367;  VDD       }
        Dut_Map[237] := 107; {C666_EXTN }{ Dut_Map[ -1] := 368;  VDD       }
        Dut_Map[ 85] := 108; {C80_EXTP  }{ Dut_Map[ -1] := 369;  VDD       }
        Dut_Map[ 86] := 109; {C80_EXTN  }{ Dut_Map[ -1] := 370;  VSS       }
        Dut_Map[205] := 110; {C83_EXTP  }{ Dut_Map[ -1] := 371;  VSS       }
        Dut_Map[206] := 111; {C83_EXTN  }{ Dut_Map[ -1] := 372;  VDD       }
        Dut_Map[485] := 112; {ONDDSI    }{ Dut_Map[ -1] := 373;  VSS       }
        Dut_Map[369] := 113; {ONMFRI    }{ Dut_Map[ -1] := 374;  VSS       }
        Dut_Map[489] := 114; {ONCKI     }{ Dut_Map[ -1] := 375;  VDD       }
        Dut_Map[ 25] := 115; {CICLK     }{ Dut_Map[ -1] := 376;  VDDSHV    }
        Dut_Map[ 29] := 116; {CICSN     }{ Dut_Map[ -1] := 377;  VSS       }
        Dut_Map[154] := 117; {CIINF7    }{ Dut_Map[ -1] := 378;  VSS       }
        Dut_Map[149] := 118; {CIINF6    }{ Dut_Map[ -1] := 379;  VDD       }
        Dut_Map[153] := 119; {CIINF5    }{ Dut_Map[ -1] := 380;  VSS       }
        Dut_Map[148] := 120; {CIINF4    }{ Dut_Map[ -1] := 381;  VSS       }
        Dut_Map[147] := 121; {CIINF3    }{ Dut_Map[ -1] := 382;  VDDSHV    }
        Dut_Map[146] := 122; {CIINF2    }{ Dut_Map[ -1] := 383;  VDD       }
        Dut_Map[ 30] := 123; {CIINF1    }{ Dut_Map[ -1] := 384;  VDDSHV    }
        Dut_Map[145] := 124; {CIINF0    }{ Dut_Map[ -1] := 385;  VSS       }
        Dut_Map[ 22] := 125; {CIACKN    }{ Dut_Map[ -1] := 386;  VSS       }
        Dut_Map[ 23] := 126; {CICSRN    }{ Dut_Map[ -1] := 387;  VSS       }
        Dut_Map[ 26] := 127; {CTLID_RSTN}{ Dut_Map[ -1] := 388;  VSS       }
        Dut_Map[126] := 128; {DATA_V_INP}{ Dut_Map[ -1] := 389;  VDD2      }
        Dut_Map[125] := 129; {DATA_VALID}{ Dut_Map[ -1] := 390;  VSS       }
        Dut_Map[242] := 130; {ES_SPILLP }{ Dut_Map[ -1] := 391;  VSS       }
        Dut_Map[241] := 131; {ES_SPILLN }{ Dut_Map[ -1] := 392;  VSS       }
        Dut_Map[122] := 132; {DATVAL_INP}{ Dut_Map[ -1] := 393;  VSS       }
        Dut_Map[121] := 133; {DATVAL_ES_}{ Dut_Map[ -1] := 394;  VSS       }
        Dut_Map[478] := 134; {RECENTER  }{ Dut_Map[ -1] := 395;  VSS       }
        Dut_Map[354] := 135; {MX_PAR_TOG}{ Dut_Map[ -1] := 396;  VSS       }
        Dut_Map[466] := 136; {AISINSMSOH}{ Dut_Map[ -1] := 397;  VDD       }
        Dut_Map[486] := 137; {RSTN      }{ Dut_Map[ -1] := 398;  VSS       }
        Dut_Map[481] := 138; {POISON    }{ Dut_Map[ -1] := 399;  VSS       }
        Dut_Map[490] := 139; {REIRDI    }{ Dut_Map[ -1] := 400;  VSS       }
        Dut_Map[217] := 140; {KAINP     }{ Dut_Map[ -1] := 401;  VSS       }
        Dut_Map[218] := 141; {KAINN     }{ Dut_Map[ -1] := 402;  VSS       }
        Dut_Map[209] := 142; {KBINP     }{ Dut_Map[ -1] := 403;  VSS       }
        Dut_Map[210] := 143; {KBINN     }{ Dut_Map[ -1] := 404;  VSS       }
        Dut_Map[350] := 144; {GPIO15    }{ Dut_Map[ -1] := 405;  VSS       }
        Dut_Map[349] := 145; {GPIO14    }{ Dut_Map[ -1] := 406;  VSS       }
        Dut_Map[346] := 146; {GPIO13    }{ Dut_Map[ -1] := 407;  VSS       }
        Dut_Map[345] := 147; {GPIO12    }{ Dut_Map[ -1] := 408;  VSS       }
        Dut_Map[343] := 148; {GPIO11    }{ Dut_Map[ -1] := 409;  VDD       }
        Dut_Map[342] := 149; {GPIO10    }{ Dut_Map[ -1] := 410;  VDDSHV    }
        Dut_Map[341] := 150; {GPIO9     }{ Dut_Map[ -1] := 411;  VSS       }
        Dut_Map[338] := 151; {GPIO8     }{ Dut_Map[ -1] := 412;  VSS       }
        Dut_Map[337] := 152; {GPIO7     }{ Dut_Map[ -1] := 413;  VSS       }
        Dut_Map[462] := 153; {GPIO6     }{ Dut_Map[ -1] := 414;  VDD       }
        Dut_Map[461] := 154; {GPIO5     }{ Dut_Map[ -1] := 415;  VSS       }
        Dut_Map[458] := 155; {GPIO4     }{ Dut_Map[ -1] := 416;  VSS       }
        Dut_Map[457] := 156; {GPIO3     }{ Dut_Map[ -1] := 417;  VSS       }
        Dut_Map[455] := 157; {GPIO2     }{ Dut_Map[ -1] := 418;  VDDSHV    }
        Dut_Map[454] := 158; {GPIO1     }{ Dut_Map[ -1] := 419;  VSS       }
{rev00b Dut_Map[442] := 159; {GPIO0     }{ Dut_Map[ -1] := 420;  VDD       }}
        Dut_Map[453] := 159; {GPIO0     }{ Dut_Map[ -1] := 420;  VDD       }
        Dut_Map[333] := 160; {BYPASS_PLL}{ Dut_Map[ -1] := 421;  VSS       }
        Dut_Map[358] := 161; {IDDQN     }{ Dut_Map[ -1] := 422;  VSS       }
        Dut_Map[495] := 162; {THZ_N     }{ Dut_Map[ -1] := 423;  VSS       }
        Dut_Map[366] := 163; {T_SET_BD2I}{ Dut_Map[ -1] := 424;  VSS       }
        Dut_Map[298] := 164; {T_DISARST }{ Dut_Map[ -1] := 425;  VSS       }
        Dut_Map[467] := 165; {TOUT7     }{ Dut_Map[ -1] := 426;  VSS       }
        Dut_Map[469] := 166; {TOUT6     }{ Dut_Map[ -1] := 427;  VDD       }
        Dut_Map[470] := 167; {TOUT5     }{ Dut_Map[ -1] := 428;  VDD       }
        Dut_Map[473] := 168; {TOUT4     }{ Dut_Map[ -1] := 429;  VDD       }
        Dut_Map[475] := 169; {TOUT3     }{ Dut_Map[ -1] := 430;  VSS       }
        Dut_Map[474] := 170; {TOUT2     }{ Dut_Map[ -1] := 431;  VSS       }
        Dut_Map[477] := 171; {TOUT1     }{ Dut_Map[ -1] := 432;  VDD       }
        Dut_Map[353] := 172; {TOUT0     }{ Dut_Map[ -1] := 433;  VDDSHV    }
        Dut_Map[294] := 173; {TPO       }{ Dut_Map[ -1] := 434;  VSS       }
        Dut_Map[ 93] := 174; {TC166P    }{ Dut_Map[ -1] := 435;  VDDG      }
        Dut_Map[ 94] := 175; {TC166N    }{ Dut_Map[ -1] := 436;  VDD       }
        Dut_Map[427] := 176; {T_CLK13   }{ Dut_Map[ -1] := 437;  VDDG      }
        Dut_Map[361] := 177; {T_CLK12   }{ Dut_Map[ -1] := 438;  VDDG      }
        Dut_Map[365] := 178; {T_CLK11   }{ Dut_Map[ -1] := 439;  VDDSHV    }
        Dut_Map[438] := 179; {T_CLK10   }{ Dut_Map[ -1] := 440;  VDD       }
        Dut_Map[437] := 180; {T_CLK9    }{ Dut_Map[ -1] := 441;  VDD       }
        Dut_Map[446] := 181; {T_CLK8    }{ Dut_Map[ -1] := 442;  VDD       }
        Dut_Map[445] := 182; {T_CLK7    }{ Dut_Map[ -1] := 443;  VDD       }
        Dut_Map[443] := 183; {T_CLK6    }{ Dut_Map[ -1] := 444;  VDDSHV    }
{rev00b Dut_Map[452] := 184; {T_CLK5    }{ Dut_Map[ -1] := 445;  VSS       }}
        Dut_Map[442] := 184; {T_CLK5    }{ Dut_Map[ -1] := 445;  VSS       }
        Dut_Map[441] := 185; {T_CLK4    }{ Dut_Map[ -1] := 446;  VDD       }
{rev00b Dut_Map[320] := 186; {T_CLK3    }{ Dut_Map[ -1] := 447;  VSS       }}
        Dut_Map[323] := 186; {T_CLK3    }{ Dut_Map[ -1] := 447;  VSS       }
        Dut_Map[322] := 187; {T_CLK2    }{ Dut_Map[ -1] := 448;  VDD       }
{rev00b Dut_Map[323] := 188; {T_CLK1    }{ Dut_Map[ -1] := 449;  VSS       }}
        Dut_Map[321] := 188; {T_CLK1    }{ Dut_Map[ -1] := 449;  VSS       }
        Dut_Map[447] := 189; {T_CLK0    }{ Dut_Map[ -1] := 450;  VDDG      }
        Dut_Map[465] := 190; {TM_SCAN   }{ Dut_Map[ -1] := 451;  VSS       }
        Dut_Map[450] := 191; {TE_SCAN   }{ Dut_Map[ -1] := 452;  VDD       }
        Dut_Map[313] := 192; {TSCI7     }{ Dut_Map[ -1] := 453;  VDDG      }
        Dut_Map[435] := 193; {TSCI6     }{ Dut_Map[ -1] := 454;  VSS       }
        Dut_Map[315] := 194; {TSCI5     }{ Dut_Map[ -1] := 455;  VSS       }
        Dut_Map[434] := 195; {TSCI4     }{ Dut_Map[ -1] := 456;  VDD       }
        Dut_Map[433] := 196; {TSCI3     }{ Dut_Map[ -1] := 457;  VDD       }
        Dut_Map[318] := 197; {TSCI2     }{ Dut_Map[ -1] := 458;  VSS       }
        Dut_Map[317] := 198; {TSCI1     }{ Dut_Map[ -1] := 459;  VSS       }
        Dut_Map[439] := 199; {TSCI0     }{ Dut_Map[ -1] := 460;  VDD       }
        Dut_Map[483] := 200; {TDO       }{ Dut_Map[ -1] := 461;  VSS       }
        Dut_Map[357] := 201; {TDI       }{ Dut_Map[ -1] := 462;  VDDSHV    }
        Dut_Map[482] := 202; {TCK       }{ Dut_Map[ -1] := 463;  VSS       }
        Dut_Map[363] := 203; {TMS       }{ Dut_Map[ -1] := 464;  VSS       }
        Dut_Map[362] := 204; {TRSTN     }{ Dut_Map[ -1] := 465;  VDDSHV    }
        Dut_Map[334] := 205; {TBIST_RUN }{ Dut_Map[ -1] := 466;  VSS       }
        Dut_Map[314] := 206; {TBIST_ROT }{ Dut_Map[ -1] := 467;  VSS       }
        Dut_Map[335] := 207; {TM_RAM    }{ Dut_Map[ -1] := 468;  VSS       }
        Dut_Map[330] := 208; {TBIST_FAIL}{ Dut_Map[ -1] := 469;  VDD       }
        Dut_Map[329] := 209; {TBIST_DONE}{ Dut_Map[ -1] := 470;  VSS       }
        Dut_Map[214] := 210; {TM_PLL    }{ Dut_Map[ -1] := 471;  VDD2      }
        Dut_Map[449] := 211; {TPLL_TEST1}{ Dut_Map[ -1] := 472;  VSS       }
        Dut_Map[103] := 212; {TM_HSI    }{ Dut_Map[ -1] := 473;  VDDSHV    }
        Dut_Map[421] := 213; {THSI_BYPS1}{ Dut_Map[ -1] := 474;  VSS       }
        Dut_Map[221] := 214; {THSI_BYPAS}{ Dut_Map[ -1] := 475;  VDDSHV    }
        Dut_Map[222] := 215; {THSI_SEL01}{ Dut_Map[ -1] := 476;  VSS       }
        Dut_Map[101] := 216; {THSI_SEL00}{ Dut_Map[ -1] := 477;  VDD       }
        Dut_Map[302] := 217; {THSI_SEL11}{ Dut_Map[ -1] := 478;  VDD2      }
        Dut_Map[425] := 218; {THSI_SEL10}{ Dut_Map[ -1] := 479;  VDDSHV    }
        Dut_Map[109] := 219; {THSI_PWRDN}{ Dut_Map[ -1] := 480;  VSS       }
        Dut_Map[111] := 220; {RSTZ_HSI  }{ Dut_Map[ -1] := 481;  VSS       }
        Dut_Map[295] := 221; {THSI_INA  }{ Dut_Map[ -1] := 482;  VSS       }
        Dut_Map[301] := 222; {THSI_OPEN }{ Dut_Map[ -1] := 483;  VSS       }
        Dut_Map[426] := 223; {TESTSELZ15}{ Dut_Map[ -1] := 484;  VDDSHV    }
        Dut_Map[309] := 224; {TESTSELZ14}{ Dut_Map[ -1] := 485;  VDD       }
        Dut_Map[429] := 225; {TESTSELZ13}{ Dut_Map[ -1] := 486;  VDD2      }
        Dut_Map[431] := 226; {TESTSELZ12}{ Dut_Map[ -1] := 487;  VSS       }
        Dut_Map[306] := 227; {TESTSELZ11}{ Dut_Map[ -1] := 488;  VSS       }
        Dut_Map[305] := 228; {TESTSELZ10}{ Dut_Map[ -1] := 489;  VDD       }
        Dut_Map[310] := 229; {TESTSELZ9 }{ Dut_Map[ -1] := 490;  VSS       }
        Dut_Map[307] := 230; {TESTSELZ8 }{ Dut_Map[ -1] := 491;  VDDSHV    }
        Dut_Map[225] := 231; {TESTSELZ7 }{ Dut_Map[ -1] := 492;  VDD       }
        Dut_Map[110] := 232; {TESTSELZ6 }{ Dut_Map[ -1] := 493;  VDDSHV    }
        Dut_Map[226] := 233; {TESTSELZ5 }{ Dut_Map[ -1] := 494;  VDDSHV    }
        Dut_Map[230] := 234; {TESTSELZ4 }{ Dut_Map[ -1] := 495;  VSS       }
        Dut_Map[229] := 235; {TESTSELZ3 }{ Dut_Map[ -1] := 496;  VDD       }
        Dut_Map[233] := 236; {TESTSELZ2 }{ Dut_Map[ -1] := 497;  VSS       }
        Dut_Map[234] := 237; {TESTSELZ1 }{ Dut_Map[ -1] := 498;  VSS       }
        Dut_Map[235] := 238; {TESTSELZ0 }{ Dut_Map[ -1] := 499;  VDD       }
        Dut_Map[303] := 239; {THSI_STAND}{ Dut_Map[ -1] := 500;  VDDSHV    }
        Dut_Map[418] := 240; {THSI_CKGE1}{ Dut_Map[ -1] := 501;  VSS       }
        Dut_Map[ 98] := 241; {THSI_CKGEN}{ Dut_Map[ -1] := 502;  VSS       }
        Dut_Map[417] := 242; {THSI_SELN1}{ Dut_Map[ -1] := 503;  VDDSHV    }
        Dut_Map[ 97] := 243; {THSI_SEL_E}{ Dut_Map[ -1] := 504;  VDDSHV    }
        Dut_Map[422] := 244; {THSI_ACC_S}{ Dut_Map[ -1] := 505;  VSS       }
        Dut_Map[430] := 245; {THSI_RESYN}{ Dut_Map[ -1] := 506;  VSS       }
        Dut_Map[419] := 246; {TC78_SEL  }{ Dut_Map[ -1] := 507;  VDD       }
        Dut_Map[415] := 247; {THSI_OUTA }{ Dut_Map[ -1] := 508;  VDD       }
        Dut_Map[297] := 248; {THSI_TCKOU}{ Dut_Map[ -1] := 509;  VDD       }
        Dut_Map[299] := 249; {THSI_TESTD}{ Dut_Map[ -1] := 510;  VDD       }
        Dut_Map[293] := 250; {THSI_OUTD1}{ Dut_Map[ -1] := 511;  VSS       }
        Dut_Map[102] := 251; {THSI_OUTD0}{ Dut_Map[ -1] := 512;  VSS       }
        Dut_Map[ 33] := 252; {THSI_P2S  }{ Dut_Map[ -1] := 513;  VDD       }
        Dut_Map[ 45] := 253; {THSI_D787 }{ Dut_Map[ -1] := 514;  VDD       }
        Dut_Map[ 47] := 254; {THSI_D786 }{ Dut_Map[ -1] := 515;  VSS       }
        Dut_Map[ 42] := 255; {THSI_D785 }{ Dut_Map[ -1] := 516;  VSS       }
        Dut_Map[ 46] := 256; {THSI_D784 }{ Dut_Map[ -1] := 517;  VDDSHV    }
        Dut_Map[ 41] := 257; {THSI_D783 }{ Dut_Map[ -1] := 518;  VDDSHV    }
        Dut_Map[ 37] := 258; {THSI_D782 }{ Dut_Map[ -1] := 519;  VSS       }
        Dut_Map[ 38] := 259; {THSI_D781 }{ Dut_Map[ -1] := 520;  VDDSHV    }
        Dut_Map[ 34] := 260; {THSI_D780 }{ Dut_Map[ -1] := 521;  VDDSHV    }
        Dut_Map[155] := 261; {BYPASS_HSI}{ Dut_Map[ -1] := 522;  VSS       }

        (* The following pins were assigned unused tester  *)
        (* channels for compatability with other pin maps: *)
        Dut_Map[  3] := 290; {VDD       }
        Dut_Map[  4] := 291; {VSS       }
        Dut_Map[  7] := 292; {VDDG      }
        Dut_Map[  8] := 293; {VDDG      }
        Dut_Map[ 11] := 294; {VSS       }
        Dut_Map[ 12] := 295; {VSS       }
        Dut_Map[ 16] := 296; {VSS       }
        Dut_Map[ 19] := 297; {VSS       }
        Dut_Map[ 20] := 298; {VSS       }
        Dut_Map[ 24] := 299; {VDDSHV    }
        Dut_Map[ 27] := 300; {VSS       }
        Dut_Map[ 28] := 301; {VSS       }
        Dut_Map[ 31] := 302; {VSS       }
        Dut_Map[ 32] := 303; {VSS       }
        Dut_Map[ 35] := 304; {VDD       }
        Dut_Map[ 36] := 305; {VSS       }
        Dut_Map[ 39] := 306; {VDDSHV    }
        Dut_Map[ 40] := 307; {VSS       }
        Dut_Map[ 43] := 308; {VSS       }
        Dut_Map[ 44] := 309; {VDD       }
        Dut_Map[ 48] := 310; {VDDSHV    }
        Dut_Map[ 51] := 311; {VSS       }
        Dut_Map[ 52] := 312; {VDD       }
        Dut_Map[ 55] := 313; {VDDSHV    }
        Dut_Map[ 56] := 314; {VSS       }
        Dut_Map[ 59] := 315; {VDDSHV    }
        Dut_Map[ 60] := 316; {VSS       }
        Dut_Map[ 63] := 317; {VDDSHV    }
        Dut_Map[ 64] := 318; {VDD       }
        Dut_Map[ 67] := 319; {VSS       }
        Dut_Map[ 68] := 320; {VDD       }
        Dut_Map[ 71] := 321; {VSS       }
        Dut_Map[ 72] := 322; {VDDSHV    }
        Dut_Map[ 75] := 323; {VSS       }
        Dut_Map[ 76] := 324; {VSS       }
        Dut_Map[ 79] := 325; {VSS       }
        Dut_Map[ 80] := 326; {VDDSHV    }
        Dut_Map[ 83] := 327; {VDD       }
        Dut_Map[ 84] := 328; {VSS       }
        Dut_Map[ 87] := 329; {VDD2      }
        Dut_Map[ 88] := 330; {VDDSHV    }
        Dut_Map[ 92] := 331; {VSS       }
        Dut_Map[ 95] := 332; {VDD       }
        Dut_Map[ 96] := 333; {VDDSHV    }
        Dut_Map[ 99] := 334; {VSS       }
        Dut_Map[100] := 335; {VSS       }
        Dut_Map[104] := 336; {VDDSHV    }
        Dut_Map[105] := 337; {VDD       }
        Dut_Map[106] := 338; {VDD2      }
        Dut_Map[107] := 339; {VDDSHV    }
        Dut_Map[108] := 340; {VDD       }
        Dut_Map[112] := 341; {VDDSHV    }
        Dut_Map[115] := 342; {VSS       }
        Dut_Map[116] := 343; {VDD       }
        Dut_Map[119] := 344; {VDDSHV    }
        Dut_Map[120] := 345; {VDDSHV    }
        Dut_Map[123] := 346; {VSS       }
        Dut_Map[124] := 347; {VDD2      }
        Dut_Map[127] := 348; {VSS       }
        Dut_Map[128] := 349; {VDD       }
        Dut_Map[131] := 350; {VSS       }
        Dut_Map[132] := 351; {VSS       }
        Dut_Map[135] := 352; {VDDSHV    }
        Dut_Map[136] := 353; {VDDSHV    }
        Dut_Map[139] := 354; {VSS       }
        Dut_Map[140] := 355; {VDD       }
        Dut_Map[144] := 356; {VDD       }
        Dut_Map[150] := 357; {VDD       }
        Dut_Map[151] := 358; {VSS       }
        Dut_Map[152] := 359; {VDD       }
        Dut_Map[156] := 360; {VDDSHV    }
        Dut_Map[159] := 361; {VSS       }
        Dut_Map[160] := 362; {VDD2      }
        Dut_Map[163] := 363; {VSS       }
        Dut_Map[164] := 364; {VSS       }
        Dut_Map[167] := 365; {VDD       }
        Dut_Map[168] := 366; {VSS       }
        Dut_Map[171] := 367; {VDD       }
        Dut_Map[172] := 368; {VDD       }
        Dut_Map[175] := 369; {VDD       }
        Dut_Map[176] := 370; {VSS       }
        Dut_Map[179] := 371; {VSS       }
        Dut_Map[180] := 372; {VDD       }
        Dut_Map[183] := 373; {VSS       }
        Dut_Map[184] := 374; {VSS       }
        Dut_Map[187] := 375; {VDD       }
        Dut_Map[188] := 376; {VDDSHV    }
        Dut_Map[191] := 377; {VSS       }
        Dut_Map[192] := 378; {VSS       }
        Dut_Map[195] := 379; {VDD       }
        Dut_Map[196] := 380; {VSS       }
        Dut_Map[199] := 381; {VSS       }
        Dut_Map[200] := 382; {VDDSHV    }
        Dut_Map[203] := 383; {VDD       }
        Dut_Map[204] := 384; {VDDSHV    }
        Dut_Map[207] := 385; {VSS       }
        Dut_Map[208] := 386; {VSS       }
        Dut_Map[211] := 387; {VSS       }
        Dut_Map[212] := 388; {VSS       }
        Dut_Map[215] := 389; {VDD2      }
        Dut_Map[216] := 390; {VSS       }
        Dut_Map[219] := 391; {VSS       }
        Dut_Map[220] := 392; {VSS       }
        Dut_Map[223] := 393; {VSS       }
        Dut_Map[224] := 394; {VSS       }
        Dut_Map[227] := 395; {VSS       }
        Dut_Map[228] := 396; {VSS       }
        Dut_Map[231] := 397; {VDD       }
        Dut_Map[232] := 398; {VSS       }
        Dut_Map[236] := 399; {VSS       }
        Dut_Map[239] := 400; {VSS       }
        Dut_Map[240] := 401; {VSS       }
        Dut_Map[243] := 402; {VSS       }
        Dut_Map[244] := 403; {VSS       }
        Dut_Map[247] := 404; {VSS       }
        Dut_Map[248] := 405; {VSS       }
        Dut_Map[251] := 406; {VSS       }
        Dut_Map[252] := 407; {VSS       }
        Dut_Map[255] := 408; {VSS       }
        Dut_Map[256] := 409; {VDD       }
        Dut_Map[259] := 410; {VDDSHV    }
        Dut_Map[260] := 411; {VSS       }
        Dut_Map[263] := 412; {VSS       }
        Dut_Map[264] := 413; {VSS       }
        Dut_Map[267] := 414; {VDD       }
        Dut_Map[268] := 415; {VSS       }
        Dut_Map[271] := 416; {VSS       }
        Dut_Map[272] := 417; {VSS       }
        Dut_Map[275] := 418; {VDDSHV    }
        Dut_Map[276] := 419; {VSS       }
        Dut_Map[279] := 420; {VDD       }
        Dut_Map[280] := 421; {VSS       }
        Dut_Map[283] := 422; {VSS       }
        Dut_Map[284] := 423; {VSS       }
        Dut_Map[287] := 424; {VSS       }
        Dut_Map[288] := 425; {VSS       }
        Dut_Map[291] := 426; {VSS       }
        Dut_Map[292] := 427; {VDD       }
        Dut_Map[296] := 428; {VDD       }
        Dut_Map[300] := 429; {VDD       }
        Dut_Map[304] := 430; {VSS       }
        Dut_Map[308] := 431; {VSS       }
        Dut_Map[311] := 432; {VDD       }
        Dut_Map[312] := 433; {VDDSHV    }
        Dut_Map[316] := 434; {VSS       }
{rev00b}Dut_Map[452] := 435; {VDDG      }
        Dut_Map[324] := 436; {VDD       }
        Dut_Map[327] := 437; {VDDG      }
        Dut_Map[328] := 438; {VDDG      }
        Dut_Map[331] := 439; {VDDSHV    }
        Dut_Map[332] := 440; {VDD       }
        Dut_Map[336] := 441; {VDD       }
        Dut_Map[339] := 442; {VDD       }
        Dut_Map[340] := 443; {VDD       }
        Dut_Map[344] := 444; {VDDSHV    }
        Dut_Map[347] := 445; {VSS       }
        Dut_Map[348] := 446; {VDD       }
        Dut_Map[351] := 447; {VSS       }
        Dut_Map[352] := 448; {VDD       }
        Dut_Map[355] := 449; {VSS       }
        Dut_Map[356] := 450; {VDDG      }
        Dut_Map[359] := 451; {VSS       }
        Dut_Map[360] := 452; {VDD       }
        Dut_Map[364] := 453; {VDDG      }
        Dut_Map[367] := 454; {VSS       }
        Dut_Map[368] := 455; {VSS       }
        Dut_Map[371] := 456; {VDD       }
        Dut_Map[372] := 457; {VDD       }
        Dut_Map[376] := 458; {VSS       }
        Dut_Map[379] := 459; {VSS       }
        Dut_Map[380] := 460; {VDD       }
        Dut_Map[383] := 461; {VSS       }
        Dut_Map[384] := 462; {VDDSHV    }
        Dut_Map[387] := 463; {VSS       }
        Dut_Map[388] := 464; {VSS       }
        Dut_Map[391] := 465; {VDDSHV    }
        Dut_Map[392] := 466; {VSS       }
        Dut_Map[395] := 467; {VSS       }
        Dut_Map[396] := 468; {VSS       }
        Dut_Map[399] := 469; {VDD       }
        Dut_Map[400] := 470; {VSS       }
        Dut_Map[403] := 471; {VDD2      }
        Dut_Map[404] := 472; {VSS       }
        Dut_Map[407] := 473; {VDDSHV    }
        Dut_Map[408] := 474; {VSS       }
        Dut_Map[411] := 475; {VDDSHV    }
        Dut_Map[412] := 476; {VSS       }
        Dut_Map[416] := 477; {VDD       }
        Dut_Map[420] := 478; {VDD2      }
        Dut_Map[423] := 479; {VDDSHV    }
        Dut_Map[424] := 480; {VSS       }
        Dut_Map[428] := 481; {VSS       }
        Dut_Map[432] := 482; {VSS       }
        Dut_Map[436] := 483; {VSS       }
        Dut_Map[440] := 484; {VDDSHV    }
        Dut_Map[444] := 485; {VDD       }
        Dut_Map[448] := 486; {VDD2      }
{rev00b}Dut_Map[320] := 487; {VSS       }
        Dut_Map[456] := 488; {VSS       }
        Dut_Map[459] := 489; {VDD       }
        Dut_Map[460] := 490; {VSS       }
        Dut_Map[463] := 491; {VDDSHV    }
        Dut_Map[464] := 492; {VDD       }
        Dut_Map[468] := 493; {VDDSHV    }
        Dut_Map[471] := 494; {VDDSHV    }
        Dut_Map[472] := 495; {VSS       }
        Dut_Map[476] := 496; {VDD       }
        Dut_Map[479] := 497; {VSS       }
        Dut_Map[480] := 498; {VSS       }
        Dut_Map[484] := 499; {VDD       }
        Dut_Map[487] := 500; {VDDSHV    }
        Dut_Map[488] := 501; {VSS       }
        Dut_Map[491] := 502; {VSS       }
        Dut_Map[492] := 503; {VDDSHV    }
        Dut_Map[496] := 504; {VDDSHV    }
        Dut_Map[499] := 505; {VSS       }
        Dut_Map[500] := 506; {VSS       }
        Dut_Map[503] := 507; {VDD       }
        Dut_Map[504] := 508; {VDD       }
        Dut_Map[507] := 509; {VDD       }
        Dut_Map[508] := 510; {VDD       }
        Dut_Map[511] := 511; {VSS       }
        Dut_Map[512] := 512; {VSS       }
      END;
    PB_2 :
      BEGIN
        Dut_Map[444] :=   1; {C6XX_OUTP }  Dut_Map[452] := 262; {TC622P    }
        Dut_Map[443] :=   2; {C6XX_OUTN }  Dut_Map[451] := 263; {TC622N    }
        Dut_Map[311] :=   3; {C167_15UTP}  Dut_Map[399] := 264; {RSTZ_SHSI }
        Dut_Map[312] :=   4; {C167_155_O}  Dut_Map[398] := 265; {THSI_RP_BY}
        Dut_Map[261] :=   5; {C1G35_OUTP}  Dut_Map[258] := 266; {C1G35_INP }
        Dut_Map[260] :=   6; {C1G35_OUTN}  Dut_Map[257] := 267; {C1G35_INN }
        Dut_Map[334] :=   7; {PAR_6XX_TP}  Dut_Map[266] := 268; {T2G7_BYPAS}
        Dut_Map[333] :=   8; {PAR_6XX_OU}  Dut_Map[245] := 269; {T2G7_TDO  }
        Dut_Map[265] :=   9; {P2G7_OUTP }  Dut_Map[270] := 270; {T2G7_PRMP0}
        Dut_Map[264] :=  10; {P2G7_OUTN }  Dut_Map[269] := 271; {T2G7_PRE_E}
        Dut_Map[263] :=  11; {D2G7_OUTP3}  Dut_Map[267] := 272; {TM_SHSI   }
        Dut_Map[256] :=  12; {D2G7_OUTP2}  Dut_Map[268] := 273; {T2G7_TDI  }
        Dut_Map[254] :=  13; {D2G7_OUTP1}  Dut_Map[250] := 274; {PRBSGSYNC4}
        Dut_Map[252] :=  14; {D2G7_OUTP0}  Dut_Map[249] := 275; {PRBSGSYNC3}
        Dut_Map[262] :=  15; {D2G7_OUTN3}  Dut_Map[248] := 276; {PRBSGSYNC2}
        Dut_Map[255] :=  16; {D2G7_OUTN2}  Dut_Map[247] := 277; {PRBSGSYNC1}
        Dut_Map[253] :=  17; {D2G7_OUTN1}  Dut_Map[246] := 278; {PRBSGSYNC0}
        Dut_Map[251] :=  18; {D2G7_OUTN0}  Dut_Map[186] := 279; {TMPDIOA   }
        Dut_Map[271] :=  19; {MODE2G7   }  Dut_Map[187] := 280; {TMPDIOK   }
        Dut_Map[442] :=  20; {DX6X_OUTP5}  Dut_Map[456] := 281; {VBIASLVDA1}
        Dut_Map[440] :=  21; {DX6X_OUTP4}  Dut_Map[455] := 282; {VBIASLVDB1}
        Dut_Map[438] :=  22; {DX6X_OUTP3}  Dut_Map[381] := 283; {VIBASLVDSA}
        Dut_Map[436] :=  23; {DX6X_OUTP2}  Dut_Map[382] := 284; {VBIASLVDSI}
        Dut_Map[434] :=  24; {DX6X_OUTP1}  Dut_Map[259] := 285; {VDDTXBIAS }
        Dut_Map[320] :=  25; {D6XX_OUTP1}  Dut_Map[313] := 286; {VBIASLVDSA}
        Dut_Map[317] :=  26; {D6XX_OUTP9}  Dut_Map[314] := 287; {VBIASLVDSO}
        Dut_Map[316] :=  27; {D6XX_OUTP8}  Dut_Map[ 41] := 288; {M_T_CLK3  }
        Dut_Map[332] :=  28; {D6XX_OUTP7}  Dut_Map[ 45] := 289; {M_T_CLK5  }
        Dut_Map[330] :=  29; {D6XX_OUTP6}{ Dut_Map[ -1] := 290;  VDD       }
        Dut_Map[328] :=  30; {D6XX_OUTP5}{ Dut_Map[ -1] := 291;  VSS       }
        Dut_Map[326] :=  31; {D6XX_OUTP4}{ Dut_Map[ -1] := 292;  VDDG      }
        Dut_Map[324] :=  32; {D6XX_OUTP3}{ Dut_Map[ -1] := 293;  VDDG      }
        Dut_Map[322] :=  33; {D6XX_OUTP2}{ Dut_Map[ -1] := 294;  VSS       }
        Dut_Map[448] :=  34; {D6XX_OUT10}{ Dut_Map[ -1] := 295;  VSS       }
        Dut_Map[446] :=  35; {D6XX_OUTP0}{ Dut_Map[ -1] := 296;  VSS       }
        Dut_Map[441] :=  36; {DX6X_OUTN5}{ Dut_Map[ -1] := 297;  VSS       }
        Dut_Map[439] :=  37; {DX6X_OUTN4}{ Dut_Map[ -1] := 298;  VSS       }
        Dut_Map[437] :=  38; {DX6X_OUTN3}{ Dut_Map[ -1] := 299;  VDDSHV    }
        Dut_Map[435] :=  39; {DX6X_OUTN2}{ Dut_Map[ -1] := 300;  VSS       }
        Dut_Map[433] :=  40; {DX6X_OUTN1}{ Dut_Map[ -1] := 301;  VSS       }
        Dut_Map[319] :=  41; {D6XX_OUTN1}{ Dut_Map[ -1] := 302;  VSS       }
        Dut_Map[318] :=  42; {D6XX_OUTN9}{ Dut_Map[ -1] := 303;  VSS       }
        Dut_Map[315] :=  43; {D6XX_OUTN8}{ Dut_Map[ -1] := 304;  VDD       }
        Dut_Map[331] :=  44; {D6XX_OUTN7}{ Dut_Map[ -1] := 305;  VSS       }
        Dut_Map[329] :=  45; {D6XX_OUTN6}{ Dut_Map[ -1] := 306;  VDDSHV    }
        Dut_Map[327] :=  46; {D6XX_OUTN5}{ Dut_Map[ -1] := 307;  VSS       }
        Dut_Map[325] :=  47; {D6XX_OUTN4}{ Dut_Map[ -1] := 308;  VSS       }
        Dut_Map[323] :=  48; {D6XX_OUTN3}{ Dut_Map[ -1] := 309;  VDD       }
        Dut_Map[321] :=  49; {D6XX_OUTN2}{ Dut_Map[ -1] := 310;  VDDSHV    }
        Dut_Map[447] :=  50; {D6XX_OUT11}{ Dut_Map[ -1] := 311;  VSS       }
        Dut_Map[445] :=  51; {D6XX_OUTN0}{ Dut_Map[ -1] := 312;  VDD       }
        Dut_Map[135] :=  52; {D622_INP15}{ Dut_Map[ -1] := 313;  VDDSHV    }
        Dut_Map[134] :=  53; {D622_INP14}{ Dut_Map[ -1] := 314;  VSS       }
        Dut_Map[132] :=  54; {D622_INP13}{ Dut_Map[ -1] := 315;  VDDSHV    }
        Dut_Map[130] :=  55; {D622_INP12}{ Dut_Map[ -1] := 316;  VSS       }
        Dut_Map[ 16] :=  56; {D622_INP11}{ Dut_Map[ -1] := 317;  VDDSHV    }
        Dut_Map[ 14] :=  57; {D622_INP10}{ Dut_Map[ -1] := 318;  VDD       }
        Dut_Map[ 12] :=  58; {D622_INP9 }{ Dut_Map[ -1] := 319;  VSS       }
        Dut_Map[ 10] :=  59; {D622_INP8 }{ Dut_Map[ -1] := 320;  VDD       }
        Dut_Map[  8] :=  60; {D622_INP7 }{ Dut_Map[ -1] := 321;  VSS       }
        Dut_Map[  6] :=  61; {D622_INP6 }{ Dut_Map[ -1] := 322;  VDDSHV    }
        Dut_Map[  4] :=  62; {D622_INP5 }{ Dut_Map[ -1] := 323;  VSS       }
        Dut_Map[  2] :=  63; {D622_INP4 }{ Dut_Map[ -1] := 324;  VSS       }
        Dut_Map[512] :=  64; {D622_INP3 }{ Dut_Map[ -1] := 325;  VSS       }
        Dut_Map[510] :=  65; {D622_INP2 }{ Dut_Map[ -1] := 326;  VDDSHV    }
        Dut_Map[508] :=  66; {D622_INP1 }{ Dut_Map[ -1] := 327;  VDD       }
        Dut_Map[506] :=  67; {D622_INP0 }{ Dut_Map[ -1] := 328;  VSS       }
        Dut_Map[136] :=  68; {D622_INN15}{ Dut_Map[ -1] := 329;  VDD2      }
        Dut_Map[133] :=  69; {D622_INN14}{ Dut_Map[ -1] := 330;  VDDSHV    }
        Dut_Map[131] :=  70; {D622_INN13}{ Dut_Map[ -1] := 331;  VSS       }
        Dut_Map[129] :=  71; {D622_INN12}{ Dut_Map[ -1] := 332;  VDD       }
        Dut_Map[ 15] :=  72; {D622_INN11}{ Dut_Map[ -1] := 333;  VDDSHV    }
        Dut_Map[ 13] :=  73; {D622_INN10}{ Dut_Map[ -1] := 334;  VSS       }
        Dut_Map[ 11] :=  74; {D622_INN9 }{ Dut_Map[ -1] := 335;  VSS       }
        Dut_Map[  9] :=  75; {D622_INN8 }{ Dut_Map[ -1] := 336;  VDDSHV    }
        Dut_Map[  7] :=  76; {D622_INN7 }{ Dut_Map[ -1] := 337;  VDD       }
        Dut_Map[  5] :=  77; {D622_INN6 }{ Dut_Map[ -1] := 338;  VDD2      }
        Dut_Map[  3] :=  78; {D622_INN5 }{ Dut_Map[ -1] := 339;  VDDSHV    }
        Dut_Map[  1] :=  79; {D622_INN4 }{ Dut_Map[ -1] := 340;  VDD       }
        Dut_Map[511] :=  80; {D622_INN3 }{ Dut_Map[ -1] := 341;  VDDSHV    }
        Dut_Map[509] :=  81; {D622_INN2 }{ Dut_Map[ -1] := 342;  VSS       }
        Dut_Map[507] :=  82; {D622_INN1 }{ Dut_Map[ -1] := 343;  VDD       }
        Dut_Map[505] :=  83; {D622_INN0 }{ Dut_Map[ -1] := 344;  VDDSHV    }
        Dut_Map[502] :=  84; {C155_BPLNP}{ Dut_Map[ -1] := 345;  VDDSHV    }
        Dut_Map[501] :=  85; {C155_BPL_I}{ Dut_Map[ -1] := 346;  VSS       }
        Dut_Map[138] :=  86; {C8K_BPLP  }{ Dut_Map[ -1] := 347;  VDD2      }
        Dut_Map[137] :=  87; {C8K_BPLN  }{ Dut_Map[ -1] := 348;  VSS       }
        Dut_Map[504] :=  88; {C155_CSDNP}{ Dut_Map[ -1] := 349;  VDD       }
        Dut_Map[503] :=  89; {C155_CSD_I}{ Dut_Map[ -1] := 350;  VSS       }
        Dut_Map[139] :=  90; {C8K_CSDP  }{ Dut_Map[ -1] := 351;  VSS       }
        Dut_Map[140] :=  91; {C8K_CSDN  }{ Dut_Map[ -1] := 352;  VDDSHV    }
        Dut_Map[244] :=  92; {C5_HCH_RX }{ Dut_Map[ -1] := 353;  VDDSHV    }
        Dut_Map[243] :=  93; {P5_HCH_RX }{ Dut_Map[ -1] := 354;  VSS       }
        Dut_Map[241] :=  94; {D5_HCH_RX_}{ Dut_Map[ -1] := 355;  VDD       }
        Dut_Map[128] :=  95; {D5_HCH_RX7}{ Dut_Map[ -1] := 356;  VDD       }
        Dut_Map[127] :=  96; {D5_HCH_RX6}{ Dut_Map[ -1] := 357;  VDD       }
        Dut_Map[126] :=  97; {D5_HCH_RX5}{ Dut_Map[ -1] := 358;  VSS       }
        Dut_Map[125] :=  98; {D5_HCH_RX4}{ Dut_Map[ -1] := 359;  VDD       }
        Dut_Map[124] :=  99; {D5_HCH_RX3}{ Dut_Map[ -1] := 360;  VDDSHV    }
        Dut_Map[123] := 100; {D5_HCH_RX2}{ Dut_Map[ -1] := 361;  VSS       }
        Dut_Map[122] := 101; {D5_HCH_RX1}{ Dut_Map[ -1] := 362;  VDD2      }
        Dut_Map[121] := 102; {D5_HCH_RX0}{ Dut_Map[ -1] := 363;  VSS       }
        Dut_Map[242] := 103; {D10_BXI_RX}{ Dut_Map[ -1] := 364;  VSS       }
        Dut_Map[380] := 104; {C6XX_EXTP }{ Dut_Map[ -1] := 365;  VDD       }
        Dut_Map[379] := 105; {C6XX_EXTN }{ Dut_Map[ -1] := 366;  VSS       }
        Dut_Map[378] := 106; {C666_EXTP }{ Dut_Map[ -1] := 367;  VDD       }
        Dut_Map[377] := 107; {C666_EXTN }{ Dut_Map[ -1] := 368;  VDD       }
        Dut_Map[450] := 108; {C80_EXTP  }{ Dut_Map[ -1] := 369;  VDD       }
        Dut_Map[449] := 109; {C80_EXTN  }{ Dut_Map[ -1] := 370;  VSS       }
        Dut_Map[336] := 110; {C83_EXTP  }{ Dut_Map[ -1] := 371;  VSS       }
        Dut_Map[335] := 111; {C83_EXTN  }{ Dut_Map[ -1] := 372;  VDD       }
        Dut_Map[117] := 112; {ONDDSI    }{ Dut_Map[ -1] := 373;  VSS       }
        Dut_Map[118] := 113; {ONMFRI    }{ Dut_Map[ -1] := 374;  VSS       }
        Dut_Map[119] := 114; {ONCKI     }{ Dut_Map[ -1] := 375;  VDD       }
        Dut_Map[386] := 115; {CICLK     }{ Dut_Map[ -1] := 376;  VDDSHV    }
        Dut_Map[388] := 116; {CICSN     }{ Dut_Map[ -1] := 377;  VSS       }
        Dut_Map[396] := 117; {CIINF7    }{ Dut_Map[ -1] := 378;  VSS       }
        Dut_Map[395] := 118; {CIINF6    }{ Dut_Map[ -1] := 379;  VDD       }
        Dut_Map[394] := 119; {CIINF5    }{ Dut_Map[ -1] := 380;  VSS       }
        Dut_Map[393] := 120; {CIINF4    }{ Dut_Map[ -1] := 381;  VSS       }
        Dut_Map[392] := 121; {CIINF3    }{ Dut_Map[ -1] := 382;  VDDSHV    }
        Dut_Map[391] := 122; {CIINF2    }{ Dut_Map[ -1] := 383;  VDD       }
        Dut_Map[390] := 123; {CIINF1    }{ Dut_Map[ -1] := 384;  VDDSHV    }
        Dut_Map[389] := 124; {CIINF0    }{ Dut_Map[ -1] := 385;  VSS       }
        Dut_Map[272] := 125; {CIACKN    }{ Dut_Map[ -1] := 386;  VSS       }
        Dut_Map[385] := 126; {CICSRN    }{ Dut_Map[ -1] := 387;  VSS       }
        Dut_Map[387] := 127; {CTLID_RSTN}{ Dut_Map[ -1] := 388;  VSS       }
        Dut_Map[498] := 128; {DATA_V_INP}{ Dut_Map[ -1] := 389;  VDD2      }
        Dut_Map[497] := 129; {DATA_VALID}{ Dut_Map[ -1] := 390;  VSS       }
        Dut_Map[500] := 130; {ES_SPILLP }{ Dut_Map[ -1] := 391;  VSS       }
        Dut_Map[499] := 131; {ES_SPILLN }{ Dut_Map[ -1] := 392;  VSS       }
        Dut_Map[384] := 132; {DATVAL_INP}{ Dut_Map[ -1] := 393;  VSS       }
        Dut_Map[383] := 133; {DATVAL_ES_}{ Dut_Map[ -1] := 394;  VSS       }
        Dut_Map[204] := 134; {RECENTER  }{ Dut_Map[ -1] := 395;  VSS       }
        Dut_Map[203] := 135; {MX_PAR_TOG}{ Dut_Map[ -1] := 396;  VSS       }
        Dut_Map[194] := 136; {AISINSMSOH}{ Dut_Map[ -1] := 397;  VDD       }
        Dut_Map[116] := 137; {RSTN      }{ Dut_Map[ -1] := 398;  VSS       }
        Dut_Map[115] := 138; {POISON    }{ Dut_Map[ -1] := 399;  VSS       }
        Dut_Map[113] := 139; {REIRDI    }{ Dut_Map[ -1] := 400;  VSS       }
        Dut_Map[459] := 140; {KAINP     }{ Dut_Map[ -1] := 401;  VSS       }
        Dut_Map[460] := 141; {KAINN     }{ Dut_Map[ -1] := 402;  VSS       }
        Dut_Map[458] := 142; {KBINP     }{ Dut_Map[ -1] := 403;  VSS       }
        Dut_Map[457] := 143; {KBINN     }{ Dut_Map[ -1] := 404;  VSS       }
        Dut_Map[ 80] := 144; {GPIO15    }{ Dut_Map[ -1] := 405;  VSS       }
        Dut_Map[ 79] := 145; {GPIO14    }{ Dut_Map[ -1] := 406;  VSS       }
        Dut_Map[ 78] := 146; {GPIO13    }{ Dut_Map[ -1] := 407;  VSS       }
        Dut_Map[ 77] := 147; {GPIO12    }{ Dut_Map[ -1] := 408;  VSS       }
        Dut_Map[ 76] := 148; {GPIO11    }{ Dut_Map[ -1] := 409;  VDD       }
        Dut_Map[ 75] := 149; {GPIO10    }{ Dut_Map[ -1] := 410;  VDDSHV    }
        Dut_Map[ 74] := 150; {GPIO9     }{ Dut_Map[ -1] := 411;  VSS       }
        Dut_Map[ 73] := 151; {GPIO8     }{ Dut_Map[ -1] := 412;  VSS       }
        Dut_Map[ 72] := 152; {GPIO7     }{ Dut_Map[ -1] := 413;  VSS       }
        Dut_Map[ 71] := 153; {GPIO6     }{ Dut_Map[ -1] := 414;  VDD       }
        Dut_Map[ 70] := 154; {GPIO5     }{ Dut_Map[ -1] := 415;  VSS       }
        Dut_Map[ 69] := 155; {GPIO4     }{ Dut_Map[ -1] := 416;  VSS       }
        Dut_Map[ 68] := 156; {GPIO3     }{ Dut_Map[ -1] := 417;  VSS       }
        Dut_Map[ 67] := 157; {GPIO2     }{ Dut_Map[ -1] := 418;  VDDSHV    }
        Dut_Map[ 66] := 158; {GPIO1     }{ Dut_Map[ -1] := 419;  VSS       }
        Dut_Map[ 65] := 159; {GPIO0     }{ Dut_Map[ -1] := 420;  VDD       }
        Dut_Map[190] := 160; {BYPASS_PLL}{ Dut_Map[ -1] := 421;  VSS       }
        Dut_Map[206] := 161; {IDDQN     }{ Dut_Map[ -1] := 422;  VSS       }
        Dut_Map[120] := 162; {THZ_N     }{ Dut_Map[ -1] := 423;  VSS       }
        Dut_Map[240] := 163; {T_SET_BD2I}{ Dut_Map[ -1] := 424;  VSS       }
        Dut_Map[ 48] := 164; {T_DISARST }{ Dut_Map[ -1] := 425;  VSS       }
        Dut_Map[195] := 165; {TOUT7     }{ Dut_Map[ -1] := 426;  VSS       }
        Dut_Map[196] := 166; {TOUT6     }{ Dut_Map[ -1] := 427;  VDD       }
        Dut_Map[197] := 167; {TOUT5     }{ Dut_Map[ -1] := 428;  VDD       }
        Dut_Map[199] := 168; {TOUT4     }{ Dut_Map[ -1] := 429;  VDD       }
        Dut_Map[198] := 169; {TOUT3     }{ Dut_Map[ -1] := 430;  VSS       }
        Dut_Map[200] := 170; {TOUT2     }{ Dut_Map[ -1] := 431;  VSS       }
        Dut_Map[201] := 171; {TOUT1     }{ Dut_Map[ -1] := 432;  VDD       }
        Dut_Map[202] := 172; {TOUT0     }{ Dut_Map[ -1] := 433;  VDDSHV    }
        Dut_Map[143] := 173; {TPO       }{ Dut_Map[ -1] := 434;  VSS       }
        Dut_Map[453] := 174; {TC166P    }{ Dut_Map[ -1] := 435;  VDDG      }
        Dut_Map[454] := 175; {TC166N    }{ Dut_Map[ -1] := 436;  VDD       }
        Dut_Map[172] := 176; {T_CLK13   }{ Dut_Map[ -1] := 437;  VDDG      }
        Dut_Map[237] := 177; {T_CLK12   }{ Dut_Map[ -1] := 438;  VDDG      }
        Dut_Map[114] := 178; {T_CLK11   }{ Dut_Map[ -1] := 439;  VDDSHV    }
        Dut_Map[ 61] := 179; {T_CLK10   }{ Dut_Map[ -1] := 440;  VDD       }
        Dut_Map[ 62] := 180; {T_CLK9    }{ Dut_Map[ -1] := 441;  VDD       }
        Dut_Map[ 63] := 181; {T_CLK8    }{ Dut_Map[ -1] := 442;  VDD       }
        Dut_Map[ 64] := 182; {T_CLK7    }{ Dut_Map[ -1] := 443;  VDD       }
        Dut_Map[177] := 183; {T_CLK6    }{ Dut_Map[ -1] := 444;  VDDSHV    }
        Dut_Map[ 46] := 184; {T_CLK5    }{ Dut_Map[ -1] := 445;  VSS       }
        Dut_Map[179] := 185; {T_CLK4    }{ Dut_Map[ -1] := 446;  VDD       }
        Dut_Map[ 42] := 186; {T_CLK3    }{ Dut_Map[ -1] := 447;  VSS       }
        Dut_Map[181] := 187; {T_CLK2    }{ Dut_Map[ -1] := 448;  VDD       }
        Dut_Map[182] := 188; {T_CLK1    }{ Dut_Map[ -1] := 449;  VSS       }
        Dut_Map[183] := 189; {T_CLK0    }{ Dut_Map[ -1] := 450;  VDDG      }
        Dut_Map[193] := 190; {TM_SCAN   }{ Dut_Map[ -1] := 451;  VSS       }
        Dut_Map[192] := 191; {TE_SCAN   }{ Dut_Map[ -1] := 452;  VDD       }
        Dut_Map[ 53] := 192; {TSCI7     }{ Dut_Map[ -1] := 453;  VDDG      }
        Dut_Map[ 54] := 193; {TSCI6     }{ Dut_Map[ -1] := 454;  VSS       }
        Dut_Map[ 55] := 194; {TSCI5     }{ Dut_Map[ -1] := 455;  VSS       }
        Dut_Map[ 56] := 195; {TSCI4     }{ Dut_Map[ -1] := 456;  VDD       }
        Dut_Map[ 57] := 196; {TSCI3     }{ Dut_Map[ -1] := 457;  VDD       }
        Dut_Map[ 58] := 197; {TSCI2     }{ Dut_Map[ -1] := 458;  VSS       }
        Dut_Map[ 59] := 198; {TSCI1     }{ Dut_Map[ -1] := 459;  VSS       }
        Dut_Map[ 60] := 199; {TSCI0     }{ Dut_Map[ -1] := 460;  VDD       }
        Dut_Map[239] := 200; {TDO       }{ Dut_Map[ -1] := 461;  VSS       }
        Dut_Map[205] := 201; {TDI       }{ Dut_Map[ -1] := 462;  VDDSHV    }
        Dut_Map[238] := 202; {TCK       }{ Dut_Map[ -1] := 463;  VSS       }
        Dut_Map[236] := 203; {TMS       }{ Dut_Map[ -1] := 464;  VSS       }
        Dut_Map[207] := 204; {TRSTN     }{ Dut_Map[ -1] := 465;  VDDSHV    }
        Dut_Map[189] := 205; {TBIST_RUN }{ Dut_Map[ -1] := 466;  VSS       }
        Dut_Map[ 52] := 206; {TBIST_ROT }{ Dut_Map[ -1] := 467;  VSS       }
        Dut_Map[188] := 207; {TM_RAM    }{ Dut_Map[ -1] := 468;  VSS       }
        Dut_Map[184] := 208; {TBIST_FAIL}{ Dut_Map[ -1] := 469;  VDD       }
        Dut_Map[185] := 209; {TBIST_DONE}{ Dut_Map[ -1] := 470;  VSS       }
        Dut_Map[461] := 210; {TM_PLL    }{ Dut_Map[ -1] := 471;  VDD2      }
        Dut_Map[191] := 211; {TPLL_TEST1}{ Dut_Map[ -1] := 472;  VSS       }
        Dut_Map[495] := 212; {TM_HSI    }{ Dut_Map[ -1] := 473;  VDDSHV    }
        Dut_Map[166] := 213; {THSI_BYPS1}{ Dut_Map[ -1] := 474;  VSS       }
        Dut_Map[337] := 214; {THSI_BYPAS}{ Dut_Map[ -1] := 475;  VDDSHV    }
        Dut_Map[463] := 215; {THSI_SEL01}{ Dut_Map[ -1] := 476;  VSS       }
        Dut_Map[338] := 216; {THSI_SEL00}{ Dut_Map[ -1] := 477;  VDD       }
        Dut_Map[164] := 217; {THSI_SEL11}{ Dut_Map[ -1] := 478;  VDD2      }
        Dut_Map[163] := 218; {THSI_SEL10}{ Dut_Map[ -1] := 479;  VDDSHV    }
        Dut_Map[494] := 219; {THSI_PWRDN}{ Dut_Map[ -1] := 480;  VSS       }
        Dut_Map[496] := 220; {RSTZ_HSI  }{ Dut_Map[ -1] := 481;  VSS       }
        Dut_Map[142] := 221; {THSI_INA  }{ Dut_Map[ -1] := 482;  VSS       }
        Dut_Map[161] := 222; {THSI_OPEN }{ Dut_Map[ -1] := 483;  VSS       }
        Dut_Map[171] := 223; {TESTSELZ15}{ Dut_Map[ -1] := 484;  VDDSHV    }
        Dut_Map[173] := 224; {TESTSELZ14}{ Dut_Map[ -1] := 485;  VDD       }
        Dut_Map[174] := 225; {TESTSELZ13}{ Dut_Map[ -1] := 486;  VDD2      }
        Dut_Map[175] := 226; {TESTSELZ12}{ Dut_Map[ -1] := 487;  VSS       }
        Dut_Map[176] := 227; {TESTSELZ11}{ Dut_Map[ -1] := 488;  VSS       }
        Dut_Map[ 49] := 228; {TESTSELZ10}{ Dut_Map[ -1] := 489;  VDD       }
        Dut_Map[ 50] := 229; {TESTSELZ9 }{ Dut_Map[ -1] := 490;  VSS       }
        Dut_Map[ 51] := 230; {TESTSELZ8 }{ Dut_Map[ -1] := 491;  VDDSHV    }
        Dut_Map[369] := 231; {TESTSELZ7 }{ Dut_Map[ -1] := 492;  VDD       }
        Dut_Map[370] := 232; {TESTSELZ6 }{ Dut_Map[ -1] := 493;  VDDSHV    }
        Dut_Map[371] := 233; {TESTSELZ5 }{ Dut_Map[ -1] := 494;  VDDSHV    }
        Dut_Map[372] := 234; {TESTSELZ4 }{ Dut_Map[ -1] := 495;  VSS       }
        Dut_Map[373] := 235; {TESTSELZ3 }{ Dut_Map[ -1] := 496;  VDD       }
        Dut_Map[374] := 236; {TESTSELZ2 }{ Dut_Map[ -1] := 497;  VSS       }
        Dut_Map[375] := 237; {TESTSELZ1 }{ Dut_Map[ -1] := 498;  VSS       }
        Dut_Map[376] := 238; {TESTSELZ0 }{ Dut_Map[ -1] := 499;  VDD       }
        Dut_Map[162] := 239; {THSI_STAND}{ Dut_Map[ -1] := 500;  VDDSHV    }
        Dut_Map[170] := 240; {THSI_CKGE1}{ Dut_Map[ -1] := 501;  VSS       }
        Dut_Map[464] := 241; {THSI_CKGEN}{ Dut_Map[ -1] := 502;  VSS       }
        Dut_Map[165] := 242; {THSI_SELN1}{ Dut_Map[ -1] := 503;  VDDSHV    }
        Dut_Map[462] := 243; {THSI_SEL_E}{ Dut_Map[ -1] := 504;  VDDSHV    }
        Dut_Map[169] := 244; {THSI_ACC_S}{ Dut_Map[ -1] := 505;  VSS       }
        Dut_Map[168] := 245; {THSI_RESYN}{ Dut_Map[ -1] := 506;  VSS       }
        Dut_Map[167] := 246; {TC78_SEL  }{ Dut_Map[ -1] := 507;  VDD       }
        Dut_Map[141] := 247; {THSI_OUTA }{ Dut_Map[ -1] := 508;  VDD       }
        Dut_Map[ 18] := 248; {THSI_TCKOU}{ Dut_Map[ -1] := 509;  VDD       }
        Dut_Map[ 17] := 249; {THSI_TESTD}{ Dut_Map[ -1] := 510;  VDD       }
        Dut_Map[144] := 250; {THSI_OUTD1}{ Dut_Map[ -1] := 511;  VSS       }
        Dut_Map[339] := 251; {THSI_OUTD0}{ Dut_Map[ -1] := 512;  VSS       }
        Dut_Map[400] := 252; {THSI_P2S  }{ Dut_Map[ -1] := 513;  VDD       }
        Dut_Map[310] := 253; {THSI_D787 }{ Dut_Map[ -1] := 514;  VDD       }
        Dut_Map[309] := 254; {THSI_D786 }{ Dut_Map[ -1] := 515;  VSS       }
        Dut_Map[307] := 255; {THSI_D785 }{ Dut_Map[ -1] := 516;  VSS       }
        Dut_Map[308] := 256; {THSI_D784 }{ Dut_Map[ -1] := 517;  VDDSHV    }
        Dut_Map[276] := 257; {THSI_D783 }{ Dut_Map[ -1] := 518;  VDDSHV    }
        Dut_Map[274] := 258; {THSI_D782 }{ Dut_Map[ -1] := 519;  VSS       }
        Dut_Map[275] := 259; {THSI_D781 }{ Dut_Map[ -1] := 520;  VDDSHV    }
        Dut_Map[273] := 260; {THSI_D780 }{ Dut_Map[ -1] := 521;  VDDSHV    }
        Dut_Map[397] := 261; {BYPASS_HSI}{ Dut_Map[ -1] := 522;  VSS       }

        (* The following pins were assigned unused tester  *)
        (* channels for compatability with other pin maps: *)
        Dut_Map[ 19] := 290; {VDD       }
        Dut_Map[ 20] := 291; {VSS       }
        Dut_Map[ 21] := 292; {VDDG      }
        Dut_Map[ 22] := 293; {VDDG      }
        Dut_Map[ 23] := 294; {VSS       }
        Dut_Map[ 24] := 295; {VSS       }
        Dut_Map[ 25] := 296; {VSS       }
        Dut_Map[ 26] := 297; {VSS       }
        Dut_Map[ 27] := 298; {VSS       }
        Dut_Map[ 28] := 299; {VDDSHV    }
        Dut_Map[ 29] := 300; {VSS       }
        Dut_Map[ 30] := 301; {VSS       }
        Dut_Map[ 31] := 302; {VSS       }
        Dut_Map[ 32] := 303; {VSS       }
        Dut_Map[ 33] := 304; {VDD       }
        Dut_Map[ 34] := 305; {VSS       }
        Dut_Map[ 35] := 306; {VDDSHV    }
        Dut_Map[ 36] := 307; {VSS       }
        Dut_Map[ 37] := 308; {VSS       }
        Dut_Map[ 38] := 309; {VDD       }
        Dut_Map[ 39] := 310; {VDDSHV    }
        Dut_Map[ 40] := 311; {VSS       }
        Dut_Map[ 43] := 312; {VDD       }
        Dut_Map[ 44] := 313; {VDDSHV    }
        Dut_Map[ 47] := 314; {VSS       }
        Dut_Map[ 81] := 315; {VDDSHV    }
        Dut_Map[ 82] := 316; {VSS       }
        Dut_Map[ 83] := 317; {VDDSHV    }
        Dut_Map[ 84] := 318; {VDD       }
        Dut_Map[ 85] := 319; {VSS       }
        Dut_Map[ 86] := 320; {VDD       }
        Dut_Map[ 87] := 321; {VSS       }
        Dut_Map[ 88] := 322; {VDDSHV    }
        Dut_Map[ 89] := 323; {VSS       }
        Dut_Map[ 90] := 324; {VSS       }
        Dut_Map[ 91] := 325; {VSS       }
        Dut_Map[ 92] := 326; {VDDSHV    }
        Dut_Map[ 93] := 327; {VDD       }
        Dut_Map[ 94] := 328; {VSS       }
        Dut_Map[ 95] := 329; {VDD2      }
        Dut_Map[ 96] := 330; {VDDSHV    }
        Dut_Map[ 97] := 331; {VSS       }
        Dut_Map[ 98] := 332; {VDD       }
        Dut_Map[ 99] := 333; {VDDSHV    }
        Dut_Map[100] := 334; {VSS       }
        Dut_Map[101] := 335; {VSS       }
        Dut_Map[102] := 336; {VDDSHV    }
        Dut_Map[103] := 337; {VDD       }
        Dut_Map[104] := 338; {VDD2      }
        Dut_Map[105] := 339; {VDDSHV    }
        Dut_Map[106] := 340; {VDD       }
        Dut_Map[107] := 341; {VDDSHV    }
        Dut_Map[108] := 342; {VSS       }
        Dut_Map[109] := 343; {VDD       }
        Dut_Map[110] := 344; {VDDSHV    }
        Dut_Map[111] := 345; {VDDSHV    }
        Dut_Map[112] := 346; {VSS       }
        Dut_Map[145] := 347; {VDD2      }
        Dut_Map[146] := 348; {VSS       }
        Dut_Map[147] := 349; {VDD       }
        Dut_Map[148] := 350; {VSS       }
        Dut_Map[149] := 351; {VSS       }
        Dut_Map[150] := 352; {VDDSHV    }
        Dut_Map[151] := 353; {VDDSHV    }
        Dut_Map[152] := 354; {VSS       }
        Dut_Map[153] := 355; {VDD       }
        Dut_Map[154] := 356; {VDD       }
        Dut_Map[155] := 357; {VDD       }
        Dut_Map[156] := 358; {VSS       }
        Dut_Map[157] := 359; {VDD       }
        Dut_Map[158] := 360; {VDDSHV    }
        Dut_Map[159] := 361; {VSS       }
        Dut_Map[160] := 362; {VDD2      }
        Dut_Map[178] := 363; {VSS       }
        Dut_Map[180] := 364; {VSS       }
        Dut_Map[208] := 365; {VDD       }
        Dut_Map[209] := 366; {VSS       }
        Dut_Map[210] := 367; {VDD       }
        Dut_Map[211] := 368; {VDD       }
        Dut_Map[212] := 369; {VDD       }
        Dut_Map[213] := 370; {VSS       }
        Dut_Map[214] := 371; {VSS       }
        Dut_Map[215] := 372; {VDD       }
        Dut_Map[216] := 373; {VSS       }
        Dut_Map[217] := 374; {VSS       }
        Dut_Map[218] := 375; {VDD       }
        Dut_Map[219] := 376; {VDDSHV    }
        Dut_Map[220] := 377; {VSS       }
        Dut_Map[221] := 378; {VSS       }
        Dut_Map[222] := 379; {VDD       }
        Dut_Map[223] := 380; {VSS       }
        Dut_Map[224] := 381; {VSS       }
        Dut_Map[225] := 382; {VDDSHV    }
        Dut_Map[226] := 383; {VDD       }
        Dut_Map[227] := 384; {VDDSHV    }
        Dut_Map[228] := 385; {VSS       }
        Dut_Map[229] := 386; {VSS       }
        Dut_Map[230] := 387; {VSS       }
        Dut_Map[231] := 388; {VSS       }
        Dut_Map[232] := 389; {VDD2      }
        Dut_Map[233] := 390; {VSS       }
        Dut_Map[234] := 391; {VSS       }
        Dut_Map[235] := 392; {VSS       }
        Dut_Map[277] := 393; {VSS       }
        Dut_Map[278] := 394; {VSS       }
        Dut_Map[279] := 395; {VSS       }
        Dut_Map[280] := 396; {VSS       }
        Dut_Map[281] := 397; {VDD       }
        Dut_Map[282] := 398; {VSS       }
        Dut_Map[283] := 399; {VSS       }
        Dut_Map[284] := 400; {VSS       }
        Dut_Map[285] := 401; {VSS       }
        Dut_Map[286] := 402; {VSS       }
        Dut_Map[287] := 403; {VSS       }
        Dut_Map[288] := 404; {VSS       }
        Dut_Map[289] := 405; {VSS       }
        Dut_Map[290] := 406; {VSS       }
        Dut_Map[291] := 407; {VSS       }
        Dut_Map[292] := 408; {VSS       }
        Dut_Map[293] := 409; {VDD       }
        Dut_Map[294] := 410; {VDDSHV    }
        Dut_Map[295] := 411; {VSS       }
        Dut_Map[296] := 412; {VSS       }
        Dut_Map[297] := 413; {VSS       }
        Dut_Map[298] := 414; {VDD       }
        Dut_Map[299] := 415; {VSS       }
        Dut_Map[300] := 416; {VSS       }
        Dut_Map[301] := 417; {VSS       }
        Dut_Map[302] := 418; {VDDSHV    }
        Dut_Map[303] := 419; {VSS       }
        Dut_Map[304] := 420; {VDD       }
        Dut_Map[305] := 421; {VSS       }
        Dut_Map[306] := 422; {VSS       }
        Dut_Map[340] := 423; {VSS       }
        Dut_Map[341] := 424; {VSS       }
        Dut_Map[342] := 425; {VSS       }
        Dut_Map[343] := 426; {VSS       }
        Dut_Map[344] := 427; {VDD       }
        Dut_Map[345] := 428; {VDD       }
        Dut_Map[346] := 429; {VDD       }
        Dut_Map[347] := 430; {VSS       }
        Dut_Map[348] := 431; {VSS       }
        Dut_Map[349] := 432; {VDD       }
        Dut_Map[350] := 433; {VDDSHV    }
        Dut_Map[351] := 434; {VSS       }
        Dut_Map[352] := 435; {VDDG      }
        Dut_Map[353] := 436; {VDD       }
        Dut_Map[354] := 437; {VDDG      }
        Dut_Map[355] := 438; {VDDG      }
        Dut_Map[356] := 439; {VDDSHV    }
        Dut_Map[357] := 440; {VDD       }
        Dut_Map[358] := 441; {VDD       }
        Dut_Map[359] := 442; {VDD       }
        Dut_Map[360] := 443; {VDD       }
        Dut_Map[361] := 444; {VDDSHV    }
        Dut_Map[362] := 445; {VSS       }
        Dut_Map[363] := 446; {VDD       }
        Dut_Map[364] := 447; {VSS       }
        Dut_Map[365] := 448; {VDD       }
        Dut_Map[366] := 449; {VSS       }
        Dut_Map[367] := 450; {VDDG      }
        Dut_Map[368] := 451; {VSS       }
        Dut_Map[401] := 452; {VDD       }
        Dut_Map[402] := 453; {VDDG      }
        Dut_Map[403] := 454; {VSS       }
        Dut_Map[404] := 455; {VSS       }
        Dut_Map[405] := 456; {VDD       }
        Dut_Map[406] := 457; {VDD       }
        Dut_Map[407] := 458; {VSS       }
        Dut_Map[408] := 459; {VSS       }
        Dut_Map[409] := 460; {VDD       }
        Dut_Map[410] := 461; {VSS       }
        Dut_Map[411] := 462; {VDDSHV    }
        Dut_Map[412] := 463; {VSS       }
        Dut_Map[413] := 464; {VSS       }
        Dut_Map[414] := 465; {VDDSHV    }
        Dut_Map[415] := 466; {VSS       }
        Dut_Map[416] := 467; {VSS       }
        Dut_Map[417] := 468; {VSS       }
        Dut_Map[418] := 469; {VDD       }
        Dut_Map[419] := 470; {VSS       }
        Dut_Map[420] := 471; {VDD2      }
        Dut_Map[421] := 472; {VSS       }
        Dut_Map[422] := 473; {VDDSHV    }
        Dut_Map[423] := 474; {VSS       }
        Dut_Map[424] := 475; {VDDSHV    }
        Dut_Map[425] := 476; {VSS       }
        Dut_Map[426] := 477; {VDD       }
        Dut_Map[427] := 478; {VDD2      }
        Dut_Map[428] := 479; {VDDSHV    }
        Dut_Map[429] := 480; {VSS       }
        Dut_Map[430] := 481; {VSS       }
        Dut_Map[431] := 482; {VSS       }
        Dut_Map[432] := 483; {VSS       }
        Dut_Map[465] := 484; {VDDSHV    }
        Dut_Map[466] := 485; {VDD       }
        Dut_Map[467] := 486; {VDD2      }
        Dut_Map[468] := 487; {VSS       }
        Dut_Map[469] := 488; {VSS       }
        Dut_Map[470] := 489; {VDD       }
        Dut_Map[471] := 490; {VSS       }
        Dut_Map[472] := 491; {VDDSHV    }
        Dut_Map[473] := 492; {VDD       }
        Dut_Map[474] := 493; {VDDSHV    }
        Dut_Map[475] := 494; {VDDSHV    }
        Dut_Map[476] := 495; {VSS       }
        Dut_Map[477] := 496; {VDD       }
        Dut_Map[478] := 497; {VSS       }
        Dut_Map[479] := 498; {VSS       }
        Dut_Map[480] := 499; {VDD       }
        Dut_Map[481] := 500; {VDDSHV    }
        Dut_Map[482] := 501; {VSS       }
        Dut_Map[483] := 502; {VSS       }
        Dut_Map[484] := 503; {VDDSHV    }
        Dut_Map[485] := 504; {VDDSHV    }
        Dut_Map[486] := 505; {VSS       }
        Dut_Map[487] := 506; {VSS       }
        Dut_Map[488] := 507; {VDD       }
        Dut_Map[489] := 508; {VDD       }
        Dut_Map[490] := 509; {VDD       }
        Dut_Map[491] := 510; {VDD       }
        Dut_Map[492] := 511; {VSS       }
        Dut_Map[493] := 512; {VSS       }
      END;
  END; {case of TIDeviceType}

  DutToChanMap(Dut_Map);


    PinTableOpen;
      PinSet( C6XX_OUTP ,   1, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C6XX_OUTN ,   2, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C167_15UTP,   3, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C167_155_O,   4, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C1G35_OUTP,   5, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C1G35_OUTN,   6, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( PAR_6XX_TP,   7, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( PAR_6XX_OU,   8, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( P2G7_OUTP ,   9, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( P2G7_OUTN ,  10, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D2G7_OUTP3,  11, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D2G7_OUTP2,  12, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D2G7_OUTP1,  13, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D2G7_OUTP0,  14, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D2G7_OUTN3,  15, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D2G7_OUTN2,  16, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D2G7_OUTN1,  17, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D2G7_OUTN0,  18, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( MODE2G7   ,  19, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DX6X_OUTP5,  20, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DX6X_OUTP4,  21, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DX6X_OUTP3,  22, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DX6X_OUTP2,  23, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DX6X_OUTP1,  24, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTP1,  25, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTP9,  26, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTP8,  27, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTP7,  28, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTP6,  29, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTP5,  30, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTP4,  31, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTP3,  32, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTP2,  33, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUT10,  34, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTP0,  35, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DX6X_OUTN5,  36, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DX6X_OUTN4,  37, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DX6X_OUTN3,  38, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DX6X_OUTN2,  39, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DX6X_OUTN1,  40, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTN1,  41, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTN9,  42, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTN8,  43, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTN7,  44, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTN6,  45, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTN5,  46, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTN4,  47, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTN3,  48, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTN2,  49, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUT11,  50, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D6XX_OUTN0,  51, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP15,  52, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP14,  53, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP13,  54, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP12,  55, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP11,  56, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP10,  57, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP9 ,  58, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP8 ,  59, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP7 ,  60, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP6 ,  61, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP5 ,  62, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP4 ,  63, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP3 ,  64, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP2 ,  65, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP1 ,  66, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INP0 ,  67, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN15,  68, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN14,  69, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN13,  70, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN12,  71, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN11,  72, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN10,  73, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN9 ,  74, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN8 ,  75, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN7 ,  76, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN6 ,  77, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN5 ,  78, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN4 ,  79, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN3 ,  80, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN2 ,  81, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN1 ,  82, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D622_INN0 ,  83, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C155_BPLNP,  84, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C155_BPL_I,  85, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C8K_BPLP  ,  86, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C8K_BPLN  ,  87, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C155_CSDNP,  88, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C155_CSD_I,  89, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C8K_CSDP  ,  90, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C8K_CSDN  ,  91, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C5_HCH_RX ,  92, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( P5_HCH_RX ,  93, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D5_HCH_RX_,  94, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D5_HCH_RX7,  95, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D5_HCH_RX6,  96, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D5_HCH_RX5,  97, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D5_HCH_RX4,  98, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D5_HCH_RX3,  99, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D5_HCH_RX2, 100, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D5_HCH_RX1, 101, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D5_HCH_RX0, 102, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( D10_BXI_RX, 103, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C6XX_EXTP , 104, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C6XX_EXTN , 105, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C666_EXTP , 106, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C666_EXTN , 107, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C80_EXTP  , 108, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C80_EXTN  , 109, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C83_EXTP  , 110, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C83_EXTN  , 111, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( ONDDSI    , 112, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( ONMFRI    , 113, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( ONCKI     , 114, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CICLK     , 115, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CICSN     , 116, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CIINF7    , 117, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CIINF6    , 118, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CIINF5    , 119, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CIINF4    , 120, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CIINF3    , 121, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CIINF2    , 122, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CIINF1    , 123, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CIINF0    , 124, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CIACKN    , 125, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CICSRN    , 126, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( CTLID_RSTN, 127, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DATA_V_INP, 128, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DATA_VALID, 129, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( ES_SPILLP , 130, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( ES_SPILLN , 131, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DATVAL_INP, 132, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( DATVAL_ES_, 133, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( RECENTER  , 134, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( MX_PAR_TOG, 135, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( AISINSMSOH, 136, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( RSTN      , 137, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( POISON    , 138, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( REIRDI    , 139, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( KAINP     , 140, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( KAINN     , 141, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( KBINP     , 142, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( KBINN     , 143, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO15    , 144, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO14    , 145, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO13    , 146, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO12    , 147, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO11    , 148, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO10    , 149, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO9     , 150, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO8     , 151, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO7     , 152, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO6     , 153, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO5     , 154, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO4     , 155, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO3     , 156, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO2     , 157, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO1     , 158, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( GPIO0     , 159, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( BYPASS_PLL, 160, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( IDDQN     , 161, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THZ_N     , 162, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_SET_BD2I, 163, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_DISARST , 164, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TOUT7     , 165, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TOUT6     , 166, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TOUT5     , 167, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TOUT4     , 168, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TOUT3     , 169, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TOUT2     , 170, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TOUT1     , 171, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TOUT0     , 172, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TPO       , 173, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TC166P    , 174, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TC166N    , 175, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK13   , 176, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK12   , 177, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK11   , 178, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK10   , 179, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK9    , 180, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK8    , 181, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK7    , 182, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK6    , 183, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK5    , 184, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK4    , 185, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK3    , 186, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK2    , 187, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK1    , 188, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T_CLK0    , 189, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TM_SCAN   , 190, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TE_SCAN   , 191, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TSCI7     , 192, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TSCI6     , 193, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TSCI5     , 194, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TSCI4     , 195, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TSCI3     , 196, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TSCI2     , 197, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TSCI1     , 198, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TSCI0     , 199, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TDO       , 200, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TDI       , 201, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TCK       , 202, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TMS       , 203, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TRSTN     , 204, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TBIST_RUN , 205, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TBIST_ROT , 206, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TM_RAM    , 207, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TBIST_FAIL, 208, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TBIST_DONE, 209, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TM_PLL    , 210, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TPLL_TEST1, 211, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TM_HSI    , 212, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_BYPS1, 213, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_BYPAS, 214, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_SEL01, 215, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_SEL00, 216, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_SEL11, 217, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_SEL10, 218, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_PWRDN, 219, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( RSTZ_HSI  , 220, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_INA  , 221, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_OPEN , 222, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ15, 223, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ14, 224, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ13, 225, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ12, 226, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ11, 227, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ10, 228, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ9 , 229, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ8 , 230, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ7 , 231, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ6 , 232, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ5 , 233, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ4 , 234, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ3 , 235, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ2 , 236, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ1 , 237, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TESTSELZ0 , 238, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_STAND, 239, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_CKGE1, 240, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_CKGEN, 241, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_SELN1, 242, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_SEL_E, 243, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_ACC_S, 244, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_RESYN, 245, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TC78_SEL  , 246, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_OUTA , 247, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_TCKOU, 248, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_TESTD, 249, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_OUTD1, 250, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_OUTD0, 251, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_P2S  , 252, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_D787 , 253, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_D786 , 254, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_D785 , 255, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_D784 , 256, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_D783 , 257, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_D782 , 258, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_D781 , 259, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_D780 , 260, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( BYPASS_HSI, 261, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TC622P    , 262, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TC622N    , 263, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( RSTZ_SHSI , 264, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( THSI_RP_BY, 265, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C1G35_INP , 266, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( C1G35_INN , 267, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T2G7_BYPAS, 268, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T2G7_TDO  , 269, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T2G7_PRMP0, 270, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T2G7_PRE_E, 271, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( TM_SHSI   , 272, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( T2G7_TDI  , 273, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( PRBSGSYNC4, 274, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( PRBSGSYNC3, 275, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( PRBSGSYNC2, 276, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( PRBSGSYNC1, 277, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( PRBSGSYNC0, 278, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( VBIASLVDA1, 281, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( VBIASLVDB1, 282, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( VIBASLVDSA, 283, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( VBIASLVDSI, 284, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( VDDTXBIAS , 285, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( VBIASLVDSA, 286, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( VBIASLVDSO, 287, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( M_T_CLK3  , 288, s_IOpin, -1V, 8V, -60mA, 60mA );
      PinSet( M_T_CLK5  , 289, s_IOpin, -1V, 8V, -60mA, 60mA );


      PinDedicate( s_PWR, 290, 291, 292, 293, 294, 295, 296, 297,
                  298, 299, 300, 301, 302, 303, 304, 305,
                  306, 307, 308, 309, 310, 311, 312, 313,
                  314, 315, 316, 317, 318, 319, 320, 321,
                  322, 323, 324, 325, 326, 327, 328, 329,
                  330, 331, 332, 333, 334, 335, 336, 337,
                  338, 339, 340, 341, 342, 343, 344, 345,
                  346, 347, 348, 349, 350, 351, 352, 353,
                  354, 355, 356, 357, 358, 359, 360, 361,
                  362, 363, 364, 365, 366, 367, 368, 369,
                  370, 371, 372, 373, 374, 375, 376, 377,
                  378, 379, 380, 381, 382, 383, 384, 385,
                  386, 387, 388, 389 );
      PinDedicate( s_PWR, 390, 391, 392, 393, 394, 395, 396, 397,
                  398, 399, 400, 401, 402, 403, 404, 405,
                  406, 407, 408, 409, 410, 411, 412, 413,
                  414, 415, 416, 417, 418, 419, 420, 421,
                  422, 423, 424, 425, 426, 427, 428, 429,
                  430, 431, 432, 433, 434, 435, 436, 437,
                  438, 439, 440, 441, 442, 443, 444, 445,
                  446, 447, 448, 449, 450, 451, 452, 453,
                  454, 455, 456, 457, 458, 459, 460, 461,
                  462, 463, 464, 465, 466, 467, 468, 469,
                  470, 471, 472, 473, 474, 475, 476, 477,
                  478, 479, 480, 481, 482, 483, 484, 485,
                  486, 487, 488, 489 );
      PinDedicate( s_PWR, 490, 491, 492, 493, 494, 495, 496, 497,
                  498, 499, 500, 501, 502, 503, 504, 505,
                  506, 507, 508, 509, 510, 511, 512 );

      PinListSet( LBC_TEST_PINS,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, MODE2G7, DX6X_OUTP5,
              DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1,
              D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5,
              D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0,
              DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1,
              D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6,
              D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11,
              D6XX_OUTN0, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C155_CSDNP, C155_CSD_I, C8K_CSDP,
              C8K_CSDN, C5_HCH_RX, P5_HCH_RX, D5_HCH_RX_, D5_HCH_RX7,
              D5_HCH_RX6, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2,
              D5_HCH_RX1 );

      PinListSet( LBC_TEST_PINS,
              D5_HCH_RX0, D10_BXI_RX, C6XX_EXTP, C6XX_EXTN, C666_EXTP,
              C666_EXTN, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN, ONDDSI,
              ONMFRI, ONCKI, CICLK, CICSN, CIINF7, CIINF6, CIINF5,
              CIINF4, CIINF3, CIINF2, CIINF1, CIINF0, CIACKN, CICSRN,
              CTLID_RSTN, DATA_V_INP, DATA_VALID, ES_SPILLP, ES_SPILLN,
              DATVAL_INP, DATVAL_ES_, RECENTER, MX_PAR_TOG, AISINSMSOH,
              RSTN, POISON, REIRDI, KAINP, KAINN, KBINP, KBINN, GPIO15,
              GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9, GPIO8,
              GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1, GPIO0,
              BYPASS_PLL, IDDQN, THZ_N, T_SET_BD2I, T_DISARST, TOUT7,
              TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO,
              TC166P, TC166N, T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9,
              T_CLK8, T_CLK7, T_CLK6, T_CLK5, T_CLK4, T_CLK3, T_CLK2,
              T_CLK1, T_CLK0, TM_SCAN, TE_SCAN, TSCI7, TSCI6, TSCI5,
              TSCI4, TSCI3, TSCI2, TSCI1, TSCI0, TDO, TDI );

      PinListSet( LBC_TEST_PINS,
              TCK, TMS, TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TBIST_FAIL,
              TBIST_DONE, TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1, THSI_BYPAS,
              THSI_SEL01, THSI_SEL00, THSI_SEL11, THSI_SEL10, THSI_PWRDN,
              RSTZ_HSI, THSI_INA, THSI_OPEN, TESTSELZ15, TESTSELZ14,
              TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10, TESTSELZ9,
              TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5, TESTSELZ4,
              TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0, THSI_STAND,
              THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E, THSI_ACC_S,
              THSI_RESYN, TC78_SEL, THSI_OUTA, THSI_TCKOU, THSI_TESTD,
              THSI_OUTD1, THSI_OUTD0, THSI_P2S, THSI_D787, THSI_D786,
              THSI_D785, THSI_D784, THSI_D783, THSI_D782, THSI_D781,
              THSI_D780, BYPASS_HSI, TC622P, TC622N, RSTZ_SHSI, THSI_RP_BY,
              C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_TDO, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI, PRBSGSYNC4, PRBSGSYNC3,
              PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ALL_IOR,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( ALL_MUX,
              M_T_CLK5, M_T_CLK3 );

      PinListSet( ALL_LVDS,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, D622_INP15, D622_INP14,
              D622_INP13, D622_INP12, D622_INP11, D622_INP10, D622_INP9,
              D622_INP8, D622_INP7, D622_INP6, D622_INP5, D622_INP4,
              D622_INP3, D622_INP2, D622_INP1, D622_INP0, D622_INN15,
              D622_INN14, D622_INN13, D622_INN12, D622_INN11, D622_INN10,
              D622_INN9, D622_INN8, D622_INN7, D622_INN6, D622_INN5,
              D622_INN4, D622_INN3, D622_INN2, D622_INN1, D622_INN0,
              C155_BPLNP, C155_BPL_I, C8K_BPLP, C8K_BPLN, C155_CSDNP,
              C155_CSD_I, C8K_CSDP, C8K_CSDN, C6XX_EXTP, C6XX_EXTN,
              C666_EXTP, C666_EXTN, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              DATA_V_INP, DATA_VALID, ES_SPILLP, ES_SPILLN, DATVAL_INP,
              DATVAL_ES_, KAINP, KAINN, KBINP, KBINN, TC166P, TC166N,
              TC622P, TC622N );

      PinListSet( LVDS_INS,
              D622_INP15, D622_INP14, D622_INP13, D622_INP12, D622_INP11,
              D622_INP10, D622_INP9, D622_INP8, D622_INP7, D622_INP6,
              D622_INP5, D622_INP4, D622_INP3, D622_INP2, D622_INP1,
              D622_INP0, D622_INN15, D622_INN14, D622_INN13, D622_INN12,
              D622_INN11, D622_INN10, D622_INN9, D622_INN8, D622_INN7,
              D622_INN6, D622_INN5, D622_INN4, D622_INN3, D622_INN2,
              D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I, C8K_BPLP,
              C8K_BPLN, C155_CSDNP, C155_CSD_I, C8K_CSDP, C8K_CSDN,
              C6XX_EXTP, C6XX_EXTN, C666_EXTP, C666_EXTN, DATA_V_INP,
              DATA_VALID, ES_SPILLP, ES_SPILLN, DATVAL_INP, DATVAL_ES_,
              KAINP, KAINN, KBINP, KBINN, TC166P, TC166N, TC622P, TC622N );

      PinListSet( LVDS_ALL_INA,
              D622_INP15, D622_INP14, D622_INP13, D622_INP12, D622_INP11,
              D622_INP10, D622_INP9, D622_INP8, D622_INP7, D622_INP6,
              D622_INP5, D622_INP4, D622_INP3, D622_INP2, D622_INP1,
              D622_INP0, C155_BPLNP, C8K_BPLP, C155_CSDNP, C8K_CSDP,
              C6XX_EXTP, C666_EXTP, DATA_V_INP, ES_SPILLP, DATVAL_INP,
              KAINP, KBINP, TC166P, TC622P );

      PinListSet( LVDS_ALL_INAZ,
              D622_INN15, D622_INN14, D622_INN13, D622_INN12, D622_INN11,
              D622_INN10, D622_INN9, D622_INN8, D622_INN7, D622_INN6,
              D622_INN5, D622_INN4, D622_INN3, D622_INN2, D622_INN1,
              D622_INN0, C155_BPL_I, C8K_BPLN, C155_CSD_I, C8K_CSDN,
              C6XX_EXTN, C666_EXTN, DATA_VALID, ES_SPILLN, DATVAL_ES_,
              KAINN, KBINN, TC166N, TC622N );

      PinListSet( LVDS_OUTS,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C80_EXTP, C80_EXTN,
              C83_EXTP, C83_EXTN );

      PinListSet( LVDS_ALL_OUTY,
              C6XX_OUTP, C167_15UTP, PAR_6XX_TP, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, C80_EXTP,
              C83_EXTP );

      PinListSet( LVDS_ALL_OUTYZ,
              C6XX_OUTN, C167_155_O, PAR_6XX_OU, DX6X_OUTN5, DX6X_OUTN4,
              DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9,
              D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4,
              D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C80_EXTN,
              C83_EXTN );

      PinListSet( LVDS_IN_ODD,
              D622_INP15, D622_INP13, D622_INP10, D622_INP9, D622_INP6,
              D622_INP5, D622_INP4, D622_INP3, D622_INP0, D622_INN15,
              D622_INN13, D622_INN10, D622_INN9, D622_INN6, D622_INN5,
              D622_INN4, D622_INN3, D622_INN0, C155_CSDNP, C155_CSD_I,
              C8K_CSDP, C8K_CSDN, C6XX_EXTP, C6XX_EXTN, DATA_V_INP,
              DATA_VALID, KAINP, KBINP, TC166P, TC622P );

      PinListSet( LVDS_IN_EVEN,
              D622_INP14, D622_INP12, D622_INP11, D622_INP8, D622_INP7,
              D622_INP2, D622_INP1, D622_INN14, D622_INN12, D622_INN11,
              D622_INN8, D622_INN7, D622_INN2, D622_INN1, C155_BPLNP,
              C155_BPL_I, C8K_BPLP, C8K_BPLN, C666_EXTP, C666_EXTN,
              ES_SPILLP, ES_SPILLN, DATVAL_INP, DATVAL_ES_, KAINN,
              KBINN, TC166N, TC622N );

      PinListSet( LVDS_INX21,
              D622_INP15, D622_INP14, D622_INP13, D622_INP12, D622_INP11,
              D622_INP10, D622_INP9, D622_INP8, D622_INP7, D622_INP6,
              D622_INP5, D622_INP4, D622_INP3, D622_INP2, D622_INP1,
              D622_INP0, C155_BPLNP, C8K_BPLP, C155_CSDNP, C8K_CSDP,
              C6XX_EXTP, C666_EXTP, DATA_V_INP, ES_SPILLP, DATVAL_INP,
              KAINP, KBINP, TC166P, TC622P );

      PinListSet( LVDS_INY21,
              D622_INN15, D622_INN14, D622_INN13, D622_INN12, D622_INN11,
              D622_INN10, D622_INN9, D622_INN8, D622_INN7, D622_INN6,
              D622_INN5, D622_INN4, D622_INN3, D622_INN2, D622_INN1,
              D622_INN0, C155_BPL_I, C8K_BPLN, C155_CSD_I, C8K_CSDN,
              C6XX_EXTN, C666_EXTN, DATA_VALID, ES_SPILLN, DATVAL_ES_,
              KAINN, KBINN, TC166N, TC622N );

      PinListSet( LVDSa1V_INX21,
              D622_INP15, D622_INP14, D622_INP13, D622_INP12, D622_INP11,
              D622_INP10, D622_INP9, D622_INP8, D622_INP7, D622_INP6,
              D622_INP5, D622_INP4, D622_INP3, D622_INP2, D622_INP1,
              D622_INP0, C155_BPLNP, C8K_BPLP, C155_CSDNP, C8K_CSDP,
              C6XX_EXTP, C666_EXTP, DATA_V_INP, ES_SPILLP, DATVAL_INP,
              KAINP, KBINP, TC166P, TC622P );

      PinListSet( LVDSa1V_INY21,
              D622_INN15, D622_INN14, D622_INN13, D622_INN12, D622_INN11,
              D622_INN10, D622_INN9, D622_INN8, D622_INN7, D622_INN6,
              D622_INN5, D622_INN4, D622_INN3, D622_INN2, D622_INN1,
              D622_INN0, C155_BPL_I, C8K_BPLN, C155_CSD_I, C8K_CSDN,
              C6XX_EXTN, C666_EXTN, DATA_VALID, ES_SPILLN, DATVAL_ES_,
              KAINN, KBINN, TC166N, TC622N );

      PinListSet( CML1V_INX21,
              C1G35_INP );

      PinListSet( CML1V_INY21,
              C1G35_INN );

      PinListSet( CONT_EVEN_VCC_DIODES,
              P5_HCH_RX, D5_HCH_RX_, D5_HCH_RX6, D5_HCH_RX2,
              D5_HCH_RX0, D10_BXI_RX, ONMFRI, CICLK,
              CIINF6, CIINF4, CIINF3, CIINF2, CIINF0, CIACKN, CICSRN,
              MX_PAR_TOG, AISINSMSOH, GPIO14, GPIO13, GPIO5, GPIO4,
              GPIO0, THZ_N, T_SET_BD2I, T_DISARST, TOUT6, TOUT4, TOUT3,
              TPO, T_CLK12, T_CLK11, T_CLK9, T_CLK7, T_CLK5, T_CLK2,
              T_CLK0, TE_SCAN, TSCI7, TSCI4, TSCI2, TSCI0, TDO, TDI,
              TCK, TRSTN, TBIST_RUN, TBIST_ROT, TBIST_DONE, TM_HSI,
              THSI_BYPS1, THSI_SEL01, THSI_SEL00, THSI_SEL10, RSTZ_HSI,
              THSI_INA, TESTSELZ15, TESTSELZ12, TESTSELZ10, TESTSELZ7,
              TESTSELZ5, TESTSELZ3, THSI_STAND, THSI_CKGE1, THSI_ACC_S,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, THSI_P2S, THSI_D786,
              THSI_D785, THSI_D782, THSI_D780 );

      PinListSet( CONT_EVEN_VCC_DIODES,
              THSI_RP_BY, T2G7_BYPAS, TM_SHSI, PRBSGSYNC4, PRBSGSYNC3,
              PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0);

      PinListSet( CONT_ODD_VCC_DIODES,
              C5_HCH_RX, D5_HCH_RX7, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3,
              D5_HCH_RX1, ONDDSI, ONCKI, CICSN,
              CIINF7, CIINF5, CIINF1, CTLID_RSTN, RECENTER, RSTN, POISON,
              REIRDI, GPIO15, GPIO12, GPIO11, GPIO10, GPIO9, GPIO8,
              GPIO7, GPIO6, GPIO3, GPIO2, GPIO1, BYPASS_PLL, IDDQN,
              TOUT7, TOUT5, TOUT2, TOUT1, TOUT0, T_CLK13, T_CLK10,
              T_CLK8, T_CLK6, T_CLK4, T_CLK3, T_CLK1, TM_SCAN, TSCI6,
              TSCI5, TSCI3, TSCI1, TMS, TM_RAM, TBIST_FAIL, TM_PLL,
              TPLL_TEST1, THSI_BYPAS, THSI_SEL11, THSI_PWRDN, THSI_OPEN,
              TESTSELZ14, TESTSELZ13, TESTSELZ11, TESTSELZ9, TESTSELZ8,
              TESTSELZ6, TESTSELZ4, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_CKGEN, THSI_SELN1, THSI_SEL_E, THSI_RESYN, TC78_SEL,
              THSI_OUTA, THSI_TCKOU );

      PinListSet( CONT_ODD_VCC_DIODES,
              THSI_D787, THSI_D784, THSI_D783, THSI_D781, BYPASS_HSI,
              RSTZ_SHSI, T2G7_TDO, T2G7_PRMP0,
              T2G7_PRE_E, T2G7_TDI);

      PinListSet( CONT_EVEN_GND_DIODES,
              P5_HCH_RX,
              D5_HCH_RX_, D5_HCH_RX6, D5_HCH_RX2, D5_HCH_RX0, D10_BXI_RX,
              ONMFRI, CICLK,
              CIINF6, CIINF4, CIINF3, CIINF2, CIINF0, CIACKN, CICSRN,
              MX_PAR_TOG,
              AISINSMSOH, GPIO14, GPIO13, GPIO5, GPIO4,
              GPIO0, THZ_N, T_SET_BD2I, T_DISARST, TOUT6, TOUT4, TOUT3,
              TPO, T_CLK12, T_CLK11, T_CLK9, T_CLK7, T_CLK5,
              T_CLK2, T_CLK0, TE_SCAN, TSCI7, TSCI4, TSCI2, TSCI0,
              TDO, TDI, TCK, TRSTN );

      PinListSet( CONT_EVEN_GND_DIODES,
              TBIST_RUN, TBIST_ROT, TBIST_DONE, TM_HSI, THSI_BYPS1,
              THSI_SEL01, THSI_SEL00, THSI_SEL10, RSTZ_HSI, THSI_INA,
              TESTSELZ15, TESTSELZ12, TESTSELZ10, TESTSELZ7, TESTSELZ5,
              TESTSELZ3, THSI_STAND, THSI_CKGE1, THSI_ACC_S, THSI_TESTD,
              THSI_OUTD1, THSI_OUTD0, THSI_P2S, THSI_D786, THSI_D785,
              THSI_D782, THSI_D780, THSI_RP_BY, T2G7_BYPAS,
              TM_SHSI, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1,
              PRBSGSYNC0);

      PinListSet( CONT_ODD_GND_DIODES,
              C5_HCH_RX, D5_HCH_RX7, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX1, ONDDSI, ONCKI, CICSN, CIINF7, CIINF5,
              CIINF1, CTLID_RSTN, RECENTER,
              RSTN, POISON, REIRDI, GPIO15, GPIO12, GPIO11,
              GPIO10, GPIO9, GPIO8, GPIO7, GPIO6, GPIO3, GPIO2, GPIO1,
              BYPASS_PLL, IDDQN, TOUT7, TOUT5, TOUT2, TOUT1, TOUT0,
              T_CLK13, T_CLK10, T_CLK8, T_CLK6, T_CLK4, T_CLK3,
              T_CLK1, TM_SCAN, TSCI6 );

      PinListSet( CONT_ODD_GND_DIODES,
              TSCI5, TSCI3, TSCI1, TMS, TM_RAM, TBIST_FAIL, TM_PLL,
              TPLL_TEST1, THSI_BYPAS, THSI_SEL11, THSI_PWRDN, THSI_OPEN,
              TESTSELZ14, TESTSELZ13, TESTSELZ11, TESTSELZ9, TESTSELZ8,
              TESTSELZ6, TESTSELZ4, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_CKGEN, THSI_SELN1, THSI_SEL_E, THSI_RESYN, TC78_SEL,
              THSI_OUTA, THSI_TCKOU, THSI_D787, THSI_D784, THSI_D783,
              THSI_D781, BYPASS_HSI, RSTZ_SHSI, T2G7_TDO, T2G7_PRMP0, T2G7_PRE_E, T2G7_TDI);

      PinListSet( SHORT_EVEN_VCC_DIODES,
              P5_HCH_RX, D5_HCH_RX_, D5_HCH_RX6, D5_HCH_RX2,
              D5_HCH_RX0, D10_BXI_RX, ONMFRI, CICLK,
              CIINF6, CIINF4, CIINF3, CIINF2, CIINF0, CIACKN, CICSRN,
              MX_PAR_TOG, AISINSMSOH, GPIO14, GPIO13, GPIO5, GPIO4,
              GPIO0, THZ_N, T_SET_BD2I, T_DISARST, TOUT6, TOUT4, TOUT3,
              TPO, T_CLK12, T_CLK11, T_CLK9, T_CLK7, T_CLK5, T_CLK2,
              T_CLK0, TE_SCAN, TSCI7, TSCI4, TSCI2, TSCI0, TDO, TDI,
              TCK, TRSTN, TBIST_RUN, TBIST_ROT, TBIST_DONE, TM_HSI,
              THSI_BYPS1, THSI_SEL01, THSI_SEL00, THSI_SEL10, RSTZ_HSI,
              THSI_INA, TESTSELZ15, TESTSELZ12, TESTSELZ10, TESTSELZ7,
              TESTSELZ5, TESTSELZ3, THSI_STAND, THSI_CKGE1, THSI_ACC_S,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, THSI_P2S, THSI_D786,
              THSI_D785, THSI_D782, THSI_D780 );

      PinListSet( SHORT_EVEN_VCC_DIODES,
              THSI_RP_BY, T2G7_BYPAS, TM_SHSI, PRBSGSYNC4, PRBSGSYNC3,
              PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0);

      PinListSet( SHORT_ODD_VCC_DIODES,
              C5_HCH_RX, D5_HCH_RX7, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3,
              D5_HCH_RX1, ONDDSI, ONCKI, CICSN,
              CIINF7, CIINF5, CIINF1, CTLID_RSTN, RECENTER, RSTN, POISON,
              REIRDI, GPIO15, GPIO12, GPIO11, GPIO10, GPIO9, GPIO8,
              GPIO7, GPIO6, GPIO3, GPIO2, GPIO1, BYPASS_PLL, IDDQN,
              TOUT7, TOUT5, TOUT2, TOUT1, TOUT0, T_CLK13, T_CLK10,
              T_CLK8, T_CLK6, T_CLK4, T_CLK3, T_CLK1, TM_SCAN, TSCI6,
              TSCI5, TSCI3, TSCI1, TMS, TM_RAM, TBIST_FAIL, TM_PLL,
              TPLL_TEST1, THSI_BYPAS, THSI_SEL11, THSI_PWRDN, THSI_OPEN,
              TESTSELZ14, TESTSELZ13, TESTSELZ11, TESTSELZ9, TESTSELZ8,
              TESTSELZ6, TESTSELZ4, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_CKGEN, THSI_SELN1, THSI_SEL_E, THSI_RESYN, TC78_SEL,
              THSI_OUTA, THSI_TCKOU );

      PinListSet( SHORT_ODD_VCC_DIODES,
              THSI_D787, THSI_D784, THSI_D783, THSI_D781, BYPASS_HSI,
              RSTZ_SHSI, T2G7_TDO, T2G7_PRMP0,
              T2G7_PRE_E, T2G7_TDI, VBIASLVDB1, VBIASLVDSI, VDDTXBIAS,
              VBIASLVDSA );

      PinListSet( SHORT_EVEN_GND_DIODES,
              P5_HCH_RX,
              D5_HCH_RX_, D5_HCH_RX6, D5_HCH_RX2, D5_HCH_RX0, D10_BXI_RX,
              ONMFRI, CICLK,
              CIINF6, CIINF4, CIINF3, CIINF2, CIINF0, CIACKN, CICSRN,
              MX_PAR_TOG,
              AISINSMSOH, GPIO14, GPIO13, GPIO5, GPIO4,
              GPIO0, THZ_N, T_SET_BD2I, T_DISARST, TOUT6, TOUT4, TOUT3,
              TPO, T_CLK12, T_CLK11, T_CLK9, T_CLK7, T_CLK5,
              T_CLK2, T_CLK0, TE_SCAN, TSCI7, TSCI4, TSCI2, TSCI0,
              TDO, TDI, TCK, TRSTN );

      PinListSet( SHORT_EVEN_GND_DIODES,
              TBIST_RUN, TBIST_ROT, TBIST_DONE, TM_HSI, THSI_BYPS1,
              THSI_SEL01, THSI_SEL00, THSI_SEL10, RSTZ_HSI, THSI_INA,
              TESTSELZ15, TESTSELZ12, TESTSELZ10, TESTSELZ7, TESTSELZ5,
              TESTSELZ3, THSI_STAND, THSI_CKGE1, THSI_ACC_S, THSI_TESTD,
              THSI_OUTD1, THSI_OUTD0, THSI_P2S, THSI_D786, THSI_D785,
              THSI_D782, THSI_D780, THSI_RP_BY, T2G7_BYPAS,
              TM_SHSI, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1,
              PRBSGSYNC0, VBIASLVDA1, VIBASLVDSA, VBIASLVDSO );

      PinListSet( SHORT_ODD_GND_DIODES,
              C5_HCH_RX, D5_HCH_RX7, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX1, ONDDSI, ONCKI, CICSN, CIINF7, CIINF5,
              CIINF1, CTLID_RSTN, RECENTER,
              RSTN, POISON, REIRDI, KAINP, KBINP, GPIO15, GPIO12, GPIO11,
              GPIO10, GPIO9, GPIO8, GPIO7, GPIO6, GPIO3, GPIO2, GPIO1,
              BYPASS_PLL, IDDQN, TOUT7, TOUT5, TOUT2, TOUT1, TOUT0,
              T_CLK13, T_CLK10, T_CLK8, T_CLK6, T_CLK4, T_CLK3,
              T_CLK1, TM_SCAN, TSCI6 );

      PinListSet( SHORT_ODD_GND_DIODES,
              TSCI5, TSCI3, TSCI1, TMS, TM_RAM, TBIST_FAIL, TM_PLL,
              TPLL_TEST1, THSI_BYPAS, THSI_SEL11, THSI_PWRDN, THSI_OPEN,
              TESTSELZ14, TESTSELZ13, TESTSELZ11, TESTSELZ9, TESTSELZ8,
              TESTSELZ6, TESTSELZ4, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_CKGEN, THSI_SELN1, THSI_SEL_E, THSI_RESYN, TC78_SEL,
              THSI_OUTA, THSI_TCKOU, THSI_D787, THSI_D784, THSI_D783,
              THSI_D781, BYPASS_HSI, TC622P, RSTZ_SHSI, T2G7_TDO, T2G7_PRMP0, T2G7_PRE_E, T2G7_TDI,
              VBIASLVDB1, VBIASLVDSI, VDDTXBIAS, VBIASLVDSA );

      PinListSet( ALL_LVDSa,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, D622_INP15, D622_INP14,
              D622_INP13, D622_INP12, D622_INP11, D622_INP10, D622_INP9,
              D622_INP8, D622_INP7, D622_INP6, D622_INP5, D622_INP4,
              D622_INP3, D622_INP2, D622_INP1, D622_INP0, D622_INN15,
              D622_INN14, D622_INN13, D622_INN12, D622_INN11, D622_INN10,
              D622_INN9, D622_INN8, D622_INN7, D622_INN6, D622_INN5,
              D622_INN4, D622_INN3, D622_INN2, D622_INN1, D622_INN0,
              C155_BPLNP, C155_BPL_I, C8K_BPLP, C8K_BPLN, C155_CSDNP,
              C155_CSD_I, C8K_CSDP, C8K_CSDN, C6XX_EXTP, C6XX_EXTN,
              C666_EXTP, C666_EXTN, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              DATA_V_INP, DATA_VALID, ES_SPILLP, ES_SPILLN, DATVAL_INP,
              DATVAL_ES_, KAINP, KAINN, KBINP, KBINN, TC166P, TC166N,
              TC622P, TC622N );

      PinListSet( LVDSa1V_INSA,
              D622_INP15, D622_INP14, D622_INP13, D622_INP12, D622_INP11,
              D622_INP10, D622_INP9, D622_INP8, D622_INP7, D622_INP6,
              D622_INP5, D622_INP4, D622_INP3, D622_INP2, D622_INP1,
              D622_INP0, C155_BPLNP, C8K_BPLP, C155_CSDNP, C8K_CSDP,
              C6XX_EXTP, C666_EXTP, DATA_V_INP, ES_SPILLP, DATVAL_INP,
              KAINP, KBINP, TC166P, TC622P );

      PinListSet( LVDSa1V_INSAZ,
              D622_INN15, D622_INN14, D622_INN13, D622_INN12, D622_INN11,
              D622_INN10, D622_INN9, D622_INN8, D622_INN7, D622_INN6,
              D622_INN5, D622_INN4, D622_INN3, D622_INN2, D622_INN1,
              D622_INN0, C155_BPL_I, C8K_BPLN, C155_CSD_I, C8K_CSDN,
              C6XX_EXTN, C666_EXTN, DATA_VALID, ES_SPILLN, DATVAL_ES_,
              KAINN, KBINN, TC166N, TC622N );

      PinListSet( LVDSa1V_OUTSY,
              C6XX_OUTP, C167_15UTP, PAR_6XX_TP, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, C80_EXTP,
              C83_EXTP );

      PinListSet( LVDSa1V_OUTSYZ,
              C6XX_OUTN, C167_155_O, PAR_6XX_OU, DX6X_OUTN5, DX6X_OUTN4,
              DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9,
              D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4,
              D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C80_EXTN,
              C83_EXTN );

      PinListSet( ALL_LVDSb,
              VBIASLVDA1, VBIASLVDB1, VIBASLVDSA, VBIASLVDSI, VDDTXBIAS,
              VBIASLVDSA, VBIASLVDSO );

      PinListSet( LVDSb1V_REFS,
              VBIASLVDA1, VBIASLVDB1, VIBASLVDSA, VBIASLVDSI, VDDTXBIAS,
              VBIASLVDSA, VBIASLVDSO );

      PinListSet( ALL_CML,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C1G35_INP, C1G35_INN );

      PinListSet( CML1V_OUTS,
              C1G35_OUTN, P2G7_OUTN, D2G7_OUTN3 );

      PinListSet( CML1V_INSA,
              C1G35_INP );

      PinListSet( CML1V_INSAZ,
              C1G35_INN );

      PinListSet( CML1V_OUTSY,
              C1G35_OUTP, P2G7_OUTP, D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1,
              D2G7_OUTP0 );

      PinListSet( CML1V_OUTSYZ,
              C1G35_OUTN, P2G7_OUTN, D2G7_OUTN3, D2G7_OUTN2, D2G7_OUTN1,
              D2G7_OUTN0 );

      PinListSet( ALL_CMOSa,
              MODE2G7, C5_HCH_RX, P5_HCH_RX, D5_HCH_RX_, D5_HCH_RX7,
              D5_HCH_RX6, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2,
              D5_HCH_RX1, D5_HCH_RX0, D10_BXI_RX, ONDDSI, ONMFRI, ONCKI,
              CICLK, CICSN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3,
              CIINF2, CIINF1, CIINF0, CIACKN, CICSRN, CTLID_RSTN, RECENTER,
              MX_PAR_TOG, AISINSMSOH, RSTN, POISON, REIRDI, GPIO15,
              GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9, GPIO8,
              GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1, GPIO0,
              BYPASS_PLL, IDDQN, THZ_N, T_SET_BD2I, T_DISARST, TOUT7,
              TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO,
              T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7,
              T_CLK6, T_CLK5, T_CLK4, T_CLK3, T_CLK2, T_CLK1, T_CLK0,
              TM_SCAN, TE_SCAN, TSCI7, TSCI6, TSCI5, TSCI4, TSCI3,
              TSCI2, TSCI1, TSCI0, TDO, TDI, TCK, TMS, TRSTN, TBIST_RUN,
              TBIST_ROT, TM_RAM, TBIST_FAIL, TBIST_DONE, TM_PLL );

      PinListSet( ALL_CMOSa,
              TPLL_TEST1, TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01,
              THSI_SEL00, THSI_SEL11, THSI_SEL10, THSI_PWRDN, RSTZ_HSI,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6, TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2,
              TESTSELZ1, TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN,
              THSI_SELN1, THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL,
              THSI_TCKOU, THSI_TESTD, THSI_OUTD1, THSI_OUTD0, THSI_P2S,
              THSI_D787, THSI_D786, THSI_D785, THSI_D784, THSI_D783,
              THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI, RSTZ_SHSI,
              THSI_RP_BY, T2G7_BYPAS, T2G7_TDO, T2G7_PRMP0, T2G7_PRE_E,
              TM_SHSI, T2G7_TDI, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( CMOSa3V_INS,
              MODE2G7, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, ONDDSI, ONMFRI, ONCKI, CICLK, CICSN, CTLID_RSTN,
              AISINSMSOH, RSTN, POISON, REIRDI, BYPASS_PLL, IDDQN,
              THZ_N, T_SET_BD2I, T_DISARST, T_CLK13, T_CLK12, T_CLK11,
              T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5, T_CLK4,
              T_CLK3, T_CLK2, T_CLK1, T_CLK0, TM_SCAN, TE_SCAN, TSCI7,
              TSCI6, TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0, TDI,
              TCK, TMS, TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL,
              TPLL_TEST1, TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01,
              THSI_SEL00, THSI_SEL11, THSI_SEL10, THSI_PWRDN, RSTZ_HSI,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6, TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2,
              TESTSELZ1, TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN,
              THSI_SELN1, THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL,
              THSI_P2S, THSI_D787, THSI_D786, THSI_D785, THSI_D784,
              THSI_D783, THSI_D782, M_T_CLK3,M_T_CLK5 );

      PinListSet( CMOSa3V_INS,
              THSI_D781, THSI_D780, BYPASS_HSI, RSTZ_SHSI, THSI_RP_BY,
              T2G7_BYPAS, T2G7_PRMP0, T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( CMOSa3V_OUTS,
              C5_HCH_RX, P5_HCH_RX, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1, TOUT0,
              TPO, TDO, TBIST_FAIL, TBIST_DONE, THSI_TCKOU, THSI_TESTD,
              THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3,
              PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( CMOSa3V_IOS,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( ALL_TESTINA,
              THSI_INA );

      PinListSet( TESTINA1V_INS,
              THSI_INA );

      PinListSet( ALL_AOUT,
              THSI_OUTA );

      PinListSet( AOUT1V_OUTS,
              THSI_OUTA );

      PinListSet( MUX_PINS18,
              T_CLK3 );

      PinListSet( MUX_PINS19,
              T_CLK5 );


      PinListSet( LVDS_IREFS_OUT,
                 VBIASLVDSA);

      PinListSet( LVDS_IREFS_IN,
                 VIBASLVDSA,VBIASLVDA1);

      PinListSet( LVDS_VREFS_OUT,
                 VBIASLVDSO);

      PinListSet( LVDS_VREFS_IN,
                  VBIASLVDB1,VBIASLVDSI);


      PinListSet( CMOS3V4MA,
              TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1, TOUT0,
              TPO, TBIST_FAIL, TBIST_DONE, THSI_TCKOU, THSI_TESTD,
              THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3,
              PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( CMOS3V8MA,
              C5_HCH_RX, P5_HCH_RX, RECENTER, MX_PAR_TOG );

      PinListSet( CMOS3V12MA24,
              CIACKN, CICSRN, TDO );

      PinListSet( IN0_TS1,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C8K_BPLP, C8K_BPLN,
              C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6,
              D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1,
              D5_HCH_RX0, D10_BXI_RX, ONDDSI, ONMFRI, CICSN, AISINSMSOH,
              POISON, REIRDI, KAINP, KAINN, KBINP, KBINN, BYPASS_PLL,
              IDDQN, THZ_N, T_SET_BD2I, T_DISARST, TM_SCAN, TE_SCAN,
              TSCI7, TSCI6, TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0,
              TDI, TCK, TMS, TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL,
              TPLL_TEST1, TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01,
              THSI_SEL00, THSI_SEL11, THSI_SEL10, THSI_PWRDN, THSI_INA,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6 );

      PinListSet( IN0_TS1,
              TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1,
              TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1,
              THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S,
              THSI_D787, THSI_D786, THSI_D785, THSI_D784, THSI_D783,
              THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS1,
              C155_BPLNP, C155_CSDNP, C6XX_EXTP, C666_EXTP, ONCKI,
              DATA_V_INP, ES_SPILLP, DATVAL_INP, TC166P, T_CLK13, T_CLK12,
              T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5,
              T_CLK4, T_CLK2, T_CLK1, T_CLK0, TC622P );

      PinListSet( IN2_TS1,
              C155_BPL_I, C155_CSD_I, C6XX_EXTN, C666_EXTN, CTLID_RSTN,
              DATA_VALID, ES_SPILLN, DATVAL_ES_, RSTN, TC166N, RSTZ_HSI,
              TC622N );

      PinListSet( IN3_TS1,
              CICLK );

      PinListSet( IN4_TS1,
              T_CLK3 );

      PinListSet( IO1_TS1,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS1,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS2,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C155_CSDNP, C155_CSD_I, C8K_CSDP,
              C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, C6XX_EXTP, C6XX_EXTN, C666_EXTP, C666_EXTN,
              ONDDSI, ONMFRI, ONCKI, CICLK, CICSN, CTLID_RSTN, DATA_V_INP,
              DATA_VALID, ES_SPILLP, ES_SPILLN, DATVAL_INP, DATVAL_ES_,
              AISINSMSOH, RSTN, POISON, REIRDI, KAINP, KAINN, KBINP,
              KBINN, BYPASS_PLL, IDDQN, THZ_N, T_SET_BD2I, T_DISARST,
              TC166P, TC166N, T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9,
              T_CLK8, T_CLK7, T_CLK6, T_CLK5, T_CLK4, T_CLK3, T_CLK2,
              T_CLK1, T_CLK0, TM_SCAN, TE_SCAN, TSCI7, TSCI6 );

      PinListSet( IN0_TS2,
              TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0, TDI, TCK, TMS,
              TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1,
              TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01, THSI_SEL00,
              THSI_SEL11, THSI_SEL10, THSI_PWRDN, RSTZ_HSI, THSI_INA,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6, TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2,
              TESTSELZ1, TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN,
              THSI_SELN1, THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL,
              THSI_P2S, THSI_D787, THSI_D786, THSI_D785, THSI_D784,
              THSI_D783, THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI,
              TC622P, TC622N, RSTZ_SHSI, THSI_RP_BY, C1G35_INP, C1G35_INN,
              T2G7_BYPAS, T2G7_PRMP0, T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IO1_TS2,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS2,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS3,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7,
              D5_HCH_RX6, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2,
              D5_HCH_RX1, D5_HCH_RX0, D10_BXI_RX, C6XX_EXTP, C6XX_EXTN,
              C666_EXTP, C666_EXTN, ONDDSI, ONMFRI, ONCKI, CICLK, CICSN,
              CTLID_RSTN, DATA_V_INP, DATA_VALID, ES_SPILLP, ES_SPILLN,
              DATVAL_INP, DATVAL_ES_, AISINSMSOH, RSTN, POISON, REIRDI,
              KAINP, KAINN, KBINP, KBINN, BYPASS_PLL, IDDQN, THZ_N,
              T_SET_BD2I, T_DISARST, TC166P, TC166N, T_CLK13, T_CLK12,
              T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5,
              T_CLK4, T_CLK3, T_CLK2, T_CLK1, T_CLK0, TM_SCAN, TE_SCAN,
              TSCI7, TSCI6, TSCI5, TSCI4 );

      PinListSet( IN0_TS3,
              TSCI3, TSCI2, TSCI1, TSCI0, TDI, TCK, TMS, TRSTN, TBIST_RUN,
              TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1,
              THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11, THSI_SEL10,
              THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN, TESTSELZ15,
              TESTSELZ14, TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10,
              TESTSELZ9, TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5,
              TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E,
              THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S, THSI_D787,
              THSI_D786, THSI_D785, THSI_D784, THSI_D783, THSI_D782,
              THSI_D781, THSI_D780, BYPASS_HSI, TC622P, TC622N, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS3,
              C155_CSDNP );

      PinListSet( IN2_TS3,
              C155_CSD_I );

      PinListSet( IO1_TS3,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS3,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS4,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7,
              D5_HCH_RX6, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2,
              D5_HCH_RX1, D5_HCH_RX0, D10_BXI_RX, C6XX_EXTP, C6XX_EXTN,
              C666_EXTP, C666_EXTN, ONDDSI, ONMFRI, ONCKI, CICLK, CICSN,
              CTLID_RSTN, DATA_V_INP, DATA_VALID, ES_SPILLP, ES_SPILLN,
              DATVAL_INP, DATVAL_ES_, AISINSMSOH, RSTN, POISON, REIRDI,
              KAINP, KAINN, KBINP, KBINN, BYPASS_PLL, IDDQN, THZ_N,
              T_SET_BD2I, T_DISARST, TC166P, TC166N, T_CLK13, T_CLK12,
              T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5,
              T_CLK4, T_CLK3, T_CLK2, T_CLK1, TM_SCAN, TE_SCAN, TSCI7,
              TSCI6, TSCI5, TSCI4, TSCI3 );

      PinListSet( IN0_TS4,
              TSCI2, TSCI1, TSCI0, TDI, TCK, TMS, TRSTN, TBIST_RUN,
              TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1,
              THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11, THSI_SEL10,
              THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN, TESTSELZ15,
              TESTSELZ14, TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10,
              TESTSELZ9, TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5,
              TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E,
              THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S, THSI_D787,
              THSI_D786, THSI_D785, THSI_D784, THSI_D783, THSI_D782,
              THSI_D781, THSI_D780, BYPASS_HSI, TC622P, TC622N, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS4,
              C155_CSDNP, T_CLK0 );

      PinListSet( IN2_TS4,
              C155_CSD_I );

      PinListSet( IO1_TS4,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS4,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS5,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7,
              D5_HCH_RX6, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2,
              D5_HCH_RX1, D5_HCH_RX0, D10_BXI_RX, C6XX_EXTP, C6XX_EXTN,
              C666_EXTP, C666_EXTN, ONDDSI, ONMFRI, ONCKI, CICLK, CICSN,
              CTLID_RSTN, DATA_V_INP, DATA_VALID, ES_SPILLP, ES_SPILLN,
              DATVAL_INP, DATVAL_ES_, AISINSMSOH, RSTN, POISON, REIRDI,
              KAINP, KAINN, KBINP, KBINN, BYPASS_PLL, IDDQN, THZ_N,
              T_SET_BD2I, T_DISARST, TC166P, TC166N, T_CLK13, T_CLK12,
              T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5,
              T_CLK4, T_CLK3, T_CLK2, T_CLK1, T_CLK0, TM_SCAN, TE_SCAN,
              TSCI7, TSCI6, TSCI5, TSCI4 );

      PinListSet( IN0_TS5,
              TSCI3, TSCI2, TSCI1, TSCI0, TDI, TCK, TMS, TRSTN, TBIST_RUN,
              TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1,
              THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11, THSI_SEL10,
              THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN, TESTSELZ15,
              TESTSELZ14, TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10,
              TESTSELZ9, TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5,
              TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E,
              THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S, THSI_D787,
              THSI_D786, THSI_D785, THSI_D784, THSI_D783, THSI_D782,
              THSI_D781, THSI_D780, BYPASS_HSI, TC622P, TC622N, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS5,
              C155_CSDNP );

      PinListSet( IN2_TS5,
              C155_CSD_I );

      PinListSet( IO1_TS5,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS5,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS6,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C155_CSDNP, C155_CSD_I, C8K_CSDP,
              C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, C6XX_EXTP, C6XX_EXTN, C666_EXTP, C666_EXTN,
              ONDDSI, ONMFRI, ONCKI, CICLK, CICSN, CTLID_RSTN, DATA_V_INP,
              DATA_VALID, ES_SPILLP, ES_SPILLN, DATVAL_INP, DATVAL_ES_,
              AISINSMSOH, RSTN, POISON, REIRDI, KAINP, KAINN, KBINP,
              KBINN, BYPASS_PLL, IDDQN, THZ_N, T_SET_BD2I, T_DISARST,
              TC166P, TC166N, T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9,
              T_CLK8, T_CLK7, T_CLK6, T_CLK5, T_CLK4, T_CLK3, T_CLK2,
              T_CLK1, T_CLK0, TM_SCAN, TE_SCAN, TSCI7, TSCI6 );

      PinListSet( IN0_TS6,
              TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0, TDI, TCK, TMS,
              TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1,
              TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01, THSI_SEL00,
              THSI_SEL11, THSI_SEL10, THSI_PWRDN, RSTZ_HSI, THSI_INA,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6, TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2,
              TESTSELZ1, TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN,
              THSI_SELN1, THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL,
              THSI_P2S, THSI_D787, THSI_D786, THSI_D785, THSI_D784,
              THSI_D783, THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI,
              RSTZ_SHSI, THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS,
              T2G7_PRMP0, T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS6,
              TC622P );

      PinListSet( IN2_TS6,
              TC622N );

      PinListSet( IO1_TS6,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS6,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS7,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C155_CSDNP, C155_CSD_I, C8K_CSDP,
              C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, C6XX_EXTP, C6XX_EXTN, C666_EXTP, C666_EXTN,
              ONDDSI, ONMFRI, ONCKI, CICLK, CICSN, CTLID_RSTN, DATA_V_INP,
              DATA_VALID, ES_SPILLP, ES_SPILLN, DATVAL_INP, DATVAL_ES_,
              AISINSMSOH, RSTN, POISON, REIRDI, KAINP, KAINN, KBINP,
              KBINN, BYPASS_PLL, IDDQN, THZ_N, T_SET_BD2I, T_DISARST,
              TC166P, TC166N, T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9,
              T_CLK8, T_CLK7, T_CLK6, T_CLK5, T_CLK4, T_CLK3, T_CLK2,
              T_CLK1, T_CLK0, TM_SCAN, TE_SCAN, TSCI7, TSCI6 );

      PinListSet( IN0_TS7,
              TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0, TDI, TCK, TMS,
              TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1,
              TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01, THSI_SEL00,
              THSI_SEL11, THSI_SEL10, THSI_PWRDN, RSTZ_HSI, THSI_INA,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6, TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2,
              TESTSELZ1, TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN,
              THSI_SELN1, THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL,
              THSI_P2S, THSI_D787, THSI_D786, THSI_D785, THSI_D784,
              THSI_D783, THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI,
              TC622P, TC622N, RSTZ_SHSI, THSI_RP_BY, C1G35_INP, C1G35_INN,
              T2G7_BYPAS, T2G7_PRMP0, T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IO1_TS7,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS7,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS8,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C155_CSDNP, C155_CSD_I, C8K_CSDP,
              C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, C6XX_EXTP, C6XX_EXTN, C666_EXTP, C666_EXTN,
              ONDDSI, ONMFRI, ONCKI, CICLK, CICSN, CTLID_RSTN, DATA_V_INP,
              DATA_VALID, ES_SPILLP, ES_SPILLN, DATVAL_INP, DATVAL_ES_,
              AISINSMSOH, RSTN, POISON, REIRDI, KAINP, KAINN, KBINP,
              KBINN, BYPASS_PLL, IDDQN, THZ_N, T_SET_BD2I, T_DISARST,
              TC166P, TC166N, T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9,
              T_CLK8, T_CLK7, T_CLK6, T_CLK5, T_CLK4, T_CLK3, T_CLK2,
              T_CLK1, T_CLK0, TM_SCAN, TE_SCAN, TSCI7, TSCI6 );

      PinListSet( IN0_TS8,
              TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0, TDI, TMS, TRSTN,
              TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI,
              THSI_BYPS1, THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11,
              THSI_SEL10, THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN,
              TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12, TESTSELZ11,
              TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7, TESTSELZ6,
              TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1,
              TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1,
              THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S,
              THSI_D787, THSI_D786, THSI_D785, THSI_D784, THSI_D783,
              THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI, TC622P,
              TC622N, RSTZ_SHSI, THSI_RP_BY, C1G35_INP, C1G35_INN,
              T2G7_BYPAS, T2G7_PRMP0, T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS8,
              TCK );

      PinListSet( IO1_TS8,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS8,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS9,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C8K_BPLP, C8K_BPLN,
              C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6,
              D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1,
              D5_HCH_RX0, D10_BXI_RX, ONDDSI, ONMFRI, CICSN, AISINSMSOH,
              POISON, REIRDI, KAINP, KAINN, KBINP, KBINN, BYPASS_PLL,
              IDDQN, THZ_N, T_SET_BD2I, T_DISARST, TM_SCAN, TE_SCAN,
              TSCI7, TSCI6, TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0,
              TDI, TCK, TMS, TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL,
              TPLL_TEST1, TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01,
              THSI_SEL00, THSI_SEL11, THSI_SEL10, THSI_PWRDN, THSI_INA,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6 );

      PinListSet( IN0_TS9,
              TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1,
              TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1,
              THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S,
              THSI_D787, THSI_D786, THSI_D785, THSI_D784, THSI_D783,
              THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS9,
              C155_BPLNP, C155_CSDNP, C6XX_EXTP, C666_EXTP, ONCKI,
              DATA_V_INP, ES_SPILLP, DATVAL_INP, TC166P, T_CLK13, T_CLK12,
              T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5,
              T_CLK4, T_CLK2, T_CLK1, T_CLK0, TC622P );

      PinListSet( IN2_TS9,
              C155_BPL_I, C155_CSD_I, C6XX_EXTN, C666_EXTN, CICLK,
              CTLID_RSTN, DATA_VALID, ES_SPILLN, DATVAL_ES_, RSTN,
              TC166N, T_CLK3, RSTZ_HSI, TC622N );

      PinListSet( IO1_TS9,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS9,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS10,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C8K_BPLP, C8K_BPLN,
              C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6,
              D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1,
              D5_HCH_RX0, D10_BXI_RX, ONDDSI, ONMFRI, CICSN, AISINSMSOH,
              POISON, REIRDI, KAINP, KAINN, KBINP, KBINN, BYPASS_PLL,
              IDDQN, THZ_N, T_SET_BD2I, T_DISARST, TM_SCAN, TE_SCAN,
              TSCI7, TSCI6, TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0,
              TDI, TCK, TMS, TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL,
              TPLL_TEST1, TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01,
              THSI_SEL00, THSI_SEL11, THSI_SEL10, THSI_PWRDN, RSTZ_HSI,
              THSI_INA, THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13,
              TESTSELZ12, TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8,
              TESTSELZ7 );

      PinListSet( IN0_TS10,
              TESTSELZ6, TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2,
              TESTSELZ1, TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN,
              THSI_SELN1, THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL,
              THSI_P2S, THSI_D787, THSI_D786, THSI_D785, THSI_D784,
              THSI_D783, THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI,
              RSTZ_SHSI, THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS,
              T2G7_PRMP0, T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS10,
              C155_BPLNP, C155_CSDNP, C6XX_EXTP, C666_EXTP, ONCKI,
              DATA_V_INP, ES_SPILLP, DATVAL_INP, TC166P, T_CLK13, T_CLK12,
              T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5,
              T_CLK4, T_CLK2, T_CLK1, T_CLK0, TC622P );

      PinListSet( IN2_TS10,
              C155_BPL_I, C155_CSD_I, C6XX_EXTN, C666_EXTN, CTLID_RSTN,
              DATA_VALID, ES_SPILLN, DATVAL_ES_, RSTN, TC166N, TC622N );

      PinListSet( IN3_TS10,
              CICLK );

      PinListSet( IN4_TS10,
              T_CLK3 );

      PinListSet( IO1_TS10,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS10,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS11,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7,
              D5_HCH_RX6, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2,
              D5_HCH_RX1, D5_HCH_RX0, D10_BXI_RX, C6XX_EXTP, C6XX_EXTN,
              C666_EXTP, C666_EXTN, ONDDSI, ONMFRI, ONCKI, CICLK, CICSN,
              CTLID_RSTN, DATA_V_INP, DATA_VALID, ES_SPILLP, ES_SPILLN,
              DATVAL_INP, DATVAL_ES_, AISINSMSOH, RSTN, POISON, REIRDI,
              KAINP, KAINN, KBINP, KBINN, BYPASS_PLL, IDDQN, THZ_N,
              T_SET_BD2I, T_DISARST, TC166P, TC166N, T_CLK13, T_CLK12,
              T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5,
              T_CLK4, T_CLK3, T_CLK1, T_CLK0, TM_SCAN, TE_SCAN, TSCI7,
              TSCI6, TSCI5, TSCI4, TSCI3 );

      PinListSet( IN0_TS11,
              TSCI2, TSCI1, TSCI0, TDI, TCK, TMS, TRSTN, TBIST_RUN,
              TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1,
              THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11, THSI_SEL10,
              THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN, TESTSELZ15,
              TESTSELZ14, TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10,
              TESTSELZ9, TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5,
              TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E,
              THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S, THSI_D787,
              THSI_D786, THSI_D785, THSI_D784, THSI_D783, THSI_D782,
              THSI_D781, THSI_D780, BYPASS_HSI, TC622P, TC622N, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS11,
              C155_CSDNP, T_CLK2 );

      PinListSet( IN2_TS11,
              C155_CSD_I );

      PinListSet( IO1_TS11,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS11,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, T2G7_TDO,
              PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( OUT2_TS11,
              THSI_OUTD1, THSI_OUTD0 );

      PinListSet( IN0_TS12,
              MODE2G7, C155_BPLNP, C155_BPL_I, C8K_BPLP, C8K_BPLN,
              C155_CSDNP, C155_CSD_I, C8K_CSDP, C8K_CSDN, D5_HCH_RX_,
              D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3,
              D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0, D10_BXI_RX, C6XX_EXTP,
              C6XX_EXTN, C666_EXTP, C666_EXTN, ONDDSI, ONMFRI, ONCKI,
              CICLK, CICSN, CTLID_RSTN, DATA_V_INP, DATA_VALID, ES_SPILLP,
              ES_SPILLN, DATVAL_INP, DATVAL_ES_, AISINSMSOH, RSTN,
              POISON, REIRDI, KAINP, KAINN, KBINP, KBINN, BYPASS_PLL,
              IDDQN, THZ_N, T_SET_BD2I, T_DISARST, TC166P, TC166N,
              T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7,
              T_CLK6, T_CLK5, T_CLK4, T_CLK3, T_CLK2, T_CLK1, T_CLK0,
              TM_SCAN, TE_SCAN, TSCI7, TSCI6, TSCI5, TSCI4, TSCI3,
              TSCI2, TSCI1, TSCI0, TDI, TCK, TMS, TRSTN, TBIST_RUN,
              TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1,
              THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11, THSI_SEL10,
              THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN, TESTSELZ15,
              TESTSELZ14, TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10,
              TESTSELZ9 );

      PinListSet( IN0_TS12,
              TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5, TESTSELZ4,
              TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0, THSI_STAND,
              THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E, THSI_ACC_S,
              THSI_RESYN, TC78_SEL, THSI_P2S, THSI_D787, THSI_D786,
              THSI_D785, THSI_D784, THSI_D783, THSI_D782, THSI_D781,
              THSI_D780, BYPASS_HSI, TC622P, TC622N, RSTZ_SHSI, THSI_RP_BY,
              C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0, T2G7_PRE_E,
              TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS12,
              D622_INP15, D622_INP11, D622_INP9, D622_INP8, D622_INP7,
              D622_INP3, D622_INP1, D622_INP0, D622_INN14, D622_INN13,
              D622_INN12, D622_INN10, D622_INN6, D622_INN5, D622_INN4,
              D622_INN2 );

      PinListSet( IN2_TS12,
              D622_INP14, D622_INP13, D622_INP12, D622_INP10, D622_INP6,
              D622_INP5, D622_INP4, D622_INP2, D622_INN15, D622_INN11,
              D622_INN9, D622_INN8, D622_INN7, D622_INN3, D622_INN1,
              D622_INN0 );

      PinListSet( IO1_TS12,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS12,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS13,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7,
              D5_HCH_RX6, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2,
              D5_HCH_RX1, D5_HCH_RX0, D10_BXI_RX, C6XX_EXTP, C6XX_EXTN,
              C666_EXTP, C666_EXTN, ONDDSI, ONMFRI, ONCKI, CICLK, CICSN,
              CTLID_RSTN, DATA_V_INP, DATA_VALID, ES_SPILLP, ES_SPILLN,
              DATVAL_INP, DATVAL_ES_, AISINSMSOH, RSTN, POISON, REIRDI,
              KAINP, KAINN, KBINP, KBINN, BYPASS_PLL, IDDQN, THZ_N,
              T_SET_BD2I, T_DISARST, TC166P, TC166N, T_CLK13, T_CLK12,
              T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5,
              T_CLK4, T_CLK3, T_CLK2, T_CLK1, T_CLK0, TM_SCAN, TE_SCAN,
              TSCI7, TSCI6, TSCI5, TSCI4 );

      PinListSet( IN0_TS13,
              TSCI3, TSCI2, TSCI1, TSCI0, TDI, TCK, TMS, TRSTN, TBIST_RUN,
              TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1,
              THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11, THSI_SEL10,
              THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN, TESTSELZ15,
              TESTSELZ14, TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10,
              TESTSELZ9, TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5,
              TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E,
              THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S, THSI_D787,
              THSI_D786, THSI_D785, THSI_D784, THSI_D783, THSI_D782,
              THSI_D781, THSI_D780, BYPASS_HSI, TC622P, TC622N, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS13,
              C155_CSDNP );

      PinListSet( IN2_TS13,
              C155_CSD_I );

      PinListSet( IO1_TS13,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS13,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS14,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7,
              D5_HCH_RX6, D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2,
              D5_HCH_RX1, D5_HCH_RX0, D10_BXI_RX, C6XX_EXTP, C6XX_EXTN,
              C666_EXTP, C666_EXTN, ONDDSI, ONMFRI, ONCKI, CICLK, CICSN,
              CTLID_RSTN, DATA_V_INP, DATA_VALID, ES_SPILLP, ES_SPILLN,
              DATVAL_INP, DATVAL_ES_, AISINSMSOH, RSTN, POISON, REIRDI,
              KAINP, KAINN, KBINP, KBINN, BYPASS_PLL, IDDQN, THZ_N,
              T_SET_BD2I, T_DISARST, TC166P, TC166N, T_CLK13, T_CLK12,
              T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5,
              T_CLK4, T_CLK3, T_CLK2, T_CLK1, T_CLK0, TM_SCAN, TE_SCAN,
              TSCI7, TSCI6, TSCI5, TSCI4 );

      PinListSet( IN0_TS14,
              TSCI3, TSCI2, TSCI1, TSCI0, TDI, TCK, TMS, TRSTN, TBIST_RUN,
              TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1,
              THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11, THSI_SEL10,
              THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN, TESTSELZ15,
              TESTSELZ14, TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10,
              TESTSELZ9, TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5,
              TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E,
              THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S, THSI_D787,
              THSI_D786, THSI_D785, THSI_D784, THSI_D783, THSI_D782,
              THSI_D781, THSI_D780, BYPASS_HSI, TC622P, TC622N, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS14,
              C155_CSDNP );

      PinListSet( IN2_TS14,
              C155_CSD_I );

      PinListSet( IO1_TS14,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS14,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C5_HCH_RX, P5_HCH_RX,
              C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN, CIACKN, CICSRN,
              RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3,
              TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL, TBIST_DONE,
              THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1, THSI_OUTD0,
              T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1,
              PRBSGSYNC0 );

      PinListSet( OUT2_TS14,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0 );

      PinListSet( IN0_TS15,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C155_CSDNP, C155_CSD_I, C8K_CSDP,
              C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, C6XX_EXTP, C6XX_EXTN, C666_EXTP, C666_EXTN,
              ONDDSI, ONMFRI, ONCKI, CICLK, CICSN, CTLID_RSTN, DATA_V_INP,
              DATA_VALID, ES_SPILLP, ES_SPILLN, DATVAL_INP, DATVAL_ES_,
              AISINSMSOH, RSTN, POISON, REIRDI, KAINP, KAINN, KBINP,
              KBINN, BYPASS_PLL, IDDQN, THZ_N, T_SET_BD2I, T_DISARST,
              TC166P, TC166N, T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9,
              T_CLK8, T_CLK7, T_CLK6, T_CLK5, T_CLK4, T_CLK3, T_CLK2,
              T_CLK1, T_CLK0, TM_SCAN, TE_SCAN, TSCI7, TSCI6 );

      PinListSet( IN0_TS15,
              TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0, TDI, TCK, TMS,
              TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1,
              TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01, THSI_SEL00,
              THSI_SEL11, THSI_SEL10, THSI_PWRDN, RSTZ_HSI, THSI_INA,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6, TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2,
              TESTSELZ1, TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN,
              THSI_SELN1, THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL,
              THSI_P2S, THSI_D787, THSI_D786, THSI_D785, THSI_D784,
              THSI_D783, THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI,
              RSTZ_SHSI, THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS,
              T2G7_PRMP0, T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS15,
              TC622P );

      PinListSet( IN2_TS15,
              TC622N );

      PinListSet( IO1_TS15,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS15,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS16,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C155_CSDNP, C155_CSD_I, C8K_CSDP,
              C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, C6XX_EXTP, C6XX_EXTN, C666_EXTP, C666_EXTN,
              ONDDSI, ONMFRI, ONCKI, CICLK, CICSN, CTLID_RSTN, DATA_V_INP,
              DATA_VALID, ES_SPILLP, ES_SPILLN, DATVAL_INP, DATVAL_ES_,
              AISINSMSOH, RSTN, POISON, REIRDI, KAINP, KAINN, KBINP,
              KBINN, BYPASS_PLL, IDDQN, THZ_N, T_SET_BD2I, T_DISARST,
              TC166P, TC166N, T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9,
              T_CLK8, T_CLK7, T_CLK6, T_CLK4, T_CLK3, T_CLK2, T_CLK1,
              T_CLK0, TM_SCAN, TE_SCAN, TSCI7, TSCI6, TSCI5 );

      PinListSet( IN0_TS16,
              TSCI4, TSCI3, TSCI2, TSCI1, TSCI0, TDI, TCK, TMS, TRSTN,
              TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI,
              THSI_BYPS1, THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11,
              THSI_SEL10, THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN,
              TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12, TESTSELZ11,
              TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7, TESTSELZ6,
              TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1,
              TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1,
              THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S,
              THSI_D787, THSI_D786, THSI_D785, THSI_D784, THSI_D783,
              THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI, TC622P,
              TC622N, RSTZ_SHSI, THSI_RP_BY, C1G35_INP, C1G35_INN,
              T2G7_BYPAS, T2G7_PRMP0, T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS16,
              T_CLK5 );

      PinListSet( IO1_TS16,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS16,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS17,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C8K_BPLP, C8K_BPLN,
              C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6,
              D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1,
              D5_HCH_RX0, D10_BXI_RX, ONDDSI, ONMFRI, CICSN, AISINSMSOH,
              POISON, REIRDI, KAINP, KAINN, KBINP, KBINN, BYPASS_PLL,
              IDDQN, THZ_N, T_SET_BD2I, T_DISARST, TM_SCAN, TE_SCAN,
              TSCI7, TSCI6, TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0,
              TDI, TCK, TMS, TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL,
              TPLL_TEST1, TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01,
              THSI_SEL00, THSI_SEL11, THSI_SEL10, THSI_PWRDN, THSI_INA,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6 );

      PinListSet( IN0_TS17,
              TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1,
              TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1,
              THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S,
              THSI_D787, THSI_D786, THSI_D785, THSI_D784, THSI_D783,
              THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS17,
              C155_BPLNP, C155_CSDNP, C6XX_EXTP, C666_EXTP, ONCKI,
              DATA_V_INP, ES_SPILLP, DATVAL_INP, TC166P, T_CLK13, T_CLK12,
              T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK5,
              T_CLK4, T_CLK2, T_CLK1, T_CLK0, TC622P );

      PinListSet( IN2_TS17,
              C155_BPL_I, C155_CSD_I, C6XX_EXTN, C666_EXTN, CTLID_RSTN,
              DATA_VALID, ES_SPILLN, DATVAL_ES_, RSTN, TC166N, RSTZ_HSI,
              TC622N );

      PinListSet( IN3_TS17,
              CICLK );

      PinListSet( IN4_TS17,
              T_CLK3 );

      PinListSet( IO1_TS17,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS17,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS18,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C8K_BPLP, C8K_BPLN,
              C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6,
              D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1,
              D5_HCH_RX0, D10_BXI_RX, ONDDSI, ONMFRI, CICSN, AISINSMSOH,
              POISON, REIRDI, KAINP, KAINN, KBINP, KBINN, BYPASS_PLL,
              IDDQN, THZ_N, T_SET_BD2I, T_DISARST, TM_SCAN, TE_SCAN,
              TSCI7, TSCI6, TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0,
              TDI, TCK, TMS, TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL,
              TPLL_TEST1, TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01,
              THSI_SEL00, THSI_SEL11, THSI_SEL10, THSI_PWRDN, THSI_INA,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6 );

      PinListSet( IN0_TS18,
              TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1,
              TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1,
              THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S,
              THSI_D787, THSI_D786, THSI_D785, THSI_D784, THSI_D783,
              THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS18,
              C155_BPLNP, C155_CSDNP, C666_EXTP, ONCKI, DATA_V_INP,
              ES_SPILLP, DATVAL_INP, TC166P, T_CLK13, T_CLK12, T_CLK11,
              T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK4, T_CLK2,
              T_CLK1, T_CLK0, TC622P );

      PinListSet( IN2_TS18,
              C155_BPL_I, C155_CSD_I, C666_EXTN, CTLID_RSTN, DATA_VALID,
              ES_SPILLN, DATVAL_ES_, RSTN, TC166N, RSTZ_HSI, TC622N );

      PinListSet( IN3_TS18,
              C6XX_EXTP );

      PinListSet( IN4_TS18,
              C6XX_EXTN );

      PinListSet( IN5_TS18,
              CICLK );

      PinListSet( IN6_TS18,
              T_CLK5 );

      PinListSet( IN7_TS18,
              M_T_CLK3 );

      PinListSet( IO1_TS18,
              T_CLK3 );

      PinListSet( IO2_TS18,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS18,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS19,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C8K_BPLP, C8K_BPLN,
              C8K_CSDP, C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6,
              D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1,
              D5_HCH_RX0, D10_BXI_RX, ONDDSI, ONMFRI, CICSN, AISINSMSOH,
              POISON, REIRDI, KAINP, KAINN, KBINP, KBINN, BYPASS_PLL,
              IDDQN, THZ_N, T_SET_BD2I, T_DISARST, TM_SCAN, TE_SCAN,
              TSCI7, TSCI6, TSCI5, TSCI4, TSCI3, TSCI2, TSCI1, TSCI0,
              TDI, TCK, TMS, TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL,
              TPLL_TEST1, TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01,
              THSI_SEL00, THSI_SEL11, THSI_SEL10, THSI_PWRDN, THSI_INA,
              THSI_OPEN, TESTSELZ15, TESTSELZ14, TESTSELZ13, TESTSELZ12,
              TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8, TESTSELZ7,
              TESTSELZ6 );

      PinListSet( IN0_TS19,
              TESTSELZ5, TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1,
              TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1,
              THSI_SEL_E, THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S,
              THSI_D787, THSI_D786, THSI_D785, THSI_D784, THSI_D783,
              THSI_D782, THSI_D781, THSI_D780, BYPASS_HSI, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS19,
              C155_BPLNP, C155_CSDNP, C666_EXTP, ONCKI, DATA_V_INP,
              ES_SPILLP, DATVAL_INP, TC166P, T_CLK13, T_CLK12, T_CLK11,
              T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6, T_CLK4, T_CLK2,
              T_CLK1, T_CLK0, TC622P );

      PinListSet( IN2_TS19,
              C155_BPL_I, C155_CSD_I, C666_EXTN, CTLID_RSTN, DATA_VALID,
              ES_SPILLN, DATVAL_ES_, RSTN, TC166N, RSTZ_HSI, TC622N );

      PinListSet( IN3_TS19,
              C6XX_EXTP );

      PinListSet( IN4_TS19,
              C6XX_EXTN );

      PinListSet( IN5_TS19,
              CICLK );

      PinListSet( IN6_TS19,
              T_CLK3 );

      PinListSet( IN7_TS19,
              M_T_CLK5 );

      PinListSet( IO1_TS19,
              T_CLK5 );

      PinListSet( IO2_TS19,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS19,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IN0_TS20,
              MODE2G7, D622_INP15, D622_INP14, D622_INP13, D622_INP12,
              D622_INP11, D622_INP10, D622_INP9, D622_INP8, D622_INP7,
              D622_INP6, D622_INP5, D622_INP4, D622_INP3, D622_INP2,
              D622_INP1, D622_INP0, D622_INN15, D622_INN14, D622_INN13,
              D622_INN12, D622_INN11, D622_INN10, D622_INN9, D622_INN8,
              D622_INN7, D622_INN6, D622_INN5, D622_INN4, D622_INN3,
              D622_INN2, D622_INN1, D622_INN0, C155_BPLNP, C155_BPL_I,
              C8K_BPLP, C8K_BPLN, C155_CSDNP, C155_CSD_I, C8K_CSDP,
              C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, C6XX_EXTP, C6XX_EXTN, C666_EXTP, C666_EXTN,
              ONDDSI, ONMFRI, ONCKI, CICSN, CTLID_RSTN, DATA_V_INP,
              DATA_VALID, ES_SPILLP, ES_SPILLN, DATVAL_INP, DATVAL_ES_,
              AISINSMSOH, RSTN, POISON, REIRDI, KAINP, KAINN, KBINP,
              KBINN, BYPASS_PLL, IDDQN, THZ_N, T_SET_BD2I, T_DISARST,
              TC166P, TC166N, T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9,
              T_CLK8, T_CLK7, T_CLK6, T_CLK5, T_CLK4, T_CLK3, T_CLK2,
              T_CLK1, T_CLK0, TM_SCAN, TE_SCAN, TSCI7, TSCI6, TSCI5,
              TSCI4 );

      PinListSet( IN0_TS20,
              TSCI3, TSCI2, TSCI1, TSCI0, TDI, TCK, TMS, TRSTN, TBIST_RUN,
              TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1,
              THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11, THSI_SEL10,
              THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN, TESTSELZ15,
              TESTSELZ14, TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10,
              TESTSELZ9, TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5,
              TESTSELZ4, TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E,
              THSI_ACC_S, THSI_RESYN, TC78_SEL, THSI_P2S, THSI_D787,
              THSI_D786, THSI_D785, THSI_D784, THSI_D783, THSI_D782,
              THSI_D781, THSI_D780, BYPASS_HSI, TC622P, TC622N, RSTZ_SHSI,
              THSI_RP_BY, C1G35_INP, C1G35_INN, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_PRE_E, TM_SHSI, T2G7_TDI );

      PinListSet( IN1_TS20,
              CICLK );

      PinListSet( IO1_TS20,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS20,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3, D2G7_OUTP2,
              D2G7_OUTN3, D2G7_OUTN2, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3,
              DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8,
              D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3,
              D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4,
              DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9,
              D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4,
              D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C5_HCH_RX,
              P5_HCH_RX, CIACKN, CICSRN, RECENTER, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TBIST_FAIL, TBIST_DONE,
              THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1, THSI_OUTD0,
              T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2 );

      PinListSet( OUT2_TS20,
              C1G35_OUTP, C1G35_OUTN, C80_EXTP, C80_EXTN, C83_EXTP,
              C83_EXTN, MX_PAR_TOG, TPO, TDO, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( OUT3_TS20,
              D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN1, D2G7_OUTN0 );

      PinListSet( IN0_TS21,
              MODE2G7, D622_INN15, D622_INN14, D622_INN13, D622_INN12,
              D622_INN11, D622_INN10, D622_INN9, D622_INN8, D622_INN7,
              D622_INN6, D622_INN5, D622_INN4, D622_INN3, D622_INN2,
              D622_INN1, D622_INN0, C155_BPL_I, C8K_BPLN, C155_CSD_I,
              C8K_CSDN, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, C6XX_EXTN, C666_EXTN, ONDDSI, ONMFRI, ONCKI,
              CICLK, CICSN, CTLID_RSTN, DATA_VALID, ES_SPILLN, DATVAL_ES_,
              AISINSMSOH, RSTN, POISON, REIRDI, KAINN, KBINN, BYPASS_PLL,
              IDDQN, THZ_N, T_SET_BD2I, T_DISARST, TC166N, T_CLK13,
              T_CLK12, T_CLK11, T_CLK10, T_CLK9, T_CLK8, T_CLK7, T_CLK6,
              T_CLK5, T_CLK4, T_CLK3, T_CLK2, T_CLK1, T_CLK0, TM_SCAN,
              TE_SCAN, TSCI7, TSCI6, TSCI5, TSCI4, TSCI3, TSCI2, TSCI1,
              TSCI0, TDI, TCK, TMS, TRSTN, TBIST_RUN, TBIST_ROT, TM_RAM,
              TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01,
              THSI_SEL00, THSI_SEL11, THSI_SEL10, THSI_PWRDN, RSTZ_HSI,
              THSI_INA, THSI_OPEN, TESTSELZ15, TESTSELZ14 );

      PinListSet( IN0_TS21,
              TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10, TESTSELZ9,
              TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5, TESTSELZ4,
              TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0, THSI_STAND,
              THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E, THSI_ACC_S,
              THSI_RESYN, TC78_SEL, THSI_P2S, THSI_D787, THSI_D786,
              THSI_D785, THSI_D784, THSI_D783, THSI_D782, THSI_D781,
              THSI_D780, BYPASS_HSI, TC622N, RSTZ_SHSI, THSI_RP_BY,
              C1G35_INN, T2G7_BYPAS, T2G7_PRMP0, T2G7_PRE_E, TM_SHSI,
              T2G7_TDI );

      PinListSet( IN1_TS21,
              D622_INP15, D622_INP14, D622_INP13, D622_INP12, D622_INP11,
              D622_INP10, D622_INP9, D622_INP8, D622_INP7, D622_INP6,
              D622_INP5, D622_INP4, D622_INP3, D622_INP2, D622_INP1,
              D622_INP0, C155_BPLNP, C8K_BPLP, C155_CSDNP, C8K_CSDP,
              C6XX_EXTP, C666_EXTP, DATA_V_INP, ES_SPILLP, DATVAL_INP,
              KAINP, KBINP, TC166P, TC622P, C1G35_INP );

      PinListSet( IO1_TS21,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( OUT1_TS21,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIACKN, CICSRN, RECENTER, MX_PAR_TOG, TOUT7, TOUT6, TOUT5,
              TOUT4, TOUT3, TOUT2, TOUT1, TOUT0, TPO, TDO, TBIST_FAIL,
              TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD, THSI_OUTD1,
              THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2,
              PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM1,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, C1G35_OUTP,
              C1G35_OUTN, PAR_6XX_TP, PAR_6XX_OU, P2G7_OUTP, P2G7_OUTN,
              D2G7_OUTP3, D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3,
              D2G7_OUTN2, D2G7_OUTN1, D2G7_OUTN0, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5,
              DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1,
              D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5,
              D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0,
              C5_HCH_RX, P5_HCH_RX, C80_EXTP, C80_EXTN, C83_EXTP, C83_EXTN,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG, GPIO15,
              GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9, GPIO8,
              GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1, GPIO0,
              TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1, TOUT0,
              TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU, THSI_TESTD,
              THSI_OUTD1, THSI_OUTD0 );

      PinListSet( ICCQ_OPEN_PM1,
              T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1,
              PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM10,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0,TDO );

      PinListSet( ICCQ_OPEN_PM11,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM12,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM13,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM14,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM15,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM16,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM17,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM18,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM19,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM20,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM21,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_OPEN_PM22,
              C1G35_OUTP, C1G35_OUTN, P2G7_OUTP, P2G7_OUTN, D2G7_OUTP3,
              D2G7_OUTP2, D2G7_OUTP1, D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2,
              D2G7_OUTN1, D2G7_OUTN0, C5_HCH_RX, P5_HCH_RX, C80_EXTP,
              C80_EXTN, CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2,
              CIINF1, CIINF0, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10, GPIO9,
              GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2, GPIO1,
              GPIO0, TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1,
              TOUT0, TPO, TBIST_FAIL, TBIST_DONE, THSI_OUTA, THSI_TCKOU,
              THSI_TESTD, THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4,
              PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( ICCQ_ZPINS_PM1,
              TDO );

      PinListSet( ICCQ_ZPINS_PM10,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
C80_EXTP, C80_EXTN );

      PinListSet( ICCQ_ZPINS_PM11,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM12,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM13,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM14,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM15,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM16,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM17,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM18,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM19,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM20,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM21,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( ICCQ_ZPINS_PM22,
              C6XX_OUTP, C6XX_OUTN, C167_15UTP, C167_155_O, PAR_6XX_TP,
              PAR_6XX_OU, DX6X_OUTP5, DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              D6XX_OUT10, D6XX_OUTP0, DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3,
              DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8,
              D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3,
              D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C83_EXTP, C83_EXTN,
              TDO );

      PinListSet( LU_INS,
              D622_INP15, D622_INP14, D622_INP12, D622_INP8, D622_INP5,
              D622_INP3, D622_INP1, D622_INP0, D622_INN13, D622_INN11,
              D622_INN10, D622_INN9, D622_INN7, D622_INN6, D622_INN4,
              D622_INN2, C155_BPL_I, C8K_BPLP, C155_CSD_I, C8K_CSDP,
              D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, C6XX_EXTN, C666_EXTN, ONDDSI, ONMFRI, CICLK,
              CTLID_RSTN, DATA_VALID, ES_SPILLN, DATVAL_ES_, AISINSMSOH,
              RSTN, POISON, KAINP, KBINN, BYPASS_PLL, THZ_N, T_DISARST,
              TC166N, T_CLK3, TM_SCAN, TE_SCAN, TSCI7, TSCI6, TSCI4,
              TSCI0, TBIST_RUN, TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01,
              THSI_PWRDN, RSTZ_HSI, TESTSELZ15, TESTSELZ14, TESTSELZ13,
              TESTSELZ12, TESTSELZ11, TESTSELZ10, TESTSELZ9, TESTSELZ8,
              TESTSELZ7, TESTSELZ6, TESTSELZ5, TESTSELZ4, TESTSELZ3,
              TESTSELZ2, TESTSELZ1, TESTSELZ0, THSI_STAND, THSI_CKGE1,
              THSI_CKGEN, THSI_SELN1, THSI_RESYN, TC78_SEL, THSI_P2S,
              BYPASS_HSI, TC622N, RSTZ_SHSI, THSI_RP_BY, C1G35_INP );

      PinListSet( EVEN3V_INS,
              ONMFRI, TCK, THSI_D786, THSI_D785, THSI_D782, THSI_D780 );

      PinListSet( ODD3V_INS,
              ONDDSI, ONCKI, CICSN, CTLID_RSTN, RSTN, POISON, REIRDI,
              IDDQN, THSI_D787, THSI_D784, THSI_D783, THSI_D781 );

      PinListSet( EVEN_PINS,
              C6XX_OUTN, C167_15UTP, C1G35_OUTP, C1G35_OUTN, PAR_6XX_TP,
              P2G7_OUTP, P2G7_OUTN, D2G7_OUTP1, D2G7_OUTN1, MODE2G7,
              DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9, D6XX_OUTP8, D6XX_OUTP7,
              D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4, D6XX_OUTP3, D6XX_OUTP2,
              DX6X_OUTN5, DX6X_OUTN4, DX6X_OUTN3, DX6X_OUTN2, D6XX_OUT11,
              D6XX_OUTN0, D622_INP14, D622_INP12, D622_INP11, D622_INP8,
              D622_INP7, D622_INP2, D622_INP1, D622_INN14, D622_INN12,
              D622_INN11, D622_INN8, D622_INN7, D622_INN2, D622_INN1,
              C155_BPLNP, C155_BPL_I, C8K_BPLP, C8K_BPLN, P5_HCH_RX,
              D5_HCH_RX_, D5_HCH_RX6, D5_HCH_RX2, D5_HCH_RX0, D10_BXI_RX,
              C666_EXTP, C666_EXTN, C80_EXTN, C83_EXTP, ONMFRI, CICLK,
              CIINF6, CIINF4, CIINF3, CIINF2, CIINF0, CIACKN, CICSRN,
              ES_SPILLP, ES_SPILLN, DATVAL_INP, DATVAL_ES_, MX_PAR_TOG,
              AISINSMSOH, KAINN, KBINN, GPIO14, GPIO13, GPIO5, GPIO4,
              GPIO0, THZ_N, T_SET_BD2I, T_DISARST, TOUT6, TOUT4, TOUT3,
              TPO, TC166N, T_CLK12, T_CLK11, T_CLK9, T_CLK7, T_CLK5,
              T_CLK2, T_CLK0, TE_SCAN, TSCI7, TSCI4, TSCI2, TSCI0,
              TDO, TDI, TCK, TRSTN );

      PinListSet( EVEN_PINS,
              TBIST_RUN, TBIST_ROT, TBIST_DONE, TM_HSI, THSI_BYPS1,
              THSI_SEL01, THSI_SEL00, THSI_SEL10, RSTZ_HSI, THSI_INA,
              TESTSELZ15, TESTSELZ12, TESTSELZ10, TESTSELZ7, TESTSELZ5,
              TESTSELZ3, THSI_STAND, THSI_CKGE1, THSI_ACC_S, THSI_TESTD,
              THSI_OUTD1, THSI_OUTD0, THSI_P2S, THSI_D786, THSI_D785,
              THSI_D782, THSI_D780, TC622N, THSI_RP_BY, T2G7_BYPAS,
              TM_SHSI, PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1,
              PRBSGSYNC0, VBIASLVDA1, VIBASLVDSA, VBIASLVDSO );

      PinListSet( ODD_PINS,
              C6XX_OUTP, C167_155_O, PAR_6XX_OU, D2G7_OUTP3, D2G7_OUTP2,
              D2G7_OUTP0, D2G7_OUTN3, D2G7_OUTN2, D2G7_OUTN0, DX6X_OUTP5,
              DX6X_OUTP4, DX6X_OUTP3, DX6X_OUTP2, D6XX_OUT10, D6XX_OUTP0,
              DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9, D6XX_OUTN8, D6XX_OUTN7,
              D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4, D6XX_OUTN3, D6XX_OUTN2,
              D622_INP15, D622_INP13, D622_INP10, D622_INP9, D622_INP6,
              D622_INP5, D622_INP4, D622_INP3, D622_INP0, D622_INN15,
              D622_INN13, D622_INN10, D622_INN9, D622_INN6, D622_INN5,
              D622_INN4, D622_INN3, D622_INN0, C155_CSDNP, C155_CSD_I,
              C8K_CSDP, C8K_CSDN, C5_HCH_RX, D5_HCH_RX7, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX1, C6XX_EXTP, C6XX_EXTN,
              C80_EXTP, C83_EXTN, ONDDSI, ONCKI, CICSN, CIINF7, CIINF5,
              CIINF1, CTLID_RSTN, DATA_V_INP, DATA_VALID, RECENTER,
              RSTN, POISON, REIRDI, KAINP, KBINP, GPIO15, GPIO12, GPIO11,
              GPIO10, GPIO9, GPIO8, GPIO7, GPIO6, GPIO3, GPIO2, GPIO1,
              BYPASS_PLL, IDDQN, TOUT7, TOUT5, TOUT2, TOUT1, TOUT0,
              TC166P, T_CLK13, T_CLK10, T_CLK8, T_CLK6, T_CLK4, T_CLK3,
              T_CLK1, TM_SCAN, TSCI6 );

      PinListSet( ODD_PINS,
              TSCI5, TSCI3, TSCI1, TMS, TM_RAM, TBIST_FAIL, TM_PLL,
              TPLL_TEST1, THSI_BYPAS, THSI_SEL11, THSI_PWRDN, THSI_OPEN,
              TESTSELZ14, TESTSELZ13, TESTSELZ11, TESTSELZ9, TESTSELZ8,
              TESTSELZ6, TESTSELZ4, TESTSELZ2, TESTSELZ1, TESTSELZ0,
              THSI_CKGEN, THSI_SELN1, THSI_SEL_E, THSI_RESYN, TC78_SEL,
              THSI_OUTA, THSI_TCKOU, THSI_D787, THSI_D784, THSI_D783,
              THSI_D781, BYPASS_HSI, TC622P, RSTZ_SHSI, C1G35_INP,
              C1G35_INN, T2G7_TDO, T2G7_PRMP0, T2G7_PRE_E, T2G7_TDI,
              VBIASLVDB1, VBIASLVDSI, VDDTXBIAS, VBIASLVDSA );


      PinListSet( PINS_EVEN_ROWS,
 C5_HCH_RX, D5_HCH_RX_, D5_HCH_RX5, D5_HCH_RX3,
              D5_HCH_RX0,
              ONDDSI, CIINF7, CIINF4, CIINF2, CICSRN, CTLID_RSTN,  RECENTER, AISINSMSOH, POISON,
              GPIO11, GPIO10, GPIO8, GPIO7, GPIO6, GPIO3,
              GPIO2, GPIO1, BYPASS_PLL, THZ_N, T_DISARST, TOUT7, TOUT3,
              TOUT1, T_CLK13, T_CLK12, T_CLK11, T_CLK10,
              T_CLK9, T_CLK3, T_CLK2, T_CLK1, T_CLK0, TM_SCAN, TSCI7,
              TSCI5, TSCI0, TDO, TDI );

      PinListSet( PINS_EVEN_ROWS,
              TBIST_RUN, TBIST_ROT, TM_RAM, TM_PLL, THSI_SEL00, THSI_SEL10,
              THSI_PWRDN, RSTZ_HSI, THSI_INA, THSI_OPEN, TESTSELZ15,
              TESTSELZ13, TESTSELZ9, TESTSELZ6, TESTSELZ5, TESTSELZ4,
              TESTSELZ1, THSI_CKGEN, THSI_SELN1, THSI_ACC_S, THSI_RESYN,
              THSI_OUTA, THSI_TCKOU, THSI_OUTD1, THSI_D786, THSI_D784,
              THSI_D781, THSI_D780, BYPASS_HSI, THSI_RP_BY, 
              T2G7_BYPAS, T2G7_TDO, T2G7_PRMP0, T2G7_TDI, PRBSGSYNC3,
              PRBSGSYNC1);

      PinListSet( PINS_ODD_ROWS,
              P5_HCH_RX, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX4, D5_HCH_RX2,
              D5_HCH_RX1, D10_BXI_RX, ONMFRI, ONCKI, CICLK, CICSN, CIINF6, CIINF5,
              CIINF3, CIINF1, CIINF0, CIACKN, 
              MX_PAR_TOG, RSTN, REIRDI, GPIO15,
              GPIO14, GPIO13, GPIO12, GPIO9, GPIO5, GPIO4, GPIO0, IDDQN,
              T_SET_BD2I, TOUT6, TOUT5, TOUT4, TOUT2, TOUT0, TPO, T_CLK8,
              T_CLK7, T_CLK6, T_CLK5, T_CLK4, TE_SCAN, TSCI6, TSCI4,
              TSCI3, TSCI2 );

      PinListSet( PINS_ODD_ROWS,
              TSCI1, TCK, TMS, TRSTN, TBIST_FAIL, TBIST_DONE, TPLL_TEST1,
              TM_HSI, THSI_BYPS1, THSI_BYPAS, THSI_SEL01, THSI_SEL11,
              TESTSELZ14, TESTSELZ12, TESTSELZ11, TESTSELZ10, TESTSELZ8,
              TESTSELZ7, TESTSELZ3, TESTSELZ2, TESTSELZ0, THSI_STAND,
              THSI_CKGE1, THSI_SEL_E, TC78_SEL, THSI_TESTD, THSI_OUTD0,
              THSI_P2S, THSI_D787, THSI_D785, THSI_D783, THSI_D782,
              RSTZ_SHSI, T2G7_PRE_E, TM_SHSI,
PRBSGSYNC4, PRBSGSYNC2, PRBSGSYNC0 );

      PinListSet( PINS_EVEN_COLUMNS,
              P5_HCH_RX, D5_HCH_RX_,
              D5_HCH_RX6, D5_HCH_RX2, D5_HCH_RX0, D10_BXI_RX, ONMFRI, CICSN, CIINF7,
              CIINF5, CIINF1, CTLID_RSTN, MX_PAR_TOG,
              AISINSMSOH, KAINP, KBINP, GPIO14, GPIO13, GPIO5, GPIO4,
              GPIO0, THZ_N, T_SET_BD2I, T_DISARST, TOUT6, TOUT4, TOUT3,
              TPO, T_CLK12, T_CLK11, T_CLK9, T_CLK7, T_CLK5,
              T_CLK2, T_CLK0, TE_SCAN, TSCI7, TSCI4, TSCI2, TSCI0,
              TDO, TDI, TCK, TRSTN, TBIST_RUN, TBIST_ROT, TBIST_DONE,
              TM_PLL, THSI_BYPS1, THSI_BYPAS );

      PinListSet( PINS_EVEN_COLUMNS,
              THSI_SEL10, THSI_PWRDN, THSI_INA, TESTSELZ15, TESTSELZ12,
              TESTSELZ10, TESTSELZ6, TESTSELZ4, TESTSELZ2, TESTSELZ1,
              TESTSELZ0, THSI_STAND, THSI_CKGE1, THSI_CKGEN, THSI_SEL_E,
              THSI_ACC_S, THSI_TESTD, THSI_OUTD1, THSI_D787, THSI_D784,
              THSI_D783, THSI_D781, BYPASS_HSI, RSTZ_SHSI,
              T2G7_PRMP0, T2G7_PRE_E, T2G7_TDI,
              PRBSGSYNC4, PRBSGSYNC3, PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0);

      PinListSet( PINS_ODD_COLUMNS,
              C155_BPL_I, C5_HCH_RX, D5_HCH_RX7,
              D5_HCH_RX5, D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX1, ONDDSI, ONCKI, CICLK,
              CIINF6, CIINF4, CIINF3, CIINF2, CIINF0, CIACKN, CICSRN,
              RECENTER,
              RSTN, POISON, REIRDI, GPIO15, GPIO12, GPIO11,
              GPIO10, GPIO9, GPIO8, GPIO7, GPIO6, GPIO3, GPIO2, GPIO1,
              BYPASS_PLL, IDDQN, TOUT7, TOUT5, TOUT2, TOUT1, TOUT0,
              T_CLK13, T_CLK10, T_CLK8 );

      PinListSet( PINS_ODD_COLUMNS,
              T_CLK6, T_CLK4, T_CLK3, T_CLK1, TM_SCAN, TSCI6, TSCI5,
              TSCI3, TSCI1, TMS, TM_RAM, TBIST_FAIL, TPLL_TEST1, TM_HSI,
              THSI_SEL01, THSI_SEL00, THSI_SEL11, RSTZ_HSI, THSI_OPEN,
              TESTSELZ14, TESTSELZ13, TESTSELZ11, TESTSELZ9, TESTSELZ8,
              TESTSELZ7, TESTSELZ5, TESTSELZ3, THSI_SELN1, THSI_RESYN,
              TC78_SEL, THSI_OUTA, THSI_TCKOU, THSI_OUTD0, THSI_P2S,
              THSI_D786, THSI_D785, THSI_D782, THSI_D780, TC622N, THSI_RP_BY,
T2G7_BYPAS, T2G7_TDO, TM_SHSI);


      PinListSet( EVN_IN_PU1,
              THZ_N );

      PinListSet( IN_PULLUP,
              MODE2G7, D5_HCH_RX_, D5_HCH_RX7, D5_HCH_RX6, D5_HCH_RX5,
              D5_HCH_RX4, D5_HCH_RX3, D5_HCH_RX2, D5_HCH_RX1, D5_HCH_RX0,
              D10_BXI_RX, CICLK, AISINSMSOH, BYPASS_PLL, THZ_N, T_SET_BD2I,
              T_DISARST, T_CLK13, T_CLK12, T_CLK11, T_CLK10, T_CLK9,
              T_CLK8, T_CLK7, T_CLK6, T_CLK5, T_CLK4, T_CLK3, T_CLK2,
              T_CLK1, T_CLK0, TM_SCAN, TE_SCAN, TSCI7, TSCI6, TSCI5,
              TSCI4, TSCI3, TSCI2, TSCI1, TSCI0, TDI, TMS, TRSTN, TBIST_RUN,
              TBIST_ROT, TM_RAM, TM_PLL, TPLL_TEST1, TM_HSI, THSI_BYPS1,
              THSI_BYPAS, THSI_SEL01, THSI_SEL00, THSI_SEL11, THSI_SEL10,
              THSI_PWRDN, RSTZ_HSI, THSI_OPEN, TESTSELZ15, TESTSELZ14,
              TESTSELZ13, TESTSELZ12, TESTSELZ11, TESTSELZ10, TESTSELZ9,
              TESTSELZ8, TESTSELZ7, TESTSELZ6, TESTSELZ5, TESTSELZ4,
              TESTSELZ3, TESTSELZ2, TESTSELZ1, TESTSELZ0, THSI_STAND,
              THSI_CKGE1, THSI_CKGEN, THSI_SELN1, THSI_SEL_E, THSI_ACC_S,
              THSI_RESYN, TC78_SEL, THSI_P2S, BYPASS_HSI, RSTZ_SHSI,
              THSI_RP_BY, T2G7_BYPAS, T2G7_PRMP0, T2G7_PRE_E, TM_SHSI,
              T2G7_TDI );

      PinListSet( LVDSb1V_IN_ODD,
              VBIASLVDB1, VBIASLVDSI, VDDTXBIAS, VBIASLVDSA );

      PinListSet( LVDSb1V_IN_EVEN,
              VBIASLVDA1, VIBASLVDSA, VBIASLVDSO );

      PinListSet( CMOSa3V_IN_ODD,
              ONDDSI, ONCKI, CICSN, CTLID_RSTN, RSTN, POISON, REIRDI,
              IDDQN, THSI_D787, THSI_D784, THSI_D783, THSI_D781 );

      PinListSet( CMOSa3V_IN_EVEN,
              ONMFRI, TCK, THSI_D786, THSI_D785, THSI_D782, THSI_D780 );

      PinListSet( TESTINA1V_IN_EVEN,
              THSI_INA );

      PinListSet( VOHLVDSa1V1_PM8,
              C6XX_OUTP, C167_15UTP, PAR_6XX_TP, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, C80_EXTP,
              C83_EXTP );

      PinListSet( VOHLVDSa1V1_PM9,
              C6XX_OUTN, C167_155_O, PAR_6XX_OU, DX6X_OUTN5, DX6X_OUTN4,
              DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9,
              D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4,
              D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C80_EXTN,
              C83_EXTN );

      PinListSet( VOLLVDSa1V1_PM8,
              C6XX_OUTN, C167_155_O, PAR_6XX_OU, DX6X_OUTN5, DX6X_OUTN4,
              DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9,
              D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4,
              D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C80_EXTN,
              C83_EXTN );

      PinListSet( VOLLVDSa1V1_PM9,
              C6XX_OUTP, C167_15UTP, PAR_6XX_TP, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, C80_EXTP,
              C83_EXTP );

      PinListSet( VOHCMOSa3V1_PM3,
              TDO );


      PinListSet( VOHCMOSa3V1_PM8,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0 );


      PinListSet( VOHCMOSa3V1_PM8X,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( VOHCMOSa3V2_PM8,
              TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1, TOUT0,
              TPO, TBIST_FAIL, TBIST_DONE, THSI_TCKOU, THSI_TESTD,
              THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3,
              PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( VOHCMOSa3V3_PM8,
              C5_HCH_RX, P5_HCH_RX, RECENTER, MX_PAR_TOG );

      PinListSet( VOHCMOSa3V4_PM8,
              CIACKN, CICSRN );

      PinListSet( VOLCMOSa3V1_PM4,
              TDO );


      PinListSet( VOLCMOSa3V1_PM9,
              CIINF7, CIINF6, CIINF5, CIINF4, CIINF3, CIINF2, CIINF1,
              CIINF0 );


      PinListSet( VOLCMOSa3V1_PM9X,
              GPIO15, GPIO14, GPIO13, GPIO12, GPIO11, GPIO10,
              GPIO9, GPIO8, GPIO7, GPIO6, GPIO5, GPIO4, GPIO3, GPIO2,
              GPIO1, GPIO0 );

      PinListSet( VOLCMOSa3V2_PM9,
              TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1, TOUT0,
              TPO, TBIST_FAIL, TBIST_DONE, THSI_TCKOU, THSI_TESTD,
              THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3,
              PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( VOLCMOSa3V3_PM9,
              C5_HCH_RX, P5_HCH_RX, RECENTER, MX_PAR_TOG );

      PinListSet( VOLCMOSa3V4_PM9,
              CIACKN, CICSRN );

      PinListSet( VOHLVDSa1VY_PM8,
              C6XX_OUTP, C167_15UTP, PAR_6XX_TP, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, C80_EXTP,
              C83_EXTP );

      PinListSet( VOLLVDSa1VYZ_PM8,
              C6XX_OUTN, C167_155_O, PAR_6XX_OU, DX6X_OUTN5, DX6X_OUTN4,
              DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9,
              D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4,
              D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C80_EXTN,
              C83_EXTN );

      PinListSet( VOLLVDSa1VY_PM9,
              C6XX_OUTP, C167_15UTP, PAR_6XX_TP, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, C80_EXTP,
              C83_EXTP );

      PinListSet( VOHLVDSa1VYZ_PM9,
              C6XX_OUTN, C167_155_O, PAR_6XX_OU, DX6X_OUTN5, DX6X_OUTN4,
              DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9,
              D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4,
              D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C80_EXTN,
              C83_EXTN );

      PinListSet( IOZCMOSa3V_PM5,
              C5_HCH_RX, P5_HCH_RX, CIACKN, CICSRN, RECENTER, MX_PAR_TOG,
              TOUT7, TOUT6, TOUT5, TOUT4, TOUT3, TOUT2, TOUT1, TOUT0,
              TPO, TDO, TBIST_FAIL, TBIST_DONE, THSI_TCKOU, THSI_TESTD,
              THSI_OUTD1, THSI_OUTD0, T2G7_TDO, PRBSGSYNC4, PRBSGSYNC3,
              PRBSGSYNC2, PRBSGSYNC1, PRBSGSYNC0 );

      PinListSet( IILP1_ON_PM1,
              TRSTN );

      PinListSet( IILP1_ON_PM2,
              TDI );

      PinListSet( IILP1_ON_PM6,
              MODE2G7, D5_HCH_RX_, D5_HCH_RX6, D5_HCH_RX4, D5_HCH_RX2,
              D5_HCH_RX0, T_SET_BD2I, T_CLK13, T_CLK11, T_CLK10, T_CLK8,
              T_CLK6, T_CLK4, T_CLK2, T_CLK0, TM_SCAN, TSCI7, TSCI5,
              TSCI3, TSCI1, TBIST_RUN, TM_PLL, TPLL_TEST1, THSI_BYPS1,
              THSI_SEL00, THSI_SEL11, THSI_PWRDN, TESTSELZ14, TESTSELZ12,
              TESTSELZ10, TESTSELZ8, TESTSELZ7, TESTSELZ5, TESTSELZ3,
              TESTSELZ1, THSI_STAND, THSI_CKGE1, THSI_CKGEN, TC78_SEL,
              THSI_P2S, THSI_RP_BY, T2G7_PRE_E, TM_SHSI );

      PinListSet( IILP1_ON_PM7,
              D5_HCH_RX7, D5_HCH_RX5, D5_HCH_RX3, D5_HCH_RX1, D10_BXI_RX,
              CICLK, AISINSMSOH, BYPASS_PLL, T_DISARST, T_CLK12, T_CLK9,
              T_CLK7, T_CLK5, T_CLK3, T_CLK1, TE_SCAN, TSCI6, TSCI4,
              TSCI2, TSCI0, TMS, TBIST_ROT, TM_RAM, TM_HSI, THSI_BYPAS,
              THSI_SEL01, THSI_SEL10, RSTZ_HSI, THSI_OPEN, TESTSELZ15,
              TESTSELZ13, TESTSELZ11, TESTSELZ9, TESTSELZ6, TESTSELZ4,
              TESTSELZ2, TESTSELZ0, THSI_SELN1, THSI_SEL_E, THSI_ACC_S,
              THSI_RESYN, BYPASS_HSI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRMP0,
              T2G7_TDI );

      PinListSet( IOLP1_ON_PM6,
              CIINF6, CIINF4, CIINF2, CIINF0, GPIO14, GPIO12, GPIO10,
              GPIO8, GPIO6, GPIO4, GPIO2, GPIO0 );

      PinListSet( IOLP1_ON_PM7,
              CIINF7, CIINF5, CIINF3, CIINF1, GPIO15, GPIO13, GPIO11,
              GPIO9, GPIO7, GPIO5, GPIO3, GPIO1 );

      PinListSet( VOHLVDSY_PM8,
              C6XX_OUTP, C167_15UTP, PAR_6XX_TP, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, C80_EXTP,
              C83_EXTP );

      PinListSet( VOLLVDSY_PM9,
              C6XX_OUTP, C167_15UTP, PAR_6XX_TP, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, C80_EXTP,
              C83_EXTP );

      PinListSet( VOHLVDSYZ_PM9,
              C6XX_OUTN, C167_155_O, PAR_6XX_OU, DX6X_OUTN5, DX6X_OUTN4,
              DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9,
              D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4,
              D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C80_EXTN,
              C83_EXTN );

      PinListSet( VOLLVDSYZ_PM8,
              C6XX_OUTN, C167_155_O, PAR_6XX_OU, DX6X_OUTN5, DX6X_OUTN4,
              DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9,
              D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4,
              D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0, C80_EXTN,
              C83_EXTN );

      PinListSet( ALL_PINS, ALL_MUX, ALL_LVDSa, ALL_LVDSb, ALL_CML, ALL_CMOSa,
              ALL_TESTINA, ALL_AOUT );

      
      PinListSet( ALL_PINS_PLUS, ALL_PINS );



      PinListSet( C155_BPLNP_MARGIN_CLOCK, 
              C155_BPLNP );


      PinListSet( C155_BPL_I_MARGIN_CLOCK, 
              C155_BPL_I );


      PinListSet( C155_CSDNP_MARGIN_CLOCK, 
              C155_CSDNP );


      PinListSet( C155_CSD_I_MARGIN_CLOCK, 
              C155_CSD_I );


      PinListSet( C666_EXTN_MARGIN_CLOCK, 
              C666_EXTN );


      PinListSet( C666_EXTP_MARGIN_CLOCK, 
              C666_EXTP );


      PinListSet( C6XX_EXTN_MARGIN_CLOCK, 
              C6XX_EXTN );


      PinListSet( C6XX_EXTP_MARGIN_CLOCK, 
              C6XX_EXTP );


      PinListSet( CMOSa3V_INS_DC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              MODE2G7, ONDDSI, ONMFRI, POISON, REIRDI, RSTZ_SHSI,
              T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0, T2G7_TDI, TBIST_ROT,
              TBIST_RUN, TC78_SEL, TDI, TESTSELZ0, TESTSELZ1, TESTSELZ10,
              TESTSELZ11, TESTSELZ12, TESTSELZ13, TESTSELZ14, TESTSELZ15,
              TESTSELZ2, TESTSELZ3, TESTSELZ4, TESTSELZ5, TESTSELZ6,
              TESTSELZ7, TESTSELZ8, TESTSELZ9, TE_SCAN, THSI_ACC_S,
              THSI_BYPAS, THSI_BYPS1, THSI_CKGE1, THSI_CKGEN, THSI_D780,
              THSI_D781, THSI_D782, THSI_D783, THSI_D784, THSI_D785,
              THSI_D786, THSI_D787, THSI_OPEN, THSI_P2S, THSI_PWRDN,
              THSI_RESYN, THSI_RP_BY, THSI_SEL00, THSI_SEL01, THSI_SEL10,
              THSI_SEL11, THSI_SELN1, THSI_SEL_E, THSI_STAND, THZ_N, TMS,
              TM_HSI, TM_PLL, TM_RAM, TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN,
              TSCI0, TSCI1, TSCI2, TSCI3, TSCI4, TSCI5, TSCI6, TSCI7,
              T_DISARST, T_SET_BD2I );


      PinListSet( CTLID_RSTN_MARGIN_CLOCK, 
              CTLID_RSTN );


      PinListSet( D622_INN0_MARGIN_CLOCK, 
              D622_INN0 );


      PinListSet( D622_INN10_MARGIN_CLOCK, 
              D622_INN10 );


      PinListSet( D622_INN11_MARGIN_CLOCK, 
              D622_INN11 );


      PinListSet( D622_INN12_MARGIN_CLOCK, 
              D622_INN12 );


      PinListSet( D622_INN13_MARGIN_CLOCK, 
              D622_INN13 );


      PinListSet( D622_INN14_MARGIN_CLOCK, 
              D622_INN14 );


      PinListSet( D622_INN15_MARGIN_CLOCK, 
              D622_INN15 );


      PinListSet( D622_INN1_MARGIN_CLOCK, 
              D622_INN1 );


      PinListSet( D622_INN2_MARGIN_CLOCK, 
              D622_INN2 );


      PinListSet( D622_INN3_MARGIN_CLOCK, 
              D622_INN3 );


      PinListSet( D622_INN4_MARGIN_CLOCK, 
              D622_INN4 );


      PinListSet( D622_INN5_MARGIN_CLOCK, 
              D622_INN5 );


      PinListSet( D622_INN6_MARGIN_CLOCK, 
              D622_INN6 );


      PinListSet( D622_INN7_MARGIN_CLOCK, 
              D622_INN7 );


      PinListSet( D622_INN8_MARGIN_CLOCK, 
              D622_INN8 );


      PinListSet( D622_INN9_MARGIN_CLOCK, 
              D622_INN9 );


      PinListSet( D622_INP0_MARGIN_CLOCK, 
              D622_INP0 );


      PinListSet( D622_INP10_MARGIN_CLOCK,
              D622_INP10 );


      PinListSet( D622_INP11_MARGIN_CLOCK,
              D622_INP11 );


      PinListSet( D622_INP12_MARGIN_CLOCK,
              D622_INP12 );


      PinListSet( D622_INP13_MARGIN_CLOCK,
              D622_INP13 );


      PinListSet( D622_INP14_MARGIN_CLOCK,
              D622_INP14 );


      PinListSet( D622_INP15_MARGIN_CLOCK,
              D622_INP15 );


      PinListSet( D622_INP1_MARGIN_CLOCK, 
              D622_INP1 );


      PinListSet( D622_INP2_MARGIN_CLOCK, 
              D622_INP2 );


      PinListSet( D622_INP3_MARGIN_CLOCK, 
              D622_INP3 );


      PinListSet( D622_INP4_MARGIN_CLOCK, 
              D622_INP4 );


      PinListSet( D622_INP5_MARGIN_CLOCK, 
              D622_INP5 );


      PinListSet( D622_INP6_MARGIN_CLOCK, 
              D622_INP6 );


      PinListSet( D622_INP7_MARGIN_CLOCK, 
              D622_INP7 );


      PinListSet( D622_INP8_MARGIN_CLOCK, 
              D622_INP8 );


      PinListSet( D622_INP9_MARGIN_CLOCK, 
              D622_INP9 );


      PinListSet( DATA_VALID_MARGIN_CLOCK,
              DATA_VALID );


      PinListSet( DATA_V_INP_MARGIN_CLOCK,
              DATA_V_INP );


      PinListSet( DATVAL_ES__MARGIN_CLOCK,
              DATVAL_ES_ );


      PinListSet( DATVAL_INP_MARGIN_CLOCK,
              DATVAL_INP );


      PinListSet( ES_SPILLN_MARGIN_CLOCK, 
              ES_SPILLN );


      PinListSet( ES_SPILLP_MARGIN_CLOCK, 
              ES_SPILLP );


      PinListSet( IN0_TS10_AC_X,
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS11_AC_X,
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS12_AC_X,
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS13_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS14_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS15_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS16_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS17_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS18_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS19_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS1_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS20_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS2_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS3_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS4_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS5_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS6_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS7_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS8_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( IN0_TS9_AC_X, 
              AISINSMSOH, BYPASS_HSI, BYPASS_PLL, C1G35_INN, C1G35_INP,
              C8K_BPLN, C8K_BPLP, C8K_CSDN, C8K_CSDP, CICSN, D10_BXI_RX,
              D5_HCH_RX0, D5_HCH_RX1, D5_HCH_RX2, D5_HCH_RX3, D5_HCH_RX4,
              D5_HCH_RX5, D5_HCH_RX6, D5_HCH_RX7, D5_HCH_RX_, IDDQN,
              KAINN, KAINP, KBINN, KBINP, MODE2G7, ONDDSI, ONMFRI, POISON,
              REIRDI, RSTZ_SHSI, T2G7_BYPAS, T2G7_PRE_E, T2G7_PRMP0,
              T2G7_TDI, TBIST_ROT, TBIST_RUN, TC78_SEL, TDI, TESTSELZ0,
              TESTSELZ1, TESTSELZ10, TESTSELZ11, TESTSELZ12, TESTSELZ13,
              TESTSELZ14, TESTSELZ15, TESTSELZ2, TESTSELZ3, TESTSELZ4,
              TESTSELZ5, TESTSELZ6, TESTSELZ7, TESTSELZ8, TESTSELZ9,
              TE_SCAN, THSI_ACC_S, THSI_BYPAS, THSI_BYPS1, THSI_CKGE1,
              THSI_CKGEN, THSI_D780, THSI_D781, THSI_D782, THSI_D783,
              THSI_D784, THSI_D785, THSI_D786, THSI_D787, THSI_INA,
              THSI_OPEN, THSI_P2S, THSI_PWRDN, THSI_RESYN, THSI_RP_BY,
              THSI_SEL00, THSI_SEL01, THSI_SEL10, THSI_SEL11, THSI_SELN1,
              THSI_SEL_E, THSI_STAND, THZ_N, TMS, TM_HSI, TM_PLL, TM_RAM,
              TM_SCAN, TM_SHSI, TPLL_TEST1, TRSTN, TSCI0, TSCI1, TSCI2,
              TSCI3, TSCI4, TSCI5, TSCI6, TSCI7, T_DISARST, T_SET_BD2I );


      PinListSet( LVDSa1V_INSAZ_DC_X, 
              C8K_BPLN, C8K_CSDN, KAINN, KBINN );


      PinListSet( LVDSa1V_INSA_DC_X, 
              C8K_BPLP, C8K_CSDP, KAINP, KBINP );


      PinListSet( ONCKI_MARGIN_CLOCK, 
              ONCKI );


      PinListSet( RSTN_MARGIN_CLOCK, 
              RSTN );


      PinListSet( RSTZ_HSI_MARGIN_CLOCK, 
              RSTZ_HSI );


      PinListSet( TC166N_MARGIN_CLOCK, 
              TC166N );


      PinListSet( TC166P_MARGIN_CLOCK, 
              TC166P );


      PinListSet( TC622N_MARGIN_CLOCK, 
              TC622N );


      PinListSet( TC622P_MARGIN_CLOCK, 
              TC622P );


      PinListSet( TCK_MARGIN_CLOCK, 
              TCK );

PinListSet( myLVDSa1V_OUTS,
              C167_15UTP, PAR_6XX_TP, DX6X_OUTP5, DX6X_OUTP4,
              DX6X_OUTP3, DX6X_OUTP2, DX6X_OUTP1, D6XX_OUTP1, D6XX_OUTP9,
              D6XX_OUTP8, D6XX_OUTP7, D6XX_OUTP6, D6XX_OUTP5, D6XX_OUTP4,
              D6XX_OUTP3, D6XX_OUTP2, D6XX_OUT10, D6XX_OUTP0, 
              C167_155_O, PAR_6XX_OU, DX6X_OUTN5, DX6X_OUTN4,
              DX6X_OUTN3, DX6X_OUTN2, DX6X_OUTN1, D6XX_OUTN1, D6XX_OUTN9,
              D6XX_OUTN8, D6XX_OUTN7, D6XX_OUTN6, D6XX_OUTN5, D6XX_OUTN4,
              D6XX_OUTN3, D6XX_OUTN2, D6XX_OUT11, D6XX_OUTN0 );

PinListSet( myCMOSa3V_OUTS,
              THSI_OUTD0, THSI_OUTD1);

PinListSet( my3LVDSa1V_OUTS,
              C6XX_OUTP, C6XX_OUTN);

PinListSet( my2LVDSa1V_OUTS,
              C83_EXTP, C83_EXTN);

      
      PinlistSet(INPUT_CLOCKS, TC622N, TC622P);



#ifdef $Site_SPC_flag then
#if $Site_SPC_flag then
#if ($Device_SPC = 'TRUE') then
Find_Parameter_File(Pin_Maps);
#endif;
#endif;
#endif;

    PinTableClose
;
    lbc_routine; {
 {rev05a Begin replaced with LBC file}
 CASE TIDeviceType OF 
   PB_2: 
      BEGIN
    lbc_routine;
      END;

    FT_1 :
      BEGIN
    LBC_Cap_routine('lbc_cap_file_ft1.docbook');
      END;
  END; {case of TIDeviceType}
 {rev05a End replaced with LBC file}
                }
    for I := 1 to 512 do
      begin
        DL_ARRAY[I] := FALSE;
      end;

    (* Array of differential pin pairs *)
    DiffArray[1,1] := C6XX_OUTP;          DiffArray[1,2] := C6XX_OUTN;
    DiffArray[2,1] := C167_15UTP;         DiffArray[2,2] := C167_155_O;
    DiffArray[3,1] := C1G35_OUTP;         DiffArray[3,2] := C1G35_OUTN;
    DiffArray[4,1] := PAR_6XX_TP;         DiffArray[4,2] := PAR_6XX_OU;
    DiffArray[5,1] := P2G7_OUTP;          DiffArray[5,2] := P2G7_OUTN;
    DiffArray[6,1] := D2G7_OUTP3;         DiffArray[6,2] := D2G7_OUTN3;
    DiffArray[7,1] := D2G7_OUTP2;         DiffArray[7,2] := D2G7_OUTN2;
    DiffArray[8,1] := D2G7_OUTP1;         DiffArray[8,2] := D2G7_OUTN1;
    DiffArray[9,1] := D2G7_OUTP0;         DiffArray[9,2] := D2G7_OUTN0;
    DiffArray[10,1] := DX6X_OUTP5;        DiffArray[10,2] := DX6X_OUTN5;
    DiffArray[11,1] := DX6X_OUTP4;        DiffArray[11,2] := DX6X_OUTN4;
    DiffArray[12,1] := DX6X_OUTP3;        DiffArray[12,2] := DX6X_OUTN3;
    DiffArray[13,1] := DX6X_OUTP2;        DiffArray[13,2] := DX6X_OUTN2;
    DiffArray[14,1] := DX6X_OUTP1;        DiffArray[14,2] := DX6X_OUTN1;
    DiffArray[15,1] := D6XX_OUTP1;        DiffArray[15,2] := D6XX_OUTN1;
    DiffArray[16,1] := D6XX_OUTP9;        DiffArray[16,2] := D6XX_OUTN9;
    DiffArray[17,1] := D6XX_OUTP8;        DiffArray[17,2] := D6XX_OUTN8;
    DiffArray[18,1] := D6XX_OUTP7;        DiffArray[18,2] := D6XX_OUTN7;
    DiffArray[19,1] := D6XX_OUTP6;        DiffArray[19,2] := D6XX_OUTN6;
    DiffArray[20,1] := D6XX_OUTP5;        DiffArray[20,2] := D6XX_OUTN5;
    DiffArray[21,1] := D6XX_OUTP4;        DiffArray[21,2] := D6XX_OUTN4;
    DiffArray[22,1] := D6XX_OUTP3;        DiffArray[22,2] := D6XX_OUTN3;
    DiffArray[23,1] := D6XX_OUTP2;        DiffArray[23,2] := D6XX_OUTN2;
    DiffArray[24,1] := D6XX_OUT10;        DiffArray[24,2] := D6XX_OUT11;
    DiffArray[25,1] := D6XX_OUTP0;        DiffArray[25,2] := D6XX_OUTN0;
    DiffArray[26,1] := C80_EXTP;          DiffArray[26,2] := C80_EXTN;
    DiffArray[27,1] := C83_EXTP;          DiffArray[27,2] := C83_EXTN;

  end;  (* INITIALIZE_PINS *)


procedure SetSupplyVars(select : SupplyLevelType);
(*
***********************************************************************
****                                                               ****
**** Set or modify Supply variables.                               ****
****                                                               ****
***********************************************************************
*)
var
  mult : real;
  temp : treal;

  begin

    VNM1V  := 1.8V;
    VMX1V  := 1.95V;
    VMN1V  := 1.65V;
    FVMN1V := 1.65V-75mV; {rev04e}
    VTNM1V := 1.8V;
    VTMX1V := 1.95V;
{rev_ICCQ} VTTMP1V := 1.3V; {rev03f was 1V}
{rev_ICCQ} VTHOT1V := 1.3V; {rev03f was 1V}
{rev_ICCQ} VTHOT1V_GB := VTHOT1V - 0.2V;
{rev_ICCQ} ICCQ_SHMOO_MAX_V  := 2.0V;
{rev_ICCQ} ICCQ_SHMOO_MIN_V  := 1.0V;
{rev_ICCQ} ICCQ_SHMOO_STEP_V  := 0.1V;
{rev_ICCQ} TRUE_DATA := FALSE;
    VTMN1V := 1.65V;
    VGOI1V := 3.1V;

    VNM3V  := 3.30V;
    VMX3V  := 3.60V;
    VMN3V  := 3.00V;
    VTNM3V := 3.3V;
    VTMX3V := 3.6V;
    VTMN3V := 2.7V;
    VGOI3V := 3.1V;

    VNM1Va := 1.80V;
    VMX1Va := 1.95V;
    VMN1Va := 1.65V;
    VTNM1Va := 1.80V;
    VTMX1Va := 1.95V;
    VTMN1Va := 1.65V;
    VGOI1Va := 1.95V;

    VNM1Vb := 1.80V;
    VMX1Vb := 1.95V;
    VMN1Vb := 1.65V;
    VTNM1Vb := 1.80V;
    VTMX1Vb := 1.95V;
    VTMN1Vb := 1.65V;
    VGOI1Vb := 1.95V;

{rev00a}
    VNMC1V := 1.80V;
    VMXC1V := 1.95V;
    VMNC1V := 1.65V;
    VTNMC1V := 1.80V;
    VTMXC1V := 1.95V;
    VTMNC1V := 1.65V;
    VGOIC1V := 1.95V;
{rev00a
    VNMC1V  := 3.3V;
    VMXC1V  := 3.465V;
    VMNC1V  := 3.135V;
    VTMXC1V := 3.465V;
    VTNMC1V := 3.465V;
    VTMNC1V := 3.135V;
    VGOIC1V := 3.465V;}

  end;  (* SetSupplyVars *)


procedure INITIALIZE_TEST_LIMIT_ARRAYS;
(*
***********************************************************************
****            INITIALIZE TEMP LIMIT ARRAYS                       ****
****                                                               ****
****            TEMP TYPES ARE:                                    ****
****                                                               ****
****              HOT                                              ****
****              ROOM                                             ****
****              TEMP                                             ****
****              COLD                                             ****
****                                                               ****
***********************************************************************
*)

  begin

    (* TIMING GUARDBAND *)

    TGB_ARR[HOT_CHUCKS] := 1nS;
    TGB_ARR[HOT]        := 1nS;
    TGB_ARR[ROOM]       := 1nS;
    TGB_ARR[TEMP]       := 0nS;
    TGB_ARR[COLD]       := 0nS;

    PROPGB_ARR[HOT_CHUCKS] := 0.5nS;
    PROPGB_ARR[HOT]        := 0.5nS;
    PROPGB_ARR[ROOM]       := 0.5nS;
    PROPGB_ARR[TEMP]       := 0nS;
    PROPGB_ARR[COLD]       := 0nS;

    SetSupplyVars(VddNormal);  (* load the supply variables. *)

    (* VMIN *)
    
     VBoxMinV[1]   := 1.35V; {revvmin} {VMINSHIFT} 
     VBoxMaxV[1]   := 2.50V; {revvmin}  {VMINSHIFT}    
     VMinStartV[1] := 0.85V; {revvmin} {VMINSHIFT}
     VMinStopV[1]  := 1.55V; {revvmin}  {VMINSHIFT}
     VMinLRes[1]   := 100mV; {revvmin}
     VMinBRes[1]   := 20mV; {revvmin}
     VMinMaxShift[1] := 100mV; {revvmin}

    (* Shmoo Voltage Range *)

(***** begin add rev04d *******) 
   { Functional }    
    VMINF  := 1.0V;
    VMAXF  := 2.2V;
    VSTEPF := 25mV;

    { IDDQ }
    VMINI  := 1.0V;
    VMAXI  := 2.2V;
    VSTEPI := 50mV;

    { Delay }
    VMIND  := 1.0V;
    VMAXD  := 2.2V;
    VSTEPD := 50mV;

(***** end rev04d ************)

    CP := 50;    (* Cal per centage *)

    (* ICCQ *)
    
    ICCQ_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;    {rev04f Was -12.00UA}
    ICCQ_MAX_ARR[HOT_CHUCKS] :=  377.86UA;     {rev04f Was 151.14UA}
    ICCQ_RANGE_ARR[HOT_CHUCKS] :=  900UA;      {rev04f Was 240.0UA}
{rev10b}NEW_ICCQ_MAX_ARR[HOT_CHUCKS] := 850uA;
{rev10b}NEW_ICCQ_RANGE_ARR[HOT_CHUCKS] :=  1900UA;
{rev10b}DELTA_ICCQ_MAX_ARR[HOT_CHUCKS] := 200uA;

    ICCQ_MIN_ARR[HOT] :=  -250.00UA;           {rev04f Was -12.00UA}
    ICCQ_MAX_ARR[HOT] :=  377.86UA;            {rev04f Was 181.37UA}
    ICCQ_RANGE_ARR[HOT] :=  900UA;             {rev04f Was 240.0UA}
{rev10b}NEW_ICCQ_MAX_ARR[HOT] := 850uA;
{rev10b}NEW_ICCQ_RANGE_ARR[HOT] :=  1900UA;
{rev10b}DELTA_ICCQ_MAX_ARR[HOT] := 200uA;

    ICCQ_MIN_ARR[ROOM] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ_MAX_ARR[ROOM] :=  377.86UA;           {rev04f Was 151.14UA}
    ICCQ_RANGE_ARR[ROOM] :=  900UA;            {rev04f Was 240.0UA}
{rev10b}NEW_ICCQ_MAX_ARR[ROOM] := ICCQ_MAX_ARR[ROOM];
{rev10b}NEW_ICCQ_RANGE_ARR[ROOM] :=  ICCQ_RANGE_ARR[ROOM];
{rev10b}DELTA_ICCQ_MAX_ARR[ROOM] := 200uA;

    ICCQ_MIN_ARR[TEMP] :=  -300uA;             {rev04f Was-190.0UA}
    ICCQ_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ_RANGE_ARR[TEMP] :=  3.800MA;
{rev10b}NEW_ICCQ_MAX_ARR[TEMP] := ICCQ_MAX_ARR[TEMP];
{rev10b}NEW_ICCQ_RANGE_ARR[TEMP] :=  ICCQ_RANGE_ARR[TEMP];
{rev10b}DELTA_ICCQ_MAX_ARR[TEMP] := 200uA;

    ICCQ_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ_MAX_ARR[COLD] :=  5MA;
    ICCQ_RANGE_ARR[COLD] :=  15.50MA;
{rev10b}NEW_ICCQ_MAX_ARR[COLD] := ICCQ_MAX_ARR[COLD];
{rev10b}NEW_ICCQ_RANGE_ARR[COLD] :=  ICCQ_RANGE_ARR[COLD];
{rev10b}DELTA_ICCQ_MAX_ARR[COLD] := 200uA;

    ICCQ10_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ10_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ10_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ10_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ10_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ10_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ10_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ10_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ10_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ10_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ10_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ10_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ10_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ10_MAX_ARR[COLD] :=  5MA;
    ICCQ10_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ11_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ11_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ11_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ11_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ11_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ11_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ11_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ11_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ11_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ11_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ11_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ11_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ11_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ11_MAX_ARR[COLD] :=  5MA;
    ICCQ11_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ12_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ12_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ12_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ12_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ12_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ12_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ12_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ12_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ12_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ12_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ12_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ12_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ12_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ12_MAX_ARR[COLD] :=  5MA;
    ICCQ12_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ13_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ13_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ13_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ13_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ13_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ13_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ13_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ13_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ13_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ13_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ13_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ13_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ13_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ13_MAX_ARR[COLD] :=  5MA;
    ICCQ13_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ14_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ14_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ14_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ14_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ14_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ14_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ14_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ14_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ14_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ14_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ14_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ14_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ14_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ14_MAX_ARR[COLD] :=  5MA;
    ICCQ14_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ15_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ15_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ15_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ15_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ15_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ15_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ15_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ15_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ15_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ15_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ15_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ15_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ15_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ15_MAX_ARR[COLD] :=  5MA;
    ICCQ15_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ16_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ16_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ16_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ16_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ16_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ16_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ16_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ16_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ16_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ16_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ16_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ16_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ16_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ16_MAX_ARR[COLD] :=  5MA;
    ICCQ16_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ17_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ17_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ17_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ17_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ17_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ17_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ17_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ17_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ17_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ17_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ17_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ17_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ17_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ17_MAX_ARR[COLD] :=  5MA;
    ICCQ17_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ18_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ18_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ18_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ18_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ18_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ18_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ18_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ18_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ18_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ18_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ18_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ18_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ18_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ18_MAX_ARR[COLD] :=  5MA;
    ICCQ18_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ19_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ19_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ19_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ19_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ19_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ19_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ19_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ19_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ19_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ19_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ19_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ19_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ19_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ19_MAX_ARR[COLD] :=  5MA;
    ICCQ19_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ20_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ20_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ20_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ20_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ20_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ20_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ20_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ20_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ20_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ20_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ20_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ20_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ20_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ20_MAX_ARR[COLD] :=  5MA;
    ICCQ20_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ21_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ21_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ21_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ21_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ21_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ21_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ21_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ21_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ21_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ21_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ21_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ21_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ21_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ21_MAX_ARR[COLD] :=  5MA;
    ICCQ21_RANGE_ARR[COLD] :=  15.50MA;

    ICCQ22_MIN_ARR[HOT_CHUCKS] :=  -250.00UA;   {rev04f Was -12.00UA}
    ICCQ22_MAX_ARR[HOT_CHUCKS] :=  377.86UA;    {rev04f Was 151.14UA}
    ICCQ22_RANGE_ARR[HOT_CHUCKS] :=  900UA;     {rev04f Was 240.0UA}

    ICCQ22_MIN_ARR[HOT] :=  -250.00UA;          {rev04f Was -12.00UA}
    ICCQ22_MAX_ARR[HOT] :=  377.86UA;           {rev04f Was 181.37UA}
    ICCQ22_RANGE_ARR[HOT] :=  900UA;            {rev04f Was 240.0UA}

    ICCQ22_MIN_ARR[ROOM] :=  -250.00UA;         {rev04f Was -12.00UA}
    ICCQ22_MAX_ARR[ROOM] :=  377.86UA;          {rev04f Was 151.14UA}
    ICCQ22_RANGE_ARR[ROOM] :=  900UA;           {rev04f Was 240.0UA}

    ICCQ22_MIN_ARR[TEMP] :=  -300uA;            {rev04f Was-190.0UA}
    ICCQ22_MAX_ARR[TEMP] :=  1511.425UA;
    ICCQ22_RANGE_ARR[TEMP] :=  3.800MA;

    ICCQ22_MIN_ARR[COLD] :=  -775.0UA;
    ICCQ22_MAX_ARR[COLD] :=  5MA;
    ICCQ22_RANGE_ARR[COLD] :=  15.50MA;

    (*  VIHVIL DRIVEHI, DRIVELO VARS  *)

    VIHCMOSa3V_VMAX_ARR[HOT_CHUCKS] := VMX3V*0.7;
    VILCMOSa3V_VMAX_ARR[HOT_CHUCKS] := VMX3V*0.2;
    VIHCMOSa3V_VMAX_ARR[HOT] := VMX3V*0.7;
    VILCMOSa3V_VMAX_ARR[HOT] := VMX3V*0.2;
    VIHCMOSa3V_VMAX_ARR[ROOM] := VMX3V*0.7;
    VILCMOSa3V_VMAX_ARR[ROOM] := VMX3V*0.2;
    VIHCMOSa3V_VMAX_ARR[TEMP] := VMX3V*0.7;
    VILCMOSa3V_VMAX_ARR[TEMP] := VMX3V*0.2;
    VIHCMOSa3V_VMAX_ARR[COLD] := VMX3V*0.7;
    VILCMOSa3V_VMAX_ARR[COLD] := VMX3V*0.2;

    VIHCMOSa3V_VMIN_ARR[HOT_CHUCKS] := VMN3V*0.7;
    VILCMOSa3V_VMIN_ARR[HOT_CHUCKS] := VMN3V*0.2;
    VIHCMOSa3V_VMIN_ARR[HOT] := VMN3V*0.7;
    VILCMOSa3V_VMIN_ARR[HOT] := VMN3V*0.2;
    VIHCMOSa3V_VMIN_ARR[ROOM] := VMN3V*0.7;
    VILCMOSa3V_VMIN_ARR[ROOM] := VMN3V*0.2;
    VIHCMOSa3V_VMIN_ARR[TEMP] := VMN3V*0.7;
    VILCMOSa3V_VMIN_ARR[TEMP] := VMN3V*0.2;
    VIHCMOSa3V_VMIN_ARR[COLD] := VMN3V*0.7;
    VILCMOSa3V_VMIN_ARR[COLD] := VMN3V*0.2;

    VIHTESTINA1V_VMAX_ARR[HOT_CHUCKS] := 2.0V;
    VILTESTINA1V_VMAX_ARR[HOT_CHUCKS] := 0.8V;
    VIHTESTINA1V_VMAX_ARR[HOT] := 2.0V;
    VILTESTINA1V_VMAX_ARR[HOT] := 0.8V;
    VIHTESTINA1V_VMAX_ARR[ROOM] := 2.0V;
    VILTESTINA1V_VMAX_ARR[ROOM] := 0.8V;
    VIHTESTINA1V_VMAX_ARR[TEMP] := 2.0V;
    VILTESTINA1V_VMAX_ARR[TEMP] := 0.8V;
    VIHTESTINA1V_VMAX_ARR[COLD] := 2.0V;
    VILTESTINA1V_VMAX_ARR[COLD] := 0.8V;

    VIHTESTINA1V_VMIN_ARR[HOT_CHUCKS] := 2.0V;
    VILTESTINA1V_VMIN_ARR[HOT_CHUCKS] := 0.8V;
    VIHTESTINA1V_VMIN_ARR[HOT] := 2.0V;
    VILTESTINA1V_VMIN_ARR[HOT] := 0.8V;
    VIHTESTINA1V_VMIN_ARR[ROOM] := 2.0V;
    VILTESTINA1V_VMIN_ARR[ROOM] := 0.8V;
    VIHTESTINA1V_VMIN_ARR[TEMP] := 2.0V;
    VILTESTINA1V_VMIN_ARR[TEMP] := 0.8V;
    VIHTESTINA1V_VMIN_ARR[COLD] := 2.0V;
    VILTESTINA1V_VMIN_ARR[COLD] := 0.8V;


    (* IIH/IIL *)

    IIH_MIN_ARR[HOT_CHUCKS] :=  -35NA;
    IIH_MAX_ARR[HOT_CHUCKS] :=  70NA;

    IIH_MIN_ARR[HOT] :=  -35NA;
    IIH_MAX_ARR[HOT] :=  70NA;

    IIH_MIN_ARR[ROOM] :=  -35NA;
    IIH_MAX_ARR[ROOM] :=  70NA;

    IIH_MIN_ARR[TEMP] :=  -500NA;
    IIH_MAX_ARR[TEMP] :=  1UA;

    IIH_MIN_ARR[COLD] :=  -100UA;
    IIH_MAX_ARR[COLD] :=  1MA;


    IIL_MIN_ARR[HOT_CHUCKS] :=  -70NA;
    IIL_MAX_ARR[HOT_CHUCKS] :=  35NA;

    IIL_MIN_ARR[HOT] :=  -70NA;
    IIL_MAX_ARR[HOT] :=  35NA;

    IIL_MIN_ARR[ROOM] :=  -70NA;
    IIL_MAX_ARR[ROOM] :=  35NA;

    IIL_MIN_ARR[TEMP] :=  -1UA;
    IIL_MAX_ARR[TEMP] :=  500NA;

    IIL_MIN_ARR[COLD] :=  -1MA;
    IIL_MAX_ARR[COLD] :=  100UA;

    IIH_SINK_ARR[HOT_CHUCKS] :=   -230.0NA;
    IIH_SOURCE_ARR[HOT_CHUCKS] :=   230.0NA;

    IIH_SINK_ARR[HOT] :=   -230.0NA;
    IIH_SOURCE_ARR[HOT] :=   230.0NA;

    IIH_SINK_ARR[ROOM] :=   -230.0NA;
    IIH_SOURCE_ARR[ROOM] :=   230.0NA;

    IIH_SINK_ARR[TEMP] :=   -3.700UA;
    IIH_SOURCE_ARR[TEMP] :=   3.700UA;

    IIH_SINK_ARR[COLD] :=   -3.800MA;
    IIH_SOURCE_ARR[COLD] :=   3.800MA;


    IIL_SINK_ARR[HOT_CHUCKS] :=   -230.0NA;
    IIL_SOURCE_ARR[HOT_CHUCKS] :=   230.0NA;

    IIL_SINK_ARR[HOT] :=   -230.0NA;
    IIL_SOURCE_ARR[HOT] :=   230.0NA;

    IIL_SINK_ARR[ROOM] :=   -230.0NA;
    IIL_SOURCE_ARR[ROOM] :=   230.0NA;

    IIL_SINK_ARR[TEMP] :=   -3.700UA;
    IIL_SOURCE_ARR[TEMP] :=   3.700UA;

    IIL_SINK_ARR[COLD] :=   -3.800MA;
    IIL_SOURCE_ARR[COLD] :=   3.800MA;


    (* IILP (PULLUPS) *)


    (* Edit to FALSE if pullups are not enabled. *)
    IILP1_ENABLED := TRUE;

    if (IILP1_ENABLED) then
    begin   (* Limits for enabled pullups.  *)

    (* Limits for pullup cell PS020 *)

    IILP1_MIN_ARR[HOT_CHUCKS] :=  -43.8UA;
    IILP1_MAX_ARR[HOT_CHUCKS] :=  -6.9UA;

    IILP1_MIN_ARR[HOT] :=  -43.8UA;
    IILP1_MAX_ARR[HOT] :=  -6.9UA;

    IILP1_MIN_ARR[ROOM] :=  -55.8UA;
    IILP1_MAX_ARR[ROOM] :=  -7.8UA;

    IILP1_MIN_ARR[TEMP] :=  -60.0UA;
    IILP1_MAX_ARR[TEMP] :=  -6.0UA;

    IILP1_MIN_ARR[COLD] :=  -1MA;
    IILP1_MAX_ARR[COLD] :=  1MA;

    IILP1_SINK_ARR[HOT_CHUCKS] :=  -60.00UA;
    IILP1_SOURCE_ARR[HOT_CHUCKS] :=  60.00UA;

    IILP1_SINK_ARR[HOT] :=  -60.00UA;
    IILP1_SOURCE_ARR[HOT] :=  60.00UA;

    IILP1_SINK_ARR[ROOM] :=  -60.00UA;
    IILP1_SOURCE_ARR[ROOM] :=  60.00UA;

    IILP1_SINK_ARR[TEMP] :=  -240.0UA;
    IILP1_SOURCE_ARR[TEMP] :=  240.0UA;

    IILP1_SINK_ARR[COLD] :=  -3.800MA;
    IILP1_SOURCE_ARR[COLD] :=  3.800MA;

    end

    else

    begin  (* Limits for disabled pullups.  *)
    IILP1_MIN_ARR[HOT_CHUCKS] :=  -350.0NA;
    IILP1_MAX_ARR[HOT_CHUCKS] :=  175.0NA;

    IILP1_MIN_ARR[HOT] :=  -350.0NA;
    IILP1_MAX_ARR[HOT] :=  175.0NA;

    IILP1_MIN_ARR[ROOM] :=  -350.0NA;
    IILP1_MAX_ARR[ROOM] :=  175.0NA;

    IILP1_MIN_ARR[TEMP] :=  -10.0UA;
    IILP1_MAX_ARR[TEMP] :=  5.0UA;

    IILP1_MIN_ARR[COLD] :=  -1.0MA;
    IILP1_MAX_ARR[COLD] :=  100.0UA;

    IILP1_SINK_ARR[HOT_CHUCKS] :=   -950.0NA;
    IILP1_SOURCE_ARR[HOT_CHUCKS] :=   950.0NA;

    IILP1_SINK_ARR[HOT] :=   -950.0NA;
    IILP1_SOURCE_ARR[HOT] :=   950.0NA;

    IILP1_SINK_ARR[ROOM] :=   -950.0NA;
    IILP1_SOURCE_ARR[ROOM] :=   950.0NA;

    IILP1_SINK_ARR[TEMP] :=   -15.00UA;
    IILP1_SOURCE_ARR[TEMP] :=   15.00UA;

    IILP1_SINK_ARR[COLD] :=   -3.800MA;
    IILP1_SOURCE_ARR[COLD] :=   3.800MA;

    end;


    IIHLVDSa1VD_MIN_ARR[HOT_CHUCKS] := -24.900uA;
    IIHLVDSa1VD_MAX_ARR[HOT_CHUCKS] := -3.300uA;
    IIHLVDSa1VD_FORCEV_ARR[HOT_CHUCKS] := 1.5V;
    IIHLVDSa1VD_SINK_ARR[HOT_CHUCKS] := -60.00UA;
    IIHLVDSa1VD_SOURCE_ARR[HOT_CHUCKS] := 60.00UA;
    IILLVDSa1VD_MIN_ARR[HOT_CHUCKS] := -24.900uA;
    IILLVDSa1VD_MAX_ARR[HOT_CHUCKS] := -3.300uA;
    IILLVDSa1VD_FORCEV_ARR[HOT_CHUCKS] := 0.9V;
    IILLVDSa1VD_SINK_ARR[HOT_CHUCKS] := -60.00UA;
    IILLVDSa1VD_SOURCE_ARR[HOT_CHUCKS] := 60.00UA;

    IIHLVDSa1VD_MIN_ARR[HOT] := -27.900uA;
    IIHLVDSa1VD_MAX_ARR[HOT] := -3.120uA;
    IIHLVDSa1VD_FORCEV_ARR[HOT] := 1.5V;
    IIHLVDSa1VD_SINK_ARR[HOT] := -60.00UA;
    IIHLVDSa1VD_SOURCE_ARR[HOT] := 60.00UA;
    IILLVDSa1VD_MIN_ARR[HOT] := -27.900uA;
    IILLVDSa1VD_MAX_ARR[HOT] := -3.120uA;
    IILLVDSa1VD_FORCEV_ARR[HOT] := 0.9V;
    IILLVDSa1VD_SINK_ARR[HOT] := -60.00UA;
    IILLVDSa1VD_SOURCE_ARR[HOT] := 60.00UA;

    IIHLVDSa1VD_MIN_ARR[ROOM] := -27.900uA;
    IIHLVDSa1VD_MAX_ARR[ROOM] := -3.120uA;
    IIHLVDSa1VD_FORCEV_ARR[ROOM] := 1.5V;
    IIHLVDSa1VD_SINK_ARR[ROOM] := -60.00UA;
    IIHLVDSa1VD_SOURCE_ARR[ROOM] := 60.00UA;
    IILLVDSa1VD_MIN_ARR[ROOM] := -27.900uA;
    IILLVDSa1VD_MAX_ARR[ROOM] := -3.120uA;
    IILLVDSa1VD_FORCEV_ARR[ROOM] := 0.9V;
    IILLVDSa1VD_SINK_ARR[ROOM] := -60.00UA;
    IILLVDSa1VD_SOURCE_ARR[ROOM] := 60.00UA;

    IIHLVDSa1VD_MIN_ARR[TEMP] := -30.000uA;
    IIHLVDSa1VD_MAX_ARR[TEMP] := -3.000uA;
    IIHLVDSa1VD_FORCEV_ARR[TEMP] := 1.5V;
    IIHLVDSa1VD_SINK_ARR[TEMP] := -60.00UA;
    IIHLVDSa1VD_SOURCE_ARR[TEMP] := 60.00UA;
    IILLVDSa1VD_MIN_ARR[TEMP] := -30.000uA;
    IILLVDSa1VD_MAX_ARR[TEMP] := -3.000uA;
    IILLVDSa1VD_FORCEV_ARR[TEMP] := 0.9V;
    IILLVDSa1VD_SINK_ARR[TEMP] := -60.00UA;
    IILLVDSa1VD_SOURCE_ARR[TEMP] := 60.00UA;

    IIHLVDSa1VD_MIN_ARR[COLD] := -1.0mA;
    IIHLVDSa1VD_MAX_ARR[COLD] := 1.0mA;
    IIHLVDSa1VD_FORCEV_ARR[COLD] := 1.5V;
    IIHLVDSa1VD_SINK_ARR[COLD] := -3.800MA;
    IIHLVDSa1VD_SOURCE_ARR[COLD] := 3.800MA;
    IILLVDSa1VD_MIN_ARR[COLD] := -1.0mA;
    IILLVDSa1VD_MAX_ARR[COLD] := 1.0mA;
    IILLVDSa1VD_FORCEV_ARR[COLD] := 0.9V;
    IILLVDSa1VD_SINK_ARR[COLD] := -3.800MA;
    IILLVDSa1VD_SOURCE_ARR[COLD] := 3.800MA;

    IIHCML1VD_MIN_ARR[HOT_CHUCKS] := -20mA;
    IIHCML1VD_MAX_ARR[HOT_CHUCKS] := 20mA;
    IIHCML1VD_FORCEV_ARR[HOT_CHUCKS] := VTMXC1V-0.1V;
    IIHCML1VD_SINK_ARR[HOT_CHUCKS] := -62.00MA;
    IIHCML1VD_SOURCE_ARR[HOT_CHUCKS] := 62.00MA;
    IILCML1VD_MIN_ARR[HOT_CHUCKS] := -12mA;
    IILCML1VD_MAX_ARR[HOT_CHUCKS] := 12mA;
    IILCML1VD_FORCEV_ARR[HOT_CHUCKS] := VTMXC1V-0.4V;
    IILCML1VD_SINK_ARR[HOT_CHUCKS] := -15.50MA;
    IILCML1VD_SOURCE_ARR[HOT_CHUCKS] := 15.50MA;

    IIHCML1VD_MIN_ARR[HOT] := -20mA;
    IIHCML1VD_MAX_ARR[HOT] := 20mA;
    IIHCML1VD_FORCEV_ARR[HOT] := VTMXC1V-0.1V;
    IIHCML1VD_SINK_ARR[HOT] := -62.00MA;
    IIHCML1VD_SOURCE_ARR[HOT] := 62.00MA;
    IILCML1VD_MIN_ARR[HOT] := -12mA;
    IILCML1VD_MAX_ARR[HOT] := 12mA;
    IILCML1VD_FORCEV_ARR[HOT] := VTMXC1V-0.4V;
    IILCML1VD_SINK_ARR[HOT] := -15.50MA;
    IILCML1VD_SOURCE_ARR[HOT] := 15.50MA;

    IIHCML1VD_MIN_ARR[ROOM] := -20mA;
    IIHCML1VD_MAX_ARR[ROOM] := 20mA;
    IIHCML1VD_FORCEV_ARR[ROOM] := VTMXC1V-0.1V;
    IIHCML1VD_SINK_ARR[ROOM] := -62.00MA;
    IIHCML1VD_SOURCE_ARR[ROOM] := 62.00MA;
    IILCML1VD_MIN_ARR[ROOM] := -12mA;
    IILCML1VD_MAX_ARR[ROOM] := 12mA;
    IILCML1VD_FORCEV_ARR[ROOM] := VTMXC1V-0.4V;
    IILCML1VD_SINK_ARR[ROOM] := -15.50MA;
    IILCML1VD_SOURCE_ARR[ROOM] := 15.50MA;

    IIHCML1VD_MIN_ARR[TEMP] := -20mA;
    IIHCML1VD_MAX_ARR[TEMP] := 20mA;
    IIHCML1VD_FORCEV_ARR[TEMP] := VTMXC1V-0.1V;
    IIHCML1VD_SINK_ARR[TEMP] := -62.00MA;
    IIHCML1VD_SOURCE_ARR[TEMP] := 62.00MA;
    IILCML1VD_MIN_ARR[TEMP] := -12mA;
    IILCML1VD_MAX_ARR[TEMP] := 12mA;
    IILCML1VD_FORCEV_ARR[TEMP] := VTMXC1V-0.4V;
    IILCML1VD_SINK_ARR[TEMP] := -15.50MA;
    IILCML1VD_SOURCE_ARR[TEMP] := 15.50MA;

    IIHCML1VD_MIN_ARR[COLD] := -20mA;
    IIHCML1VD_MAX_ARR[COLD] := 20mA;
    IIHCML1VD_FORCEV_ARR[COLD] := VTMXC1V-0.1V;
    IIHCML1VD_SINK_ARR[COLD] := -62.00MA;
    IIHCML1VD_SOURCE_ARR[COLD] := 62.00MA;
    IILCML1VD_MIN_ARR[COLD] := -12mA;
    IILCML1VD_MAX_ARR[COLD] := 12mA;
    IILCML1VD_FORCEV_ARR[COLD] := VTMXC1V-0.4V;
    IILCML1VD_SINK_ARR[COLD] := -15.50MA;
    IILCML1VD_SOURCE_ARR[COLD] := 15.50MA;

    IIHCMOSa3V_MIN_ARR[HOT_CHUCKS] := -35.00nA;
    IIHCMOSa3V_MAX_ARR[HOT_CHUCKS] := 70.00nA;
    IIHCMOSa3V_FORCEV_ARR[HOT_CHUCKS] := VTMX3V;
    IIHCMOSa3V_SINK_ARR[HOT_CHUCKS] := -230.0NA;
    IIHCMOSa3V_SOURCE_ARR[HOT_CHUCKS] := 230.0NA;
    IILCMOSa3V_MIN_ARR[HOT_CHUCKS] := -70.00nA;
    IILCMOSa3V_MAX_ARR[HOT_CHUCKS] := 35.00nA;
    IILCMOSa3V_FORCEV_ARR[HOT_CHUCKS] := 0.0V;
    IILCMOSa3V_SINK_ARR[HOT_CHUCKS] := -230.0NA;
    IILCMOSa3V_SOURCE_ARR[HOT_CHUCKS] := 230.0NA;

    IIHCMOSa3V_MIN_ARR[HOT] := -35.00nA;
    IIHCMOSa3V_MAX_ARR[HOT] := 70.00nA;
    IIHCMOSa3V_FORCEV_ARR[HOT] := VTMX3V;
    IIHCMOSa3V_SINK_ARR[HOT] := -230.0NA;
    IIHCMOSa3V_SOURCE_ARR[HOT] := 230.0NA;
    IILCMOSa3V_MIN_ARR[HOT] := -70.00nA;
    IILCMOSa3V_MAX_ARR[HOT] := 35.00nA;
    IILCMOSa3V_FORCEV_ARR[HOT] := 0.0V;
    IILCMOSa3V_SINK_ARR[HOT] := -230.0NA;
    IILCMOSa3V_SOURCE_ARR[HOT] := 230.0NA;

    IIHCMOSa3V_MIN_ARR[ROOM] := -35.00nA;
    IIHCMOSa3V_MAX_ARR[ROOM] := 70.00nA;
    IIHCMOSa3V_FORCEV_ARR[ROOM] := VTMX3V;
    IIHCMOSa3V_SINK_ARR[ROOM] := -230.0NA;
    IIHCMOSa3V_SOURCE_ARR[ROOM] := 230.0NA;
    IILCMOSa3V_MIN_ARR[ROOM] := -70.00nA;
    IILCMOSa3V_MAX_ARR[ROOM] := 35.00nA;
    IILCMOSa3V_FORCEV_ARR[ROOM] := 0.0V;
    IILCMOSa3V_SINK_ARR[ROOM] := -230.0NA;
    IILCMOSa3V_SOURCE_ARR[ROOM] := 230.0NA;

    IIHCMOSa3V_MIN_ARR[TEMP] := -500.00nA;
    IIHCMOSa3V_MAX_ARR[TEMP] := 1.00uA;
    IIHCMOSa3V_FORCEV_ARR[TEMP] := VTMX3V;
    IIHCMOSa3V_SINK_ARR[TEMP] := -3.700UA;
    IIHCMOSa3V_SOURCE_ARR[TEMP] := 3.700UA;
    IILCMOSa3V_MIN_ARR[TEMP] := -1.00uA;
    IILCMOSa3V_MAX_ARR[TEMP] := 500.00nA;
    IILCMOSa3V_FORCEV_ARR[TEMP] := 0.0V;
    IILCMOSa3V_SINK_ARR[TEMP] := -3.700UA;
    IILCMOSa3V_SOURCE_ARR[TEMP] := 3.700UA;

    IIHCMOSa3V_MIN_ARR[COLD] := -100.0uA;
    IIHCMOSa3V_MAX_ARR[COLD] := 1.0mA;
    IIHCMOSa3V_FORCEV_ARR[COLD] := VTMX3V;
    IIHCMOSa3V_SINK_ARR[COLD] := -3.800MA;
    IIHCMOSa3V_SOURCE_ARR[COLD] := 3.800MA;
    IILCMOSa3V_MIN_ARR[COLD] := -1.0mA;
    IILCMOSa3V_MAX_ARR[COLD] := 100.0uA;
    IILCMOSa3V_FORCEV_ARR[COLD] := 0.0V;
    IILCMOSa3V_SINK_ARR[COLD] := -3.800MA;
    IILCMOSa3V_SOURCE_ARR[COLD] := 3.800MA;

    IIHTESTINA1V_MIN_ARR[HOT_CHUCKS] := -35NA;
    IIHTESTINA1V_MAX_ARR[HOT_CHUCKS] := 70NA;
    IIHTESTINA1V_FORCEV_ARR[HOT_CHUCKS] := 1.95V;
    IIHTESTINA1V_SINK_ARR[HOT_CHUCKS] := -230.0NA;
    IIHTESTINA1V_SOURCE_ARR[HOT_CHUCKS] := 230.0NA;
    IILTESTINA1V_MIN_ARR[HOT_CHUCKS] := -70NA;
    IILTESTINA1V_MAX_ARR[HOT_CHUCKS] := 35NA;
    IILTESTINA1V_FORCEV_ARR[HOT_CHUCKS] := 0.0V;
    IILTESTINA1V_SINK_ARR[HOT_CHUCKS] := -230.0NA;
    IILTESTINA1V_SOURCE_ARR[HOT_CHUCKS] := 230.0NA;

    IIHTESTINA1V_MIN_ARR[HOT] := -35NA;
    IIHTESTINA1V_MAX_ARR[HOT] := 70NA;
    IIHTESTINA1V_FORCEV_ARR[HOT] := 1.95V;
    IIHTESTINA1V_SINK_ARR[HOT] := -230.0NA;
    IIHTESTINA1V_SOURCE_ARR[HOT] := 230.0NA;
    IILTESTINA1V_MIN_ARR[HOT] := -70NA;
    IILTESTINA1V_MAX_ARR[HOT] := 35NA;
    IILTESTINA1V_FORCEV_ARR[HOT] := 0.0V;
    IILTESTINA1V_SINK_ARR[HOT] := -230.0NA;
    IILTESTINA1V_SOURCE_ARR[HOT] := 230.0NA;

    IIHTESTINA1V_MIN_ARR[ROOM] := -35NA;
    IIHTESTINA1V_MAX_ARR[ROOM] := 70NA;
    IIHTESTINA1V_FORCEV_ARR[ROOM] := 1.95V;
    IIHTESTINA1V_SINK_ARR[ROOM] := -230.0NA;
    IIHTESTINA1V_SOURCE_ARR[ROOM] := 230.0NA;
    IILTESTINA1V_MIN_ARR[ROOM] := -70NA;
    IILTESTINA1V_MAX_ARR[ROOM] := 35NA;
    IILTESTINA1V_FORCEV_ARR[ROOM] := 0.0V;
    IILTESTINA1V_SINK_ARR[ROOM] := -230.0NA;
    IILTESTINA1V_SOURCE_ARR[ROOM] := 230.0NA;

    IIHTESTINA1V_MIN_ARR[TEMP] := -500NA;
    IIHTESTINA1V_MAX_ARR[TEMP] := 1UA;
    IIHTESTINA1V_FORCEV_ARR[TEMP] := 1.95V;
    IIHTESTINA1V_SINK_ARR[TEMP] := -3.700UA;
    IIHTESTINA1V_SOURCE_ARR[TEMP] := 3.700UA;
    IILTESTINA1V_MIN_ARR[TEMP] := -1UA;
    IILTESTINA1V_MAX_ARR[TEMP] := 500NA;
    IILTESTINA1V_FORCEV_ARR[TEMP] := 0.0V;
    IILTESTINA1V_SINK_ARR[TEMP] := -3.700UA;
    IILTESTINA1V_SOURCE_ARR[TEMP] := 3.700UA;

    IIHTESTINA1V_MIN_ARR[COLD] := -100UA;
    IIHTESTINA1V_MAX_ARR[COLD] := 1MA;
    IIHTESTINA1V_FORCEV_ARR[COLD] := 1.95V;
    IIHTESTINA1V_SINK_ARR[COLD] := -3.800MA;
    IIHTESTINA1V_SOURCE_ARR[COLD] := 3.800MA;
    IILTESTINA1V_MIN_ARR[COLD] := -1MA;
    IILTESTINA1V_MAX_ARR[COLD] := 100UA;
    IILTESTINA1V_FORCEV_ARR[COLD] := 0.0V;
    IILTESTINA1V_SINK_ARR[COLD] := -3.800MA;
    IILTESTINA1V_SOURCE_ARR[COLD] := 3.800MA;

    (* VOUT *)

    VOHL_MIN_ARR[HOT_CHUCKS] :=  VTMN1V-0.580V;

    VOHL_MIN_ARR[HOT] :=  VTMN1V-0.590V;

    VOHL_MIN_ARR[ROOM] :=  VTMN1V-0.585V;

    VOHL_MIN_ARR[TEMP] :=  VTMN1V-0.600V;

    VOHL_MIN_ARR[COLD] :=  VTMN1V-0.600V;

    VOLL_MAX_ARR[HOT_CHUCKS] :=  0.480V;

    VOLL_MAX_ARR[HOT] :=  0.490V;

    VOLL_MAX_ARR[ROOM] :=  0.485V;

    VOLL_MAX_ARR[TEMP] :=  0.500V;

    VOLL_MAX_ARR[COLD] :=  0.500V;

    VOHL3V_MIN_ARR[HOT_CHUCKS] :=  VTMN3V-0.580V;

    VOHL3V_MIN_ARR[HOT] :=  VTMN3V-0.590V;

    VOHL3V_MIN_ARR[ROOM] :=  VTMN3V-0.585V;

    VOHL3V_MIN_ARR[TEMP] :=  VTMN3V-0.600V;

    VOHL3V_MIN_ARR[COLD] :=  VTMN3V-0.600V;

    VOLL3V_MAX_ARR[HOT_CHUCKS] :=  0.480V;

    VOLL3V_MAX_ARR[HOT] :=  0.490V;

    VOLL3V_MAX_ARR[ROOM] :=  0.485V;

    VOLL3V_MAX_ARR[TEMP] :=  0.500V;

    VOLL3V_MAX_ARR[COLD] :=  0.500V;


    VIDLVDSa1V_ARR[HOT_CHUCKS] := 200mV;
    VIDLVDSa1V_ARR[HOT] := 200mV;
    VIDLVDSa1V_ARR[ROOM] := 200mV;
    VIDLVDSa1V_ARR[TEMP] := 250mV;
    VIDLVDSa1V_ARR[COLD] := 250mV;

    VIDCML1V_ARR[HOT_CHUCKS] := 90mV;
    VIDCML1V_ARR[HOT] := 90mV;
    VIDCML1V_ARR[ROOM] := 90mV;
    VIDCML1V_ARR[TEMP] := 100mV;
    VIDCML1V_ARR[COLD] := 100mV;

    VOHLVDSa1V_MIN_ARR[HOT_CHUCKS] := 1.35V; {rev03i Was 1.390V;}
    VOHLVDSa1V_MAX_ARR[HOT_CHUCKS] := 1.475V; {rev03i Was 1.485V;}
    VOHLVDSa1V_FORCEV_ARR[HOT_CHUCKS] := 1.2V;
    VOLLVDSa1V_MIN_ARR[HOT_CHUCKS] := 0.85V; {rev03i Was 0.915V;}
    VOLLVDSa1V_MAX_ARR[HOT_CHUCKS] := 1.05V; {rev03i Was 1.010V;}
    VOLLVDSa1V_FORCEV_ARR[HOT_CHUCKS] := 1.2V;

    VOHLVDSa1V_MIN_ARR[HOT] := 1.345V; {rev03i Was 1.385V;} 
    VOHLVDSa1V_MAX_ARR[HOT] := 1.48V;  {rev03i Was 1.490V;}
    VOHLVDSa1V_FORCEV_ARR[HOT] := 1.2V;
    VOLLVDSa1V_MIN_ARR[HOT] := 0.85V; {rev03i Was 0.910V;}
    VOLLVDSa1V_MAX_ARR[HOT] := 1.055V; {rev03i Was 1.015V;}
    VOLLVDSa1V_FORCEV_ARR[HOT] := 1.2V;

    VOHLVDSa1V_MIN_ARR[ROOM] := 1.35V; {rev03i Was 1.380V;}
    VOHLVDSa1V_MAX_ARR[ROOM] := 1.48V;  {rev03i Was 1.495V;}
    VOHLVDSa1V_FORCEV_ARR[ROOM] := 1.2V;
    VOLLVDSa1V_MIN_ARR[ROOM] := 0.85V; {rev03i Was 0.905V;}
    VOLLVDSa1V_MAX_ARR[ROOM] := 1.05V; {rev03i Was 1.020V;}
    VOLLVDSa1V_FORCEV_ARR[ROOM] := 1.2V;

    VOHLVDSa1V_MIN_ARR[TEMP] := 1.325V; {rev03i Was 1.375V;}
    VOHLVDSa1V_MAX_ARR[TEMP] := 1.500V;
    VOHLVDSa1V_FORCEV_ARR[TEMP] := 1.2V;
    VOLLVDSa1V_MIN_ARR[TEMP] := 0.85V; {rev03i Was 0.900V;}
    VOLLVDSa1V_MAX_ARR[TEMP] := 1.075V; {rev03i Was 1.025V;}
    VOLLVDSa1V_FORCEV_ARR[TEMP] := 1.2V;

    VOHLVDSa1V_MIN_ARR[COLD] := 1.325V; {rev08a was 1.375V}
    VOHLVDSa1V_MAX_ARR[COLD] := 1.500V;
    VOHLVDSa1V_FORCEV_ARR[COLD] := 1.2V;
    VOLLVDSa1V_MIN_ARR[COLD] := 0.850V;{rev08a was 0.900V}
    VOLLVDSa1V_MAX_ARR[COLD] := 1.075V;{rev08a was 1.025V}
    VOLLVDSa1V_FORCEV_ARR[COLD] := 1.2V;

    VODLVDSa1V_MIN_ARR[HOT_CHUCKS] := 270mV;{rev08a was 379mV}
    VODLVDSa1V_MAX_ARR[HOT_CHUCKS] := 570mV;{rev08a was 580mV}

    VODLVDSa1V_MIN_ARR[HOT] := 270mV;{rev08a was 374mV}
    VODLVDSa1V_MAX_ARR[HOT] := 575mV;{rev08a was 585mV}

    VODLVDSa1V_MIN_ARR[ROOM] := 270mV;{rev08a was 369mV}
    VODLVDSa1V_MAX_ARR[ROOM] := 580mV;{rev08a was 590mV}

    VODLVDSa1V_MIN_ARR[TEMP] := 250mV;{rev08a was 359mV}
    VODLVDSa1V_MAX_ARR[TEMP] := 600mV;

    VODLVDSa1V_MIN_ARR[COLD] := 250mV;{rev08a was 359mV}
    VODLVDSa1V_MAX_ARR[COLD] := 600mV;

    VOHCML1V_MIN_ARR[HOT_CHUCKS] := VTMNC1V-0.25V;
    VOHCML1V_MAX_ARR[HOT_CHUCKS] := VTMNC1V;
    VOHCML1V_FORCEV_ARR[HOT_CHUCKS] := VTMNC1V;
    VOLCML1V_MIN_ARR[HOT_CHUCKS] := VTMNC1V-0.48V;
    VOLCML1V_MAX_ARR[HOT_CHUCKS] := VTMNC1V-0.32V;
    VOLCML1V_FORCEV_ARR[HOT_CHUCKS] := VTMNC1V;

    VOHCML1V_MIN_ARR[HOT] := VTMNC1V-0.25V;
    VOHCML1V_MAX_ARR[HOT] := VTMNC1V;
    VOHCML1V_FORCEV_ARR[HOT] := VTMNC1V;
    VOLCML1V_MIN_ARR[HOT] := VTMNC1V-0.48V;
    VOLCML1V_MAX_ARR[HOT] := VTMNC1V-0.32V;
    VOLCML1V_FORCEV_ARR[HOT] := VTMNC1V;

    VOHCML1V_MIN_ARR[ROOM] := VTMNC1V-0.25V;
    VOHCML1V_MAX_ARR[ROOM] := VTMNC1V;
    VOHCML1V_FORCEV_ARR[ROOM] := VTMNC1V;
    VOLCML1V_MIN_ARR[ROOM] := VTMNC1V-0.48V;
    VOLCML1V_MAX_ARR[ROOM] := VTMNC1V-0.32V;
    VOLCML1V_FORCEV_ARR[ROOM] := VTMNC1V;

    VOHCML1V_MIN_ARR[TEMP] := VTMNC1V-0.25V;
    VOHCML1V_MAX_ARR[TEMP] := VTMNC1V;
    VOHCML1V_FORCEV_ARR[TEMP] := VTMNC1V;
    VOLCML1V_MIN_ARR[TEMP] := VTMNC1V-0.48V;
    VOLCML1V_MAX_ARR[TEMP] := VTMNC1V-0.32V;
    VOLCML1V_FORCEV_ARR[TEMP] := VTMNC1V;

    VOHCML1V_MIN_ARR[COLD] := VTMNC1V-0.25V;
    VOHCML1V_MAX_ARR[COLD] := VTMNC1V;
    VOHCML1V_FORCEV_ARR[COLD] := VTMNC1V;
    VOLCML1V_MIN_ARR[COLD] := VTMNC1V-0.48V;
    VOLCML1V_MAX_ARR[COLD] := VTMNC1V-0.32V;
    VOLCML1V_FORCEV_ARR[COLD] := VTMNC1V;

    VODCML1V_MIN_ARR[HOT_CHUCKS] := 400mV;
    VODCML1V_MAX_ARR[HOT_CHUCKS] := 1.2V;

    VODCML1V_MIN_ARR[HOT] := 400mV;
    VODCML1V_MAX_ARR[HOT] := 1.2V;

    VODCML1V_MIN_ARR[ROOM] := 400mV;
    VODCML1V_MAX_ARR[ROOM] := 1.2V;

    VODCML1V_MIN_ARR[TEMP] := 400mV;
    VODCML1V_MAX_ARR[TEMP] := 1.2V;

    VODCML1V_MIN_ARR[COLD] := 400mV;
    VODCML1V_MAX_ARR[COLD] := 1.2V;

    VOHCMOSa3V_MIN_ARR[HOT_CHUCKS] := VTMN3V*0.8;
    VOHCMOSa3V_MAX_ARR[HOT_CHUCKS] := VTMN3V;
    VOHCMOSa3V_FORCEV_ARR[HOT_CHUCKS] := VTMN3V*0.65;
    VOLCMOSa3V_MIN_ARR[HOT_CHUCKS] := 0.0V;
    VOLCMOSa3V_MAX_ARR[HOT_CHUCKS] := VTMN3V*0.22;
    VOLCMOSa3V_FORCEV_ARR[HOT_CHUCKS] := VTMN3V*0.65;

    VOHCMOSa3V_MIN_ARR[HOT] := VTMN3V*0.8;
    VOHCMOSa3V_MAX_ARR[HOT] := VTMN3V;
    VOHCMOSa3V_FORCEV_ARR[HOT] := VTMN3V*0.65;
    VOLCMOSa3V_MIN_ARR[HOT] := 0.0V;
    VOLCMOSa3V_MAX_ARR[HOT] := VTMN3V*0.22;
    VOLCMOSa3V_FORCEV_ARR[HOT] := VTMN3V*0.65;

    VOHCMOSa3V_MIN_ARR[ROOM] := VTMN3V*0.8;
    VOHCMOSa3V_MAX_ARR[ROOM] := VTMN3V;
    VOHCMOSa3V_FORCEV_ARR[ROOM] := VTMN3V*0.65;
    VOLCMOSa3V_MIN_ARR[ROOM] := 0.0V;
    VOLCMOSa3V_MAX_ARR[ROOM] := VTMN3V*0.22;
    VOLCMOSa3V_FORCEV_ARR[ROOM] := VTMN3V*0.65;

    VOHCMOSa3V_MIN_ARR[TEMP] := VTMN3V*0.8;
    VOHCMOSa3V_MAX_ARR[TEMP] := VTMN3V;
    VOHCMOSa3V_FORCEV_ARR[TEMP] := VTMN3V*0.65;
    VOLCMOSa3V_MIN_ARR[TEMP] := 0.0V;
    VOLCMOSa3V_MAX_ARR[TEMP] := VTMN3V*0.22;
    VOLCMOSa3V_FORCEV_ARR[TEMP] := VTMN3V*0.65;

    VOHCMOSa3V_MIN_ARR[COLD] := VTMN3V*0.8;
    VOHCMOSa3V_MAX_ARR[COLD] := VTMN3V;
    VOHCMOSa3V_FORCEV_ARR[COLD] := VTMN3V*0.65;
    VOLCMOSa3V_MIN_ARR[COLD] := 0.0V;
    VOLCMOSa3V_MAX_ARR[COLD] := VTMN3V*0.22;
    VOLCMOSa3V_FORCEV_ARR[COLD] := VTMN3V*0.65;

    VOHAOUT1V_MIN_ARR[HOT_CHUCKS] := VTMN1V-0.580V;
    VOHAOUT1V_MAX_ARR[HOT_CHUCKS] := 1.65V;
    VOHAOUT1V_FORCEV_ARR[HOT_CHUCKS] := 1.073V;
    VOLAOUT1V_MIN_ARR[HOT_CHUCKS] := 0.0V;
    VOLAOUT1V_MAX_ARR[HOT_CHUCKS] := 0.480V;
    VOLAOUT1V_FORCEV_ARR[HOT_CHUCKS] := 0.660V;

    VOHAOUT1V_MIN_ARR[HOT] := VTMN1V-0.590V;
    VOHAOUT1V_MAX_ARR[HOT] := 1.65V;
    VOHAOUT1V_FORCEV_ARR[HOT] := 1.073V;
    VOLAOUT1V_MIN_ARR[HOT] := 0.0V;
    VOLAOUT1V_MAX_ARR[HOT] := 0.490V;
    VOLAOUT1V_FORCEV_ARR[HOT] := 0.660V;

    VOHAOUT1V_MIN_ARR[ROOM] := VTMN1V-0.585V;
    VOHAOUT1V_MAX_ARR[ROOM] := 1.65V;
    VOHAOUT1V_FORCEV_ARR[ROOM] := 1.073V;
    VOLAOUT1V_MIN_ARR[ROOM] := 0.0V;
    VOLAOUT1V_MAX_ARR[ROOM] := 0.485V;
    VOLAOUT1V_FORCEV_ARR[ROOM] := 0.660V;

    VOHAOUT1V_MIN_ARR[TEMP] := VTMN1V-0.600V;
    VOHAOUT1V_MAX_ARR[TEMP] := 1.65V;
    VOHAOUT1V_FORCEV_ARR[TEMP] := 1.073V;
    VOLAOUT1V_MIN_ARR[TEMP] := 0.0V;
    VOLAOUT1V_MAX_ARR[TEMP] := 0.500V;
    VOLAOUT1V_FORCEV_ARR[TEMP] := 0.660V;

    VOHAOUT1V_MIN_ARR[COLD] := VTMN1V-0.600V;
    VOHAOUT1V_MAX_ARR[COLD] := 1.65V;
    VOHAOUT1V_FORCEV_ARR[COLD] := 1.073V;
    VOLAOUT1V_MIN_ARR[COLD] := 0.0V;
    VOLAOUT1V_MAX_ARR[COLD] := 0.500V;
    VOLAOUT1V_FORCEV_ARR[COLD] := 0.660V;


    (* LEAKAGE *)


    IOZHCMOSa3V_MIN_ARR[HOT_CHUCKS] := -175.00nA;
    IOZHCMOSa3V_MAX_ARR[HOT_CHUCKS] := 350.00nA;
    IOZHCMOSa3V_FORCEV_ARR[HOT_CHUCKS] := VTMX3V;
    IOZHCMOSa3V_SINK_ARR[HOT_CHUCKS] := -950.0NA;
    IOZHCMOSa3V_SOURCE_ARR[HOT_CHUCKS] := 950.0NA;

    IOZLCMOSa3V_MIN_ARR[HOT_CHUCKS] := -350.00nA;
    IOZLCMOSa3V_MAX_ARR[HOT_CHUCKS] := 175.00nA;
    IOZLCMOSa3V_FORCEV_ARR[HOT_CHUCKS] := 0V;
    IOZLCMOSa3V_SINK_ARR[HOT_CHUCKS] := -950.0NA;
    IOZLCMOSa3V_SOURCE_ARR[HOT_CHUCKS] := 950.0NA;

    IOZHCMOSa3V_MIN_ARR[HOT] := -175.00nA;
    IOZHCMOSa3V_MAX_ARR[HOT] := 350.00nA;
    IOZHCMOSa3V_FORCEV_ARR[HOT] := VTMX3V;
    IOZHCMOSa3V_SINK_ARR[HOT] := -950.0NA;
    IOZHCMOSa3V_SOURCE_ARR[HOT] := 950.0NA;

    IOZLCMOSa3V_MIN_ARR[HOT] := -350.00nA;
    IOZLCMOSa3V_MAX_ARR[HOT] := 175.00nA;
    IOZLCMOSa3V_FORCEV_ARR[HOT] := 0V;
    IOZLCMOSa3V_SINK_ARR[HOT] := -950.0NA;
    IOZLCMOSa3V_SOURCE_ARR[HOT] := 950.0NA;

    IOZHCMOSa3V_MIN_ARR[ROOM] := -175.00nA;
    IOZHCMOSa3V_MAX_ARR[ROOM] := 350.00nA;
    IOZHCMOSa3V_FORCEV_ARR[ROOM] := VTMX3V;
    IOZHCMOSa3V_SINK_ARR[ROOM] := -950.0NA;
    IOZHCMOSa3V_SOURCE_ARR[ROOM] := 950.0NA;

    IOZLCMOSa3V_MIN_ARR[ROOM] := -350.00nA;
    IOZLCMOSa3V_MAX_ARR[ROOM] := 175.00nA;
    IOZLCMOSa3V_FORCEV_ARR[ROOM] := 0V;
    IOZLCMOSa3V_SINK_ARR[ROOM] := -950.0NA;
    IOZLCMOSa3V_SOURCE_ARR[ROOM] := 950.0NA;

    IOZHCMOSa3V_MIN_ARR[TEMP] := -5.00uA;
    IOZHCMOSa3V_MAX_ARR[TEMP] := 10.00uA;
    IOZHCMOSa3V_FORCEV_ARR[TEMP] := VTMX3V;
    IOZHCMOSa3V_SINK_ARR[TEMP] := -15.00UA;
    IOZHCMOSa3V_SOURCE_ARR[TEMP] := 15.00UA;

    IOZLCMOSa3V_MIN_ARR[TEMP] := -10.00uA;
    IOZLCMOSa3V_MAX_ARR[TEMP] := 5.00uA;
    IOZLCMOSa3V_FORCEV_ARR[TEMP] := 0V;
    IOZLCMOSa3V_SINK_ARR[TEMP] := -15.00UA;
    IOZLCMOSa3V_SOURCE_ARR[TEMP] := 15.00UA;

    IOZHCMOSa3V_MIN_ARR[COLD] := -100.0uA;
    IOZHCMOSa3V_MAX_ARR[COLD] := 5.0mA;
    IOZHCMOSa3V_FORCEV_ARR[COLD] := VTMX3V;
    IOZHCMOSa3V_SINK_ARR[COLD] := -15.50MA;
    IOZHCMOSa3V_SOURCE_ARR[COLD] := 15.50MA;

    IOZLCMOSa3V_MIN_ARR[COLD] := -5.0mA;
    IOZLCMOSa3V_MAX_ARR[COLD] := 100.0uA;
    IOZLCMOSa3V_FORCEV_ARR[COLD] := 0V;
    IOZLCMOSa3V_SINK_ARR[COLD] := -15.50MA;
    IOZLCMOSa3V_SOURCE_ARR[COLD] := 15.50MA;



    IOLP1_MIN_ARR[HOT_CHUCKS] :=  -219.0UA;
    IOLP1_MAX_ARR[HOT_CHUCKS] :=  -34.5UA;

    IOLP1_MIN_ARR[HOT] :=  -219.0UA;
    IOLP1_MAX_ARR[HOT] :=  -34.5UA;

    IOLP1_MIN_ARR[ROOM] :=  -279.0UA;
    IOLP1_MAX_ARR[ROOM] :=  -39.0UA;

    IOLP1_MIN_ARR[TEMP] :=  -300.0UA;
    IOLP1_MAX_ARR[TEMP] :=  -30.0UA;

    IOLP1_MIN_ARR[COLD] :=  -1MA;
    IOLP1_MAX_ARR[COLD] :=  1MA;

    IOLP1_SINK_ARR[HOT_CHUCKS] :=  -240.0UA;
    IOLP1_SOURCE_ARR[HOT_CHUCKS] :=  240.0UA;

    IOLP1_SINK_ARR[HOT] :=  -240.0UA;
    IOLP1_SOURCE_ARR[HOT] :=  240.0UA;

    IOLP1_SINK_ARR[ROOM] :=  -970.0UA;
    IOLP1_SOURCE_ARR[ROOM] :=  970.0UA;

    IOLP1_SINK_ARR[TEMP] :=  -970.0UA;
    IOLP1_SOURCE_ARR[TEMP] :=  970.0UA;

    IOLP1_SINK_ARR[COLD] :=  -3.800MA;
    IOLP1_SOURCE_ARR[COLD] :=  3.800MA;



    IIHR_OFF_MIN_ARR[HOT_CHUCKS] :=  -175.00nA;
    IIHR_OFF_MAX_ARR[HOT_CHUCKS] :=  350.00nA;

    IIHR_OFF_MIN_ARR[HOT] :=  -175.00nA;
    IIHR_OFF_MAX_ARR[HOT] :=  350.00nA;

    IIHR_OFF_MIN_ARR[ROOM] :=  -175.00nA;
    IIHR_OFF_MAX_ARR[ROOM] :=  350.00nA;

    IIHR_OFF_MIN_ARR[TEMP] :=  -5.00uA;
    IIHR_OFF_MAX_ARR[TEMP] :=  10.00uA;

    IIHR_OFF_MIN_ARR[COLD] :=  -100.0uA;
    IIHR_OFF_MAX_ARR[COLD] :=  1.0mA;

    IIHR_OFF_SINK_ARR[HOT_CHUCKS] :=   -950.0NA;
    IIHR_OFF_SOURCE_ARR[HOT_CHUCKS] :=   950.0NA;

    IIHR_OFF_SINK_ARR[HOT] :=   -950.0NA;
    IIHR_OFF_SOURCE_ARR[HOT] :=   950.0NA;

    IIHR_OFF_SINK_ARR[ROOM] :=   -950.0NA;
    IIHR_OFF_SOURCE_ARR[ROOM] :=   950.0NA;

    IIHR_OFF_SINK_ARR[TEMP] :=   -15.00UA;
    IIHR_OFF_SOURCE_ARR[TEMP] :=   15.00UA;

    IIHR_OFF_SINK_ARR[COLD] :=   -3.800MA;
    IIHR_OFF_SOURCE_ARR[COLD] :=   3.800MA;

    IILR_OFF_MIN_ARR[HOT_CHUCKS] :=  -350.00nA;
    IILR_OFF_MAX_ARR[HOT_CHUCKS] :=  175.00nA;

    IILR_OFF_MIN_ARR[HOT] :=  -350.00nA;
    IILR_OFF_MAX_ARR[HOT] :=  175.00nA;

    IILR_OFF_MIN_ARR[ROOM] :=  -350.00nA;
    IILR_OFF_MAX_ARR[ROOM] :=  175.00nA;

    IILR_OFF_MIN_ARR[TEMP] :=  -10.00uA;
    IILR_OFF_MAX_ARR[TEMP] :=  5.00uA;

    IILR_OFF_MIN_ARR[COLD] :=  -1.0mA;
    IILR_OFF_MAX_ARR[COLD] :=  100.0uA;

    IILR_OFF_SINK_ARR[HOT_CHUCKS] :=   -950.0NA;
    IILR_OFF_SOURCE_ARR[HOT_CHUCKS] :=   950.0NA;

    IILR_OFF_SINK_ARR[HOT] :=   -950.0NA;
    IILR_OFF_SOURCE_ARR[HOT] :=   950.0NA;

    IILR_OFF_SINK_ARR[ROOM] :=   -950.0NA;
    IILR_OFF_SOURCE_ARR[ROOM] :=   950.0NA;

    IILR_OFF_SINK_ARR[TEMP] :=   -15.00UA;
    IILR_OFF_SOURCE_ARR[TEMP] :=   15.00UA;

    IILR_OFF_SINK_ARR[COLD] :=   -3.800MA;
    IILR_OFF_SOURCE_ARR[COLD] :=   3.800MA;


    I4MA_ARR[HOT_CHUCKS]      := 4MA;
    I8MA_ARR[HOT_CHUCKS]      := 8MA;
    I12MA_ARR[HOT_CHUCKS]     := 12MA;
    I24MA_ARR[HOT_CHUCKS]     := 12MA;

    I4MA_ARR[HOT]             := 4MA;
    I8MA_ARR[HOT]             := 8MA;
    I12MA_ARR[HOT]            := 12MA;
    I24MA_ARR[HOT]            := 24MA;

    I4MA_ARR[ROOM]            := 4MA;
    I8MA_ARR[ROOM]            := 8MA;
    I12MA_ARR[ROOM]           := 12MA;
    I24MA_ARR[ROOM]           := 24MA;

    I4MA_ARR[TEMP]            := 4MA;
    I8MA_ARR[TEMP]            := 8MA;
    I12MA_ARR[TEMP]           := 12MA;
    I24MA_ARR[TEMP]           := 24MA;

    I4MA_ARR[COLD]            := 4MA;
    I8MA_ARR[COLD]            := 8MA;
    I12MA_ARR[COLD]           := 12MA;
    I24MA_ARR[COLD]           := 24MA;

  end;  (* INITIALIZE_TEST_LIMIT_ARRAYS *)


procedure SELECT_TEST_LIMITS; Export;
(*
***********************************************************************
****            SELECT TEST LIMITS                                 ****
****                                                               ****
****            TEMP TYPES ARE:                                    ****
****                                                               ****
****              HOT                                              ****
****              ROOM                                             ****
****              TEMP                                             ****
****              COLD                                             ****
****                                                               ****
****                                                               ****
****            TEST TYPES ARE:                                    ****
****                                                               ****
****              FT_HOT                                           ****
****              FT_ROOM                                          ****
****              QC                                               ****
****              QC_COLD                                          ****
****              HOT_CHUCK                                        ****
****                                                               ****
***********************************************************************
*)

  begin

    Have_not_datalogged := TRUE;

    (* INITIALIZE TEMP_LIMIT *)

    if (Test_Limit = FT_HOT) then
      begin
       Temp_Limit := HOT;
       Handler_Temp := 90
      end
    else
    if (Test_Limit = HOT_CHUCK) then
      begin
       Temp_Limit := HOT_CHUCKS;
       Handler_Temp := 90;  {rev04c}
      end
    else
    if (Test_Limit = FT_ROOM) then
      begin
       Temp_Limit := ROOM;
       Handler_Temp := 25;
      end
    else
    if (Test_Limit = PROBE) then
      begin
       Temp_Limit := ROOM; {rev04c}
       Handler_Temp := 25; {rev04c}
      end
    else
    if (Test_Limit = QC) then
      begin
       Temp_Limit := TEMP;
       Handler_Temp := 85;
      end
    else
    if (Test_Limit = QC_COLD) then
      begin
       Temp_Limit := COLD;
       Handler_Temp := 0;
      end;


    (* TIMING GUARDBAND *)

    TGB  := TGB_ARR[Temp_Limit];

    PROPGB  := PROPGB_ARR[Temp_Limit];

    SetSupplyVars(VddNormal);  (* load the supply variables. *)

    (* ICCQ *)

    ICCQ_MIN := ICCQ_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ_DATA_MIN := ICCQ_MIN_ARR[Temp_Limit];
    ICCQ_MAX := ICCQ_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ_DATA_MAX := ICCQ_MAX_ARR[Temp_Limit];
    ICCQ_RANGE := ICCQ_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ_DATA_RANGE := ICCQ_RANGE_ARR[Temp_Limit];
{rev10b}NEW_ICCQ_MAX := NEW_ICCQ_MAX_ARR[Temp_Limit];
{rev10b}NEW_ICCQ_RANGE := NEW_ICCQ_RANGE_ARR[Temp_Limit];
{rev10b}DELTA_ICCQ_MAX := DELTA_ICCQ_MAX_ARR[Temp_Limit];

    ICCQ10_MIN := ICCQ10_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ10_DATA_MIN := ICCQ10_MIN_ARR[Temp_Limit];
    ICCQ10_MAX := ICCQ10_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ10_DATA_MAX := ICCQ10_MAX_ARR[Temp_Limit];
    ICCQ10_RANGE := ICCQ10_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ10_DATA_RANGE := ICCQ10_RANGE_ARR[Temp_Limit];

    ICCQ11_MIN := ICCQ11_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ11_DATA_MIN := ICCQ11_MIN_ARR[Temp_Limit];
    ICCQ11_MAX := ICCQ11_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ11_DATA_MAX := ICCQ11_MAX_ARR[Temp_Limit];
    ICCQ11_RANGE := ICCQ11_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ11_DATA_RANGE := ICCQ11_RANGE_ARR[Temp_Limit];

    ICCQ12_MIN := ICCQ12_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ12_DATA_MIN := ICCQ12_MIN_ARR[Temp_Limit];
    ICCQ12_MAX := ICCQ12_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ12_DATA_MAX := ICCQ12_MAX_ARR[Temp_Limit];
    ICCQ12_RANGE := ICCQ12_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ12_DATA_RANGE := ICCQ12_RANGE_ARR[Temp_Limit];

    ICCQ13_MIN := ICCQ13_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ13_DATA_MIN := ICCQ13_MIN_ARR[Temp_Limit];
    ICCQ13_MAX := ICCQ13_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ13_DATA_MAX := ICCQ13_MAX_ARR[Temp_Limit];
    ICCQ13_RANGE := ICCQ13_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ13_DATA_RANGE := ICCQ13_RANGE_ARR[Temp_Limit];

    ICCQ14_MIN := ICCQ14_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ14_DATA_MIN := ICCQ14_MIN_ARR[Temp_Limit];
    ICCQ14_MAX := ICCQ14_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ14_DATA_MAX := ICCQ14_MAX_ARR[Temp_Limit];
    ICCQ14_RANGE := ICCQ14_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ14_DATA_RANGE := ICCQ14_RANGE_ARR[Temp_Limit];

    ICCQ15_MIN := ICCQ15_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ15_DATA_MIN := ICCQ15_MIN_ARR[Temp_Limit];
    ICCQ15_MAX := ICCQ15_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ15_DATA_MAX := ICCQ15_MAX_ARR[Temp_Limit];
    ICCQ15_RANGE := ICCQ15_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ15_DATA_RANGE := ICCQ15_RANGE_ARR[Temp_Limit];

    ICCQ16_MIN := ICCQ16_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ16_DATA_MIN := ICCQ16_MIN_ARR[Temp_Limit];
    ICCQ16_MAX := ICCQ16_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ16_DATA_MAX := ICCQ16_MAX_ARR[Temp_Limit];
    ICCQ16_RANGE := ICCQ16_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ16_DATA_RANGE := ICCQ16_RANGE_ARR[Temp_Limit];

    ICCQ17_MIN := ICCQ17_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ17_DATA_MIN := ICCQ17_MIN_ARR[Temp_Limit];
    ICCQ17_MAX := ICCQ17_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ17_DATA_MAX := ICCQ17_MAX_ARR[Temp_Limit];
    ICCQ17_RANGE := ICCQ17_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ17_DATA_RANGE := ICCQ17_RANGE_ARR[Temp_Limit];

    ICCQ18_MIN := ICCQ18_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ18_DATA_MIN := ICCQ18_MIN_ARR[Temp_Limit];
    ICCQ18_MAX := ICCQ18_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ18_DATA_MAX := ICCQ18_MAX_ARR[Temp_Limit];
    ICCQ18_RANGE := ICCQ18_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ18_DATA_RANGE := ICCQ18_RANGE_ARR[Temp_Limit];

    ICCQ19_MIN := ICCQ19_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ19_DATA_MIN := ICCQ19_MIN_ARR[Temp_Limit];
    ICCQ19_MAX := ICCQ19_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ19_DATA_MAX := ICCQ19_MAX_ARR[Temp_Limit];
    ICCQ19_RANGE := ICCQ19_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ19_DATA_RANGE := ICCQ19_RANGE_ARR[Temp_Limit];

    ICCQ20_MIN := ICCQ20_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ20_DATA_MIN := ICCQ20_MIN_ARR[Temp_Limit];
    ICCQ20_MAX := ICCQ20_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ20_DATA_MAX := ICCQ20_MAX_ARR[Temp_Limit];
    ICCQ20_RANGE := ICCQ20_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ20_DATA_RANGE := ICCQ20_RANGE_ARR[Temp_Limit];

    ICCQ21_MIN := ICCQ21_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ21_DATA_MIN := ICCQ21_MIN_ARR[Temp_Limit];
    ICCQ21_MAX := ICCQ21_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ21_DATA_MAX := ICCQ21_MAX_ARR[Temp_Limit];
    ICCQ21_RANGE := ICCQ21_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ21_DATA_RANGE := ICCQ21_RANGE_ARR[Temp_Limit];

    ICCQ22_MIN := ICCQ22_MIN_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ22_DATA_MIN := ICCQ22_MIN_ARR[Temp_Limit];
    ICCQ22_MAX := ICCQ22_MAX_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ22_DATA_MAX := ICCQ22_MAX_ARR[Temp_Limit];
    ICCQ22_RANGE := ICCQ22_RANGE_ARR[Temp_Limit];
{rev_ICCQ}    ICCQ22_DATA_RANGE := ICCQ22_RANGE_ARR[Temp_Limit];
    (*  VIHVIL DRIVEHI, DRIVELO VARS  *)

    VIHCMOSa3V_VMAX := VIHCMOSa3V_VMAX_ARR[Temp_Limit];
    VILCMOSa3V_VMAX := VILCMOSa3V_VMAX_ARR[Temp_Limit];
    VIHCMOSa3V_VMIN := VIHCMOSa3V_VMIN_ARR[Temp_Limit];
    VILCMOSa3V_VMIN := VILCMOSa3V_VMIN_ARR[Temp_Limit];

    VIHTESTINA1V_VMAX := VIHTESTINA1V_VMAX_ARR[Temp_Limit];
    VILTESTINA1V_VMAX := VILTESTINA1V_VMAX_ARR[Temp_Limit];
    VIHTESTINA1V_VMIN := VIHTESTINA1V_VMIN_ARR[Temp_Limit];
    VILTESTINA1V_VMIN := VILTESTINA1V_VMIN_ARR[Temp_Limit];

    (* IIH/IIL *)

    IIH_MIN := IIH_MIN_ARR[Temp_Limit];
    IIH_MAX := IIH_MAX_ARR[Temp_Limit];
    IIL_MIN := IIL_MIN_ARR[Temp_Limit];
    IIL_MAX := IIL_MAX_ARR[Temp_Limit];
    IIH_SINK := IIH_SINK_ARR[Temp_Limit];
    IIH_SOURCE := IIH_SOURCE_ARR[Temp_Limit];
    IIL_SINK := IIL_SINK_ARR[Temp_Limit];
    IIL_SOURCE := IIL_SOURCE_ARR[Temp_Limit];

    (* IILP (PULLUPS) *)

    IILP1_MIN := IILP1_MIN_ARR[Temp_Limit];
    IILP1_MAX := IILP1_MAX_ARR[Temp_Limit];
    IILP1_SINK := IILP1_SINK_ARR[Temp_Limit];
    IILP1_SOURCE := IILP1_SOURCE_ARR[Temp_Limit];

    IIHLVDSa1VD_MAX := IIHLVDSa1VD_MAX_ARR[Temp_Limit];
    IIHLVDSa1VD_MIN := IIHLVDSa1VD_MIN_ARR[Temp_Limit];
    IIHLVDSa1VD_FORCEV := IIHLVDSa1VD_FORCEV_ARR[Temp_Limit];
    IIHLVDSa1VD_SINK := IIHLVDSa1VD_SINK_ARR[Temp_Limit];
    IIHLVDSa1VD_SOURCE := IIHLVDSa1VD_SOURCE_ARR[Temp_Limit];
    IILLVDSa1VD_MAX := IILLVDSa1VD_MAX_ARR[Temp_Limit];
    IILLVDSa1VD_MIN := IILLVDSa1VD_MIN_ARR[Temp_Limit];
    IILLVDSa1VD_FORCEV := IILLVDSa1VD_FORCEV_ARR[Temp_Limit];
    IILLVDSa1VD_SINK := IILLVDSa1VD_SINK_ARR[Temp_Limit];
    IILLVDSa1VD_SOURCE := IILLVDSa1VD_SOURCE_ARR[Temp_Limit];

    IIHCML1VD_MAX := IIHCML1VD_MAX_ARR[Temp_Limit];
    IIHCML1VD_MIN := IIHCML1VD_MIN_ARR[Temp_Limit];
    IIHCML1VD_FORCEV := IIHCML1VD_FORCEV_ARR[Temp_Limit];
    IIHCML1VD_SINK := IIHCML1VD_SINK_ARR[Temp_Limit];
    IIHCML1VD_SOURCE := IIHCML1VD_SOURCE_ARR[Temp_Limit];
    IILCML1VD_MAX := IILCML1VD_MAX_ARR[Temp_Limit];
    IILCML1VD_MIN := IILCML1VD_MIN_ARR[Temp_Limit];
    IILCML1VD_FORCEV := IILCML1VD_FORCEV_ARR[Temp_Limit];
    IILCML1VD_SINK := IILCML1VD_SINK_ARR[Temp_Limit];
    IILCML1VD_SOURCE := IILCML1VD_SOURCE_ARR[Temp_Limit];

    IIHCMOSa3V_MAX := IIHCMOSa3V_MAX_ARR[Temp_Limit];
    IIHCMOSa3V_MIN := IIHCMOSa3V_MIN_ARR[Temp_Limit];
    IIHCMOSa3V_FORCEV := IIHCMOSa3V_FORCEV_ARR[Temp_Limit];
    IIHCMOSa3V_SINK := IIHCMOSa3V_SINK_ARR[Temp_Limit];
    IIHCMOSa3V_SOURCE := IIHCMOSa3V_SOURCE_ARR[Temp_Limit];
    IILCMOSa3V_MAX := IILCMOSa3V_MAX_ARR[Temp_Limit];
    IILCMOSa3V_MIN := IILCMOSa3V_MIN_ARR[Temp_Limit];
    IILCMOSa3V_FORCEV := IILCMOSa3V_FORCEV_ARR[Temp_Limit];
    IILCMOSa3V_SINK := IILCMOSa3V_SINK_ARR[Temp_Limit];
    IILCMOSa3V_SOURCE := IILCMOSa3V_SOURCE_ARR[Temp_Limit];

    IIHTESTINA1V_MAX := IIHTESTINA1V_MAX_ARR[Temp_Limit];
    IIHTESTINA1V_MIN := IIHTESTINA1V_MIN_ARR[Temp_Limit];
    IIHTESTINA1V_FORCEV := IIHTESTINA1V_FORCEV_ARR[Temp_Limit];
    IIHTESTINA1V_SINK := IIHTESTINA1V_SINK_ARR[Temp_Limit];
    IIHTESTINA1V_SOURCE := IIHTESTINA1V_SOURCE_ARR[Temp_Limit];
    IILTESTINA1V_MAX := IILTESTINA1V_MAX_ARR[Temp_Limit];
    IILTESTINA1V_MIN := IILTESTINA1V_MIN_ARR[Temp_Limit];
    IILTESTINA1V_FORCEV := IILTESTINA1V_FORCEV_ARR[Temp_Limit];
    IILTESTINA1V_SINK := IILTESTINA1V_SINK_ARR[Temp_Limit];
    IILTESTINA1V_SOURCE := IILTESTINA1V_SOURCE_ARR[Temp_Limit];

    (* VOUT *)

    VOHL_MIN := VOHL_MIN_ARR[Temp_Limit];
    VOLL_MAX := VOLL_MAX_ARR[Temp_Limit];
    VOHL3V_MIN := VOHL3V_MIN_ARR[Temp_Limit];
    VOLL3V_MAX := VOLL3V_MAX_ARR[Temp_Limit];

    VIDLVDSa1V := VIDLVDSa1V_ARR[Temp_Limit];

    VIDCML1V := VIDCML1V_ARR[Temp_Limit];

    (* LEAKAGE *)


    IOZHCMOSa3V_MAX := IOZHCMOSa3V_MAX_ARR[Temp_Limit];
    IOZHCMOSa3V_MIN := IOZHCMOSa3V_MIN_ARR[Temp_Limit];
    IOZHCMOSa3V_FORCEV := IOZHCMOSa3V_FORCEV_ARR[Temp_Limit];
    IOZHCMOSa3V_SINK := IOZHCMOSa3V_SINK_ARR[Temp_Limit];
    IOZHCMOSa3V_SOURCE := IOZHCMOSa3V_SOURCE_ARR[Temp_Limit];

    IOZLCMOSa3V_MAX := IOZLCMOSa3V_MAX_ARR[Temp_Limit];
    IOZLCMOSa3V_MIN := IOZLCMOSa3V_MIN_ARR[Temp_Limit];
    IOZLCMOSa3V_FORCEV := IOZLCMOSa3V_FORCEV_ARR[Temp_Limit];
    IOZLCMOSa3V_SINK := IOZLCMOSa3V_SINK_ARR[Temp_Limit];
    IOZLCMOSa3V_SOURCE := IOZLCMOSa3V_SOURCE_ARR[Temp_Limit];
    IOLP1_MIN := IOLP1_MIN_ARR[Temp_Limit];
    IOLP1_MAX := IOLP1_MAX_ARR[Temp_Limit];
    IOLP1_SINK := IOLP1_SINK_ARR[Temp_Limit];
    IOLP1_SOURCE := IOLP1_SOURCE_ARR[Temp_Limit];



    VOHLVDSa1V_MAX := VOHLVDSa1V_MAX_ARR[Temp_Limit];
    VOHLVDSa1V_MIN := VOHLVDSa1V_MIN_ARR[Temp_Limit];
    VOHLVDSa1V_FORCEV := VOHLVDSa1V_FORCEV_ARR[Temp_Limit];
    VOLLVDSa1V_MAX := VOLLVDSa1V_MAX_ARR[Temp_Limit];
    VOLLVDSa1V_MIN := VOLLVDSa1V_MIN_ARR[Temp_Limit];
    VOLLVDSa1V_FORCEV := VOLLVDSa1V_FORCEV_ARR[Temp_Limit];
    VODLVDSa1V_MAX := VODLVDSa1V_MAX_ARR[Temp_Limit];
    VODLVDSa1V_MIN := VODLVDSa1V_MIN_ARR[Temp_Limit];

    VOHCML1V_MAX := VOHCML1V_MAX_ARR[Temp_Limit];
    VOHCML1V_MIN := VOHCML1V_MIN_ARR[Temp_Limit];
    VOHCML1V_FORCEV := VOHCML1V_FORCEV_ARR[Temp_Limit];
    VOLCML1V_MAX := VOLCML1V_MAX_ARR[Temp_Limit];
    VOLCML1V_MIN := VOLCML1V_MIN_ARR[Temp_Limit];
    VOLCML1V_FORCEV := VOLCML1V_FORCEV_ARR[Temp_Limit];
    VODCML1V_MAX := VODCML1V_MAX_ARR[Temp_Limit];
    VODCML1V_MIN := VODCML1V_MIN_ARR[Temp_Limit];

    VOHCMOSa3V_MAX := VOHCMOSa3V_MAX_ARR[Temp_Limit];
    VOHCMOSa3V_MIN := VOHCMOSa3V_MIN_ARR[Temp_Limit];
    VOHCMOSa3V_FORCEV := VOHCMOSa3V_FORCEV_ARR[Temp_Limit];
    VOLCMOSa3V_MAX := VOLCMOSa3V_MAX_ARR[Temp_Limit];
    VOLCMOSa3V_MIN := VOLCMOSa3V_MIN_ARR[Temp_Limit];
    VOLCMOSa3V_FORCEV := VOLCMOSa3V_FORCEV_ARR[Temp_Limit];

    VOHAOUT1V_MAX := VOHAOUT1V_MAX_ARR[Temp_Limit];
    VOHAOUT1V_MIN := VOHAOUT1V_MIN_ARR[Temp_Limit];
    VOHAOUT1V_FORCEV := VOHAOUT1V_FORCEV_ARR[Temp_Limit];
    VOLAOUT1V_MAX := VOLAOUT1V_MAX_ARR[Temp_Limit];
    VOLAOUT1V_MIN := VOLAOUT1V_MIN_ARR[Temp_Limit];
    VOLAOUT1V_FORCEV := VOLAOUT1V_FORCEV_ARR[Temp_Limit];

    IIHR_OFF_MIN := IIHR_OFF_MIN_ARR[Temp_Limit];
    IIHR_OFF_MAX := IIHR_OFF_MAX_ARR[Temp_Limit];
    IIHR_OFF_SINK := IIHR_OFF_SINK_ARR[Temp_Limit];
    IIHR_OFF_SOURCE := IIHR_OFF_SOURCE_ARR[Temp_Limit];

    IILR_OFF_MIN := IILR_OFF_MIN_ARR[Temp_Limit];
    IILR_OFF_MAX := IILR_OFF_MAX_ARR[Temp_Limit];
    IILR_OFF_SINK := IILR_OFF_SINK_ARR[Temp_Limit];
    IILR_OFF_SOURCE := IILR_OFF_SOURCE_ARR[Temp_Limit];

    I4MA     := I4MA_ARR[Temp_Limit];
    I8MA     := I8MA_ARR[Temp_Limit];
    I12MA    := I12MA_ARR[Temp_Limit];
    I24MA    := I24MA_ARR[Temp_Limit];

  end;  (* SELECT_TEST_LIMITS *)


procedure LOAD_FAST_SETS;
(*
***********************************************************************
****            LOAD FAST SETS INTO HARDWARE                       ****
****                                                               ****
***********************************************************************
*)

begin


DCTableOpen( DEFAULT_DC_TABLE );
  DCSetOpen( ALL_PINS_PLUS );
DCTableClose;

DCTableOpen( VOUT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMN3V, 0V,CP, VTMN3V*0.75, VTMN3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMN3V, 0V,CP, VTMN3V*0.75, VTMN3V*0.25, VTMN3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMN3V, 0V,CP, VTMN3V*0.75, VTMN3V*0.25, VTMN3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( 1.65V, 0.0V,CP, 1.238V, 0.413V, TESTINA1V_INS );
  DCSetDyn( 1.65V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VTMNC1V, VTMNC1V-0.4V,CP, VTMNC1V-0.1V, VTMNC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMNC1V, VTMNC1V-0.4V,CP, VTMNC1V-0.1V, VTMNC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMNC1V, VTMNC1V-0.4V,CP, VTMNC1V-0.1V, VTMNC1V-0.25V, VTMNC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMNC1V, VTMNC1V-0.4V,CP, VTMNC1V-0.1V, VTMNC1V-0.25V, VTMNC1V,
              -0mA, 0mA, CML1V_OUTSYZ );
  DCSetOpen( ALL_MUX );
DCTableClose;

DCTableOpen( LEAKAGE_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( 1.95V, 0.0V,CP, 1.462V, 0.488V, TESTINA1V_INS );
  DCSetDyn( 1.95V, 0.0V,CP, 1.462V, 0.488V, 1.268V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );
  DCSetOpen( ALL_MUX );
DCTableClose;

FormatTableOpen( DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
FormatTableClose;

ACTableOpen( DEFAULT_AC_TABLE );
 {rev00c ACSetInOut( DEFAULT_TIMING, 0nS, 0nS, 5nS, 0nS, 5nS );}
{rev00c} ACSetInOut( DEFAULT_TIMING, 0nS, 0nS, 0.8nS, 0nS, 0.8nS ); 
ACTableClose;

CycleTableOpen( DEFAULT_CYCLE_TABLE );
  CycleSet( NORMAL, DEFAULT_TIMING, ALL_PINS_PLUS );
CycleTableClose;

PeriodTableOpen( DEFAULT_PERIOD_TABLE );
  PeriodSet( 1, NORMAL );
PeriodTableClose;

DCSetupOpen( OPEN_PINS_DC, DEFAULT_DC_TABLE );
DCSetupClose;

(*  CONTINUITY/SHORTS *)

DCSetupOpen( DIODE_ODD_DC, DEFAULT_DC_TABLE );
          DCSetPMU( -0.3V, -1.0V, -1.5V,
                    -1.0MA, 1.0MA, CONT_ODD_GND_DIODES );
          DCSetPMU( 1.4V, 0.3V, 1.5V,
                    -1.0MA, 1.0MA, CONT_EVEN_VCC_DIODES );
DCSetupClose;

DCSetupOpen( DIODE_EVEN_DC, DEFAULT_DC_TABLE );
          DCSetPMU( -0.3V, -1.0V, -1.5V,
                    -1.0MA, 1.0MA, CONT_EVEN_GND_DIODES );
          DCSetPMU( 1.4V, 0.3V, 1.5V,
                    -1.0MA, 1.0MA, CONT_ODD_VCC_DIODES );
DCSetupClose;

DCSetupOpen( OPEN_ODD_DC, DEFAULT_DC_TABLE );
          DCSetPMU( +0.5V, -1.0V, -1.5V,
                    -1.0MA, 1.0MA, CONT_ODD_GND_DIODES );
          DCSetPMU( 1.4V, -0.5V, 1.5V,
                    -1.0MA, 1.0MA, CONT_EVEN_VCC_DIODES );
DCSetupClose;

DCSetupOpen( OPEN_EVEN_DC, DEFAULT_DC_TABLE );
          DCSetPMU( +0.5V, -1.0V, -1.5V,
                    -1.0MA, 1.0MA, CONT_EVEN_GND_DIODES );
          DCSetPMU( 1.4V, -0.5V, 1.5V,
                    -1.0MA, 1.0MA, CONT_ODD_VCC_DIODES );
DCSetupClose;

DCSetupOpen( SHORT_ODD_DC, DEFAULT_DC_TABLE );
          DCSetPMU( -0.3V, -2.0V, -1.5V,
                    -1.0MA, 1.0MA, SHORT_ODD_GND_DIODES );
          DCSetPMU( 2.0V, 0.3V, 1.5V,
                    -1.0MA, 1.0MA, SHORT_EVEN_VCC_DIODES );
DCSetupClose;

DCSetupOpen( SHORT_EVEN_DC, DEFAULT_DC_TABLE );
          DCSetPMU( -0.3V, -2.0V, -1.5V,
                    -1.0MA, 1.0MA, SHORT_EVEN_GND_DIODES );
          DCSetPMU( 2.0V, 0.3V, 1.5V,
                    -1.0MA, 1.0MA, SHORT_ODD_VCC_DIODES );
DCSetupClose;


DCSetupOpen( PIN2PIN_ROWS_DC, DEFAULT_DC_TABLE );
   DCSetPMU( 70NA, -70NA, -0.1V,
              -230.0NA, 230.0NA, PINS_ODD_ROWS );
   DCSetPMU( 70NA, -70NA, 0.1V,
               -230.0NA, 230.0NA, PINS_EVEN_ROWS );
DCSetupClose;

DCSetupOpen( PIN2PIN_COLUMNS_DC, DEFAULT_DC_TABLE );
   DCSetPMU( 70NA, -70NA, -0.1V,
             -230.0NA, 230.0NA, PINS_ODD_COLUMNS );
   DCSetPMU( 70NA, -70NA, 0.1V,
             -230.0NA, 230.0NA, PINS_EVEN_COLUMNS );
DCSetupClose;

FormatSetupOpen( CONTY_FORMAT, DEFAULT_FORMAT_TABLE );
FormatSetupClose;

ACSetupOpen( CONTY_AC, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 1000nS, OPEN_ODD_DC, CONTY_FORMAT );
ACSetupClose;

(*  GOI  *)

DCSetupOpen( GOI_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( 2.7V, 0V,CP, VGOI3V*0.75, VGOI3V*0.25, CMOSa3V_INS );
  DCSetDyn( 2.7V, 0V,CP, VGOI3V*0.75, VGOI3V*0.25, VGOI3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( 2.7V, 0V,CP, VGOI3V*0.75, VGOI3V*0.25, VGOI3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 2.64V, 0.0V,CP, 2.325V, 0.775V, TESTINA1V_INS );
  DCSetDyn( 2.64V, 0.0V,CP, 2.325V, 0.775V, 2.015V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VGOIC1V-0.1V, VGOIC1V-0.65V,CP, VGOIC1V-0.1V, VGOIC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VGOIC1V-0.1V, VGOIC1V-0.65V,CP, VGOIC1V-0.1V, VGOIC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VGOIC1V, VGOIC1V-0.65V,CP, VGOIC1V-0.1V, VGOIC1V-0.25V, VGOIC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VGOIC1V, VGOIC1V-0.65V,CP, VGOIC1V-0.1V, VGOIC1V-0.25V, VGOIC1V,
              -0mA, 0mA, CML1V_OUTSYZ );
DCSetupClose;

(*  ICCQ SETUP  *)

{rev_ICCQ - begin add}
DCSetupOpen( HOT_ICCQ_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTHOT1V, 0.0V,CP, VTHOT1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTHOT1V, 0.0V,CP, VTHOT1V, 0.488V, VTHOT1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTHOT1V, VTHOT1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTHOT1V, VTHOT1V, LVDSa1V_INSAZ );
  DCSetDyn( VTHOT1V, 0V,CP, VTHOT1V, VTHOT1V, VTHOT1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTHOT1V, 0V,CP, VTHOT1V, VTHOT1V, VTHOT1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );
DCSetupClose;
{rev_ICCQ - end add}
DCSetupOpen( ICCQ_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( 1.95V, 0.0V,CP, 1.462V, 0.488V, TESTINA1V_INS );
  DCSetDyn( 1.95V, 0.0V,CP, 1.462V, 0.488V, 1.268V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );
DCSetupClose;

{rev_ICCQ - begin add}
DCSetupOpen( HOT_ICCQ_PM_BLEED, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTHOT1V, 0.0V,CP, VTHOT1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTHOT1V, 0.0V,CP, VTHOT1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTHOT1V, VTHOT1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTHOT1V, VTHOT1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTHOT1V, VTHOT1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTHOT1V, VTHOT1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
DCSetupClose;
{rev_ICCQ - end add}
DCSetupOpen( ICCQ_PM_BLEED, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( 1.95V, 0.0V,CP, 1.462V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( 1.95V, 0.0V,CP, 1.462V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
DCSetupClose;

DCSetupOpen( SLOW_MIN_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VMN3V, 0V,CP, VMN3V*0.75, VMN3V*0.25, CMOSa3V_INS );
  DCSetDyn( VMN3V, 0V,CP, VMN3V*0.75, VMN3V*0.25, VMN3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( VMN3V, 0V,CP, VMN3V*0.75, VMN3V*0.25, VMN3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 1.65V, 0.0V,CP, 1.238V, 0.413V, TESTINA1V_INS );
  DCSetDyn( 1.65V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VMNC1V, VMNC1V-0.4V,CP, VMNC1V-0.1V, VMNC1V-0.25V, CML1V_INSA );
  DCSetLDOFF( VMNC1V, VMNC1V-0.4V,CP, VMNC1V-0.1V, VMNC1V-0.25V, CML1V_INSAZ );
  DCSetDyn( VMNC1V, VMNC1V-0.4V,CP, VMNC1V-0.1V, VMNC1V-0.25V, VMNC1V, -0mA,
              0mA, CML1V_OUTSY );
  DCSetDyn( VMNC1V, VMNC1V-0.4V,CP, VMNC1V-0.1V, VMNC1V-0.25V, VMNC1V, -0mA,
              0mA, CML1V_OUTSYZ );
DCSetupClose;

DCSetupOpen( SLOW_NOM_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VNM3V, 0V,CP, VNM3V*0.75, VNM3V*0.25, CMOSa3V_INS );
  DCSetDyn( VNM3V, 0V,CP, VNM3V*0.75, VNM3V*0.25, VNM3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( VNM3V, 0V,CP, VNM3V*0.75, VNM3V*0.25, VNM3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 1.8V, 0.0V,CP, 1.350V, 0.450V, TESTINA1V_INS );
  DCSetDyn( 1.8V, 0.0V,CP, 1.350V, 0.450V, 1.170V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VNMC1V, VNMC1V-0.4V,CP, VNMC1V-0.1V, VNMC1V-0.25V, CML1V_INSA );
  DCSetLDOFF( VNMC1V, VNMC1V-0.4V,CP, VNMC1V-0.1V, VNMC1V-0.25V, CML1V_INSAZ );
  DCSetDyn( VNMC1V, VNMC1V-0.4V,CP, VNMC1V-0.1V, VNMC1V-0.25V, VNMC1V, -0mA,
              0mA, CML1V_OUTSY );
  DCSetDyn( VNMC1V, VNMC1V-0.4V,CP, VNMC1V-0.1V, VNMC1V-0.25V, VNMC1V, -0mA,
              0mA, CML1V_OUTSYZ );
DCSetupClose;

DCSetupOpen( SLOW_MAX_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VMX3V, 0V,CP, VMX3V*0.75, VMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VMX3V, 0V,CP, VMX3V*0.75, VMX3V*0.25, VMX3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( VMX3V, 0V,CP, VMX3V*0.75, VMX3V*0.25, VMX3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 1.95V, 0.0V,CP, 1.462V, 0.488V, TESTINA1V_INS );
  DCSetDyn( 1.95V, 0.0V,CP, 1.462V, 0.488V, 1.268V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VMXC1V, VMXC1V-0.4V,CP, VMXC1V-0.1V, VMXC1V-0.25V, CML1V_INSA );
  DCSetLDOFF( VMXC1V, VMXC1V-0.4V,CP, VMXC1V-0.1V, VMXC1V-0.25V, CML1V_INSAZ );
  DCSetDyn( VMXC1V, VMXC1V-0.4V,CP, VMXC1V-0.1V, VMXC1V-0.25V, VMXC1V, -0mA,
              0mA, CML1V_OUTSY );
  DCSetDyn( VMXC1V, VMXC1V-0.4V,CP, VMXC1V-0.1V, VMXC1V-0.25V, VMXC1V, -0mA,
              0mA, CML1V_OUTSYZ );
DCSetupClose;

DCSetupOpen( FAST_NOM_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VNM3V, 0V,CP, VNM3V*0.5, VNM3V*0.5, CMOSa3V_INS );
  DCSetDyn( VNM3V, 0V,CP, VNM3V*0.5, VNM3V*0.5, VNM3V*0.8, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( VNM3V, 0V,CP, VNM3V*0.5, VNM3V*0.5, VNM3V*0.8, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 1.8V, 0.0V,CP, 0.900V, 0.900V, TESTINA1V_INS );
  DCSetDyn( 1.8V, 0.0V,CP, 0.900V, 0.900V, 1.440V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VNMC1V, VNMC1V-0.5V,CP, VNMC1V-0.2V, VNMC1V-0.2V, CML1V_INSA );
  DCSetLDOFF( VNMC1V, VNMC1V-0.5V,CP, VNMC1V-0.2V, VNMC1V-0.2V, CML1V_INSAZ );
  DCSetDyn( VNMC1V, VNMC1V-0.5V,CP, VNMC1V-0.2V, VNMC1V-0.2V, VNMC1V, -0mA,
              0mA, CML1V_OUTSY );
  DCSetDyn( VNMC1V, VNMC1V-0.5V,CP, VNMC1V-0.2V, VNMC1V-0.2V, VNMC1V, -0mA,
              0mA, CML1V_OUTSYZ );
DCSetupClose;

DCSetupOpen( FAST_MIN_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VMN3V, 0V,CP, VMN3V*0.5, VMN3V*0.5, CMOSa3V_INS );
  DCSetDyn( VMN3V, 0V,CP, VMN3V*0.5, VMN3V*0.5, VMN3V*0.8, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( VMN3V, 0V,CP, VMN3V*0.5, VMN3V*0.5, VMN3V*0.8, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 1.65V, 0.0V,CP, 0.825V, 0.825V, TESTINA1V_INS );
  DCSetDyn( 1.65V, 0.0V,CP, 0.825V, 0.825V, 1.320V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VMNC1V, VMNC1V-0.5V,CP, VMNC1V-0.2V, VMNC1V-0.2V, CML1V_INSA );
  DCSetLDOFF( VMNC1V, VMNC1V-0.5V,CP, VMNC1V-0.2V, VMNC1V-0.2V, CML1V_INSAZ );
  DCSetDyn( VMNC1V, VMNC1V-0.5V,CP, VMNC1V-0.2V, VMNC1V-0.2V, VMNC1V, -0mA,
              0mA, CML1V_OUTSY );
  DCSetDyn( VMNC1V, VMNC1V-0.5V,CP, VMNC1V-0.2V, VMNC1V-0.2V, VMNC1V, -0mA,
              0mA, CML1V_OUTSYZ );
DCSetupClose;

DCSetupOpen( FAST_MAX_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VMX3V, 0V,CP, VMX3V*0.5, VMX3V*0.5, CMOSa3V_INS );
  DCSetDyn( VMX3V, 0V,CP, VMX3V*0.5, VMX3V*0.5, VMX3V*0.8, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( VMX3V, 0V,CP, VMX3V*0.5, VMX3V*0.5, VMX3V*0.8, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 1.95V, 0.0V,CP, 0.975V, 0.975V, TESTINA1V_INS );
  DCSetDyn( 1.95V, 0.0V,CP, 0.975V, 0.975V, 1.560V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VMXC1V, VMXC1V-0.5V,CP, VMXC1V-0.2V, VMXC1V-0.2V, CML1V_INSA );
  DCSetLDOFF( VMXC1V, VMXC1V-0.5V,CP, VMXC1V-0.2V, VMXC1V-0.2V, CML1V_INSAZ );
  DCSetDyn( VMXC1V, VMXC1V-0.5V,CP, VMXC1V-0.2V, VMXC1V-0.2V, VMXC1V, -0mA,
              0mA, CML1V_OUTSY );
  DCSetDyn( VMXC1V, VMXC1V-0.5V,CP, VMXC1V-0.2V, VMXC1V-0.2V, VMXC1V, -0mA,
              0mA, CML1V_OUTSYZ );
DCSetupClose;

DCSetupOpen( VDFF_MIN_DC21, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VMN3V, 0V,CP, VMN3V*0.75, VMN3V*0.25, CMOSa3V_INS );
  DCSetDyn( VMN3V, 0V,CP, VMN3V*0.75, VMN3V*0.25, VMN3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( VMN3V, 0V,CP, VMN3V*0.75, VMN3V*0.25, VMN3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 1.65V, 0.0V,CP, 1.238V, 0.413V, TESTINA1V_INS );
  DCSetDyn( 1.65V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 1.5V-VIDLVDSa1V, 0.9V+VIDLVDSa1V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VMNC1V, VMNC1V-0.4V,CP, VMNC1V-0.1V, VMNC1V-0.25V, CML1V_INSA );
  DCSetLDOFF( VMNC1V-VIDCML1V, VMNC1V-0.4V+VIDCML1V,CP, VMNC1V-0.1V,
              VMNC1V-0.25V, CML1V_INSAZ );
  DCSetDyn( VMNC1V, VMNC1V-0.4V,CP, VMNC1V-0.1V, VMNC1V-0.25V, VMNC1V, -0mA,
              0mA, CML1V_OUTSY );
  DCSetDyn( VMNC1V, VMNC1V-0.4V,CP, VMNC1V-0.1V, VMNC1V-0.25V, VMNC1V, -0mA,
              0mA, CML1V_OUTSYZ );
  DCSetOpen( ALL_MUX );
DCSetupClose;

DCSetupOpen( VDFF_MAX_DC21, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VMX3V, 0V,CP, VMX3V*0.75, VMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VMX3V, 0V,CP, VMX3V*0.75, VMX3V*0.25, VMX3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( VMX3V, 0V,CP, VMX3V*0.75, VMX3V*0.25, VMX3V*0.65, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 1.95V, 0.0V,CP, 1.462V, 0.488V, TESTINA1V_INS );
  DCSetDyn( 1.95V, 0.0V,CP, 1.462V, 0.488V, 1.268V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 1.5V, 0.9V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 1.5V-VIDLVDSa1V, 0.9V+VIDLVDSa1V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0.9V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VMXC1V, VMXC1V-0.4V,CP, VMXC1V-0.1V, VMXC1V-0.25V, CML1V_INSA );
  DCSetLDOFF( VMXC1V-VIDCML1V, VMXC1V-0.4V+VIDCML1V,CP, VMXC1V-0.1V,
              VMXC1V-0.25V, CML1V_INSAZ );
  DCSetDyn( VMXC1V, VMXC1V-0.4V,CP, VMXC1V-0.1V, VMXC1V-0.25V, VMXC1V, -0mA,
              0mA, CML1V_OUTSY );
  DCSetDyn( VMXC1V, VMXC1V-0.4V,CP, VMXC1V-0.1V, VMXC1V-0.25V, VMXC1V, -0mA,
              0mA, CML1V_OUTSYZ );
  DCSetOpen( ALL_MUX );
DCSetupClose;

(*
*******************************************************************
****            FORMAT 1                                     ****
*
*    Scanchk VBOX_ALL                                             *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_1, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_BPLNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_BPL_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C6XX_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C6XX_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C666_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C666_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ONCKI );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CICLK );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CTLID_RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATA_V_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATA_VALID );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ES_SPILLP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, ES_SPILLN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATVAL_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATVAL_ES_ );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC166P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC166N );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK13 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK12 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK11 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK10 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK9 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK8 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK7 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK6 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK5 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK4 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, T_CLK3 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK2 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK1 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK0 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTZ_HSI );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC622P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC622N );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 2                                     ****
*
*    hzv tgl thr clv tdv                                          *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_2, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 3                                     ****
*
*    DLP53_1 DLP53_11 DLP53_12 DLP53_13 DLP53_14                  *
*    DLP53_16 DLP53_17 DLP53_18 DLP53_19 DLP53_2                  *
*    DLP53_3 DLP53_4 DLP53_6 DLP53_7 DLP53_8                      *
*    DLP53_9                                                      *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_3, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 4                                     ****
*
*    RX_SLOW                                                      *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_4, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK0 );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 5                                     ****
*
*    TC_PLL                                                       *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_5, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 6                                     ****
*
*    TX_2                                                         *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_6, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC622P );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC622N );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 7                                     ****
*
*    dch DCH_ALL                                                  *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_7, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 8                                     ****
*
*    die                                                          *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_8, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TCK );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, TDO ); 
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 9                                     ****
*
*    BURNIN                                                       *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_9, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_BPLNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_BPL_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C6XX_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C6XX_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C666_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C666_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ONCKI );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CICLK );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CTLID_RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATA_V_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATA_VALID );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ES_SPILLP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, ES_SPILLN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATVAL_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATVAL_ES_ );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC166P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC166N );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK13 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK12 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK11 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK10 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK9 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK8 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK7 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK6 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK5 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK4 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, T_CLK3 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK2 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK1 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK0 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTZ_HSI );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC622P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC622N );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 10                                     ****
*
*    IDQ LU                                                       *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_10, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_BPLNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_BPL_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C6XX_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C6XX_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C666_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C666_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ONCKI );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CICLK );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CTLID_RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATA_V_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATA_VALID );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ES_SPILLP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, ES_SPILLN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATVAL_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATVAL_ES_ );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC166P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC166N );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK13 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK12 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK11 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK10 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK9 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK8 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK7 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK6 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK5 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK4 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, T_CLK3 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK2 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK1 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK0 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC622P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC622N );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 11                                     ****
*
*    RX_1_1                                                       *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_11, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK2 );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
  FormatSetExit(S_LOW, LVDSa1V_INSA);  {keep inputs glitch free  rev05a}
  FormatSetExit(s_LOW, LVDSa1V_INSAZ); {keep inputs glitch free  rev05a}
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 12                                     ****
*
*    RX_622_3305 RX_622_6610                                      *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_12, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INP15 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INP14 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INP13 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INP12 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INP11 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INP10 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INP9 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INP8 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INP7 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INP6 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INP5 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INP4 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INP3 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INP2 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INP1 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INP0 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INN15 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INN14 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INN13 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INN12 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INN11 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INN10 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INN9 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INN8 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INN7 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INN6 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INN5 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INN4 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INN3 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, D622_INN2 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INN1 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, D622_INN0 );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
  FormatSetExit(S_LOW, LVDSa1V_INSA);  {keep inputs glitch free  rev05a}
  FormatSetExit(s_LOW, LVDSa1V_INSAZ); {keep inputs glitch free  rev05a}
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 13                                     ****
*
*    TC_PLL50                                                     *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_13, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 14                                     ****
*
*    TC_PLL83                                                     *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_14, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
  FormatSetExit(S_LOW, LVDSa1V_INSA);  {keep inputs glitch free  rev05a}
  FormatSetExit(s_LOW, LVDSa1V_INSAZ); {keep inputs glitch free  rev05a}
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 15                                     ****
*
*    TX_1_1 TX_1_10 TX_1_11 TX_1_12 TX_1_13                       *
*    TX_1_14 TX_1_15 TX_1_16 TX_1_17 TX_1_18                      *
*    TX_1_19 TX_1_2 TX_1_3 TX_1_4 TX_1_5                          *
*    TX_1_6 TX_1_7 TX_1_8 TX_1_9                                  *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_15, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC622P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC622N );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
  FormatSetExit(S_LOW, LVDSa1V_INSA);  {keep inputs glitch free  rev05a}
  FormatSetExit(s_LOW, LVDSa1V_INSAZ); {keep inputs glitch free  rev05a}
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 16                                     ****
*
*    TX_3                                                         *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_16, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, T_CLK5 );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 17                                     ****
*
*    Scan_AC1 Scan_AC2 Scan_AC3 Scan_AC4                          *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_17, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_BPLNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_BPL_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C6XX_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C6XX_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C666_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C666_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ONCKI );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CICLK );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CTLID_RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATA_V_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATA_VALID );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ES_SPILLP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, ES_SPILLN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATVAL_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATVAL_ES_ );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC166P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC166N );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK13 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK12 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK11 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK10 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK9 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK8 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK7 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK6 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK5 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK4 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, T_CLK3 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK2 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK1 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK0 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTZ_HSI );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC622P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC622N );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;

{rev01c Begin only execute at probe }
  CASE TIDeviceType OF
    PB_2 :
      BEGIN
(*
*******************************************************************
****            FORMAT 18                                     ****
*
*    pat_1_tclk3_tdl pat_2_tclk3_tdl pat_3_tclk3_tdl pat_4_tclk3_tdl pat_5_tclk3
_tdl  *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_18, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_SBZ, s_RTO, s_EDGE, T_CLK3 ); {rev01c}
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_BPLNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_BPL_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C6XX_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C6XX_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C666_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C666_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ONCKI );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, CICLK );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CTLID_RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATA_V_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATA_VALID );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ES_SPILLP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, ES_SPILLN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATVAL_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATVAL_ES_ );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC166P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC166N );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK13 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK12 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK11 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK10 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK9 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK8 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK7 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK6 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, T_CLK5 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK4 );
{  FormatSetInOut( s_OFF, s_RTO, s_EDGE, T_CLK3 );rev01c}
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK2 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK1 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK0 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTZ_HSI );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC622P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC622N );
 { FormatSetInOut( s_OFF, s_RTZ, s_EDGE, M_T_CLK3 );rev01c}
  FormatSetInOut( s_OFF, s_NR, s_EDGE, M_T_CLK3 ); {rev01c}
  FormatSetMux( s_IN , MUX_PINS18);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 19                                     ****
*
*    pat_1_tclk5_tdl                                              *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_19, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_SBZ, s_RTO, s_EDGE, T_CLK5 ); {rev01c}
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_BPLNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_BPL_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C155_CSDNP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C155_CSD_I );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C6XX_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C6XX_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, C666_EXTP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, C666_EXTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ONCKI );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, CICLK );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CTLID_RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATA_V_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATA_VALID );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, ES_SPILLP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, ES_SPILLN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, DATVAL_INP );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, DATVAL_ES_ );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTN );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC166P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC166N );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK13 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK12 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK11 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK10 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK9 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK8 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK7 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK6 );
 { FormatSetInOut( s_OFF, s_RTO, s_EDGE, T_CLK5 );rev01c }
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK4 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, T_CLK3 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK2 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK1 );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, T_CLK0 );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, RSTZ_HSI );
  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, TC622P );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, TC622N );
{  FormatSetInOut( s_OFF, s_RTZ, s_EDGE, M_T_CLK5 );rev01c }
  FormatSetInOut( s_OFF, s_NR, s_EDGE, M_T_CLK5 ); {rev01c}
  FormatSetMux( s_IN , MUX_PINS19);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;

      END;
  END; {case of pin_maps}

{rev01c End only execute at probe }

(*
*******************************************************************
****            FORMAT 20                                     ****
*
*    BIST                                                         *
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_20, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetInOut( s_OFF, s_RTO, s_EDGE, CICLK );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;
(*
*******************************************************************
****            FORMAT 21                                     ****
*
*
*******************************************************************
*)

FormatSetupOpen( FORMAT_21, DEFAULT_FORMAT_TABLE );
  FormatSetInOut( s_OFF, s_NR, s_EDGE, ALL_PINS );
  FormatSetForce( s_HIGH, LVDSa1V_OUTSY);
  FormatSetForce( s_HIGH, LVDSa1V_OUTSYZ);
  FormatSetInOut( s_OFF, s_NR, s_OFF, LVDSb1V_REFS);
  FormatSetForce( s_HIGH, CML1V_OUTS);
  FormatSetForce( s_HIGH, CML1V_OUTSY);
  FormatSetForce( s_HIGH, CML1V_OUTSYZ);
FormatSetupClose;

FormatSetupOpen( FORMAT_DIFFBHI, DEFAULT_FORMAT_TABLE );
  FormatSetForce( s_LOW, LVDSa1V_INSA);
  FormatSetForce( s_LOW, CML1V_INSA);
FormatSetupClose;

FormatSetupOpen( FORMAT_DIFFAHI, DEFAULT_FORMAT_TABLE );
  FormatSetForce( s_LOW, LVDSa1V_INSAZ);
  FormatSetForce( s_LOW, CML1V_INSAZ);
FormatSetupClose;

FormatSetupOpen( FORMAT_DIFFBLO, DEFAULT_FORMAT_TABLE );
  FormatSetForce( s_HIGH, LVDSa1V_INSA);
  FormatSetForce( s_HIGH, CML1V_INSA);
FormatSetupClose;

FormatSetupOpen( FORMAT_DIFFALO, DEFAULT_FORMAT_TABLE );
  FormatSetForce( s_HIGH, LVDSa1V_INSAZ);
  FormatSetForce( s_HIGH, CML1V_INSAZ);
FormatSetupClose;

ACSetupOpen( GOI_AC, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 7.921US,
             GOI_DC, FORMAT_10 );
  ACSetInOut( IN0_TS10_ACG, 0NS, 0NS, 7.916US, 0NS, 5NS );
  ACSetInOut( IN1_TS10_ACG, 50.00NS, 50.00NS, 7.916US, 0NS, 5NS );
  ACSetInOut( IN2_TS10_ACG, 50.00NS, 50.00NS, 7.916US, 0NS, 5NS );
  ACSetInOut( IN3_TS10_ACG, 50.00NS, 50.00NS, 7.916US, 0NS, 5NS );
  ACSetInOut( IN4_TS10_ACG, 35.00NS, 35.00NS, 7.916US, 0NS, 5NS );
  ACSetInOut( IO1_TS10_ACG, 0NS, 0NS, 7.916US, 30.00NS-TGB, 35.000NS+TGB );
  ACSetInOut( OUT1_TS10_ACG, 0NS, 0NS, 7.916US, 30.00NS-TGB, 35.000NS+TGB );

  CycleSet( NORMAL, IN0_TS10_ACG, IN0_TS10);
  CycleSet( NORMAL, IN1_TS10_ACG, IN1_TS10);
  CycleSet( NORMAL, IN2_TS10_ACG, IN2_TS10);
  CycleSet( NORMAL, IN3_TS10_ACG, IN3_TS10);
  CycleSet( NORMAL, IN4_TS10_ACG, IN4_TS10);
  CycleSet( NORMAL, IO1_TS10_ACG, IO1_TS10);
  CycleSet( NORMAL, OUT1_TS10_ACG, OUT1_TS10);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 1                                 ****
*
*    Scanchk VBOX_ALL                                             *
*
*******************************************************************
*)

ACSetupOpen( TIMING_1, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 120.00NS, SLOW_MAX_DC, FORMAT_1 );
  ACSetInOut( IN0_TS1_ACG, 0NS, 0NS, 115.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS1_ACG, 50.00NS, 50.00NS, 60.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS1_ACG, 50.00NS, 50.00NS, 60.000NS, 0NS, 5NS);
  ACSetInOut( IN3_TS1_ACG, 50.00NS, 50.00NS, 70.000NS, 0NS, 5NS);
  ACSetInOut( IN4_TS1_ACG, 35.00NS, 35.00NS, 45.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS1_ACG, 0NS, 0NS, 115.000NS, 30.00NS-TGB, 35.000NS+TGB);
  ACSetInOut( OUT1_TS1_ACG, 0NS, 0NS, 115.000NS, 30.00NS-TGB, 35.000NS+TGB);

  CycleSet( NORMAL, IN0_TS1_ACG, IN0_TS1);
  CycleSet( NORMAL, IN1_TS1_ACG, IN1_TS1);
  CycleSet( NORMAL, IN2_TS1_ACG, IN2_TS1);
  CycleSet( NORMAL, IN3_TS1_ACG, IN3_TS1);
  CycleSet( NORMAL, IN4_TS1_ACG, IN4_TS1);
  CycleSet( NORMAL, IO1_TS1_ACG, IO1_TS1);
  CycleSet( NORMAL, OUT1_TS1_ACG, OUT1_TS1);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 2                                 ****
*
*    hzv tgl thr clv tdv                                          *
*
*******************************************************************
*)

ACSetupOpen( TIMING_2, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 150.00NS, SLOW_MAX_DC, FORMAT_2 );
  ACSetInOut( IN0_TS2_ACG, 0NS, 0NS, 145.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS2_ACG, 0NS, 0NS, 145.000NS, 140.00NS-TGB, 145.000NS+TGB);
  ACSetInOut( OUT1_TS2_ACG, 0NS, 0NS, 145.000NS, 140.00NS-TGB, 145.000NS+TGB);

  CycleSet( NORMAL, IN0_TS2_ACG, IN0_TS2);
  CycleSet( NORMAL, IO1_TS2_ACG, IO1_TS2);
  CycleSet( NORMAL, OUT1_TS2_ACG, OUT1_TS2);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 3                                 ****
*
*    DLP53_1 DLP53_11 DLP53_12 DLP53_13 DLP53_14                  *
*    DLP53_16 DLP53_17 DLP53_18 DLP53_19 DLP53_2                  *
*    DLP53_3 DLP53_4 DLP53_6 DLP53_7 DLP53_8                      *
*    DLP53_9                                                      *
*
*******************************************************************
*)

ACSetupOpen( TIMING_3, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 100.00NS, SLOW_MAX_DC, FORMAT_3 );
  ACSetInOut( IN0_TS3_ACG, 0NS, 0NS, 95.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS3_ACG, 15.00NS, 15.00NS, 55.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS3_ACG, 15.00NS, 15.00NS, 55.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS3_ACG, 0NS, 0NS, 95.000NS, 90.00NS-TGB, 95.000NS+TGB);
  ACSetInOut( OUT1_TS3_ACG, 0NS, 0NS, 95.000NS, 90.00NS-TGB, 95.000NS+TGB);

  CycleSet( NORMAL, IN0_TS3_ACG, IN0_TS3);
  CycleSet( NORMAL, IN1_TS3_ACG, IN1_TS3);
  CycleSet( NORMAL, IN2_TS3_ACG, IN2_TS3);
  CycleSet( NORMAL, IO1_TS3_ACG, IO1_TS3);
  CycleSet( NORMAL, OUT1_TS3_ACG, OUT1_TS3);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 4                                 ****
*
*    RX_SLOW                                                      *
*
*******************************************************************
*)

ACSetupOpen( TIMING_4, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 100.00NS, SLOW_MAX_DC, FORMAT_4 );
  ACSetInOut( IN0_TS4_ACG, 0NS, 0NS, 95.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS4_ACG, 10.00NS, 10.00NS, 60.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS4_ACG, 10.00NS, 10.00NS, 60.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS4_ACG, 0NS, 0NS, 95.000NS, 90.00NS-TGB, 95.000NS+TGB);
  ACSetInOut( OUT1_TS4_ACG, 0NS, 0NS, 95.000NS, 90.00NS-TGB, 95.000NS+TGB);

  CycleSet( NORMAL, IN0_TS4_ACG, IN0_TS4);
  CycleSet( NORMAL, IN1_TS4_ACG, IN1_TS4);
  CycleSet( NORMAL, IN2_TS4_ACG, IN2_TS4);
  CycleSet( NORMAL, IO1_TS4_ACG, IO1_TS4);
  CycleSet( NORMAL, OUT1_TS4_ACG, OUT1_TS4);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 5                                 ****
*
*    TC_PLL                                                       *
*
*******************************************************************
*)

ACSetupOpen( TIMING_5, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 100.00NS, SLOW_MAX_DC, FORMAT_5 );
  ACSetInOut( IN0_TS5_ACG, 0NS, 0NS, 95.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS5_ACG, 30.00NS, 30.00NS, 60.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS5_ACG, 30.00NS, 30.00NS, 60.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS5_ACG, 0NS, 0NS, 95.000NS, 90.00NS-TGB, 95.000NS+TGB);
  ACSetInOut( OUT1_TS5_ACG, 0NS, 0NS, 95.000NS, 90.00NS-TGB, 95.000NS+TGB);

  CycleSet( NORMAL, IN0_TS5_ACG, IN0_TS5);
  CycleSet( NORMAL, IN1_TS5_ACG, IN1_TS5);
  CycleSet( NORMAL, IN2_TS5_ACG, IN2_TS5);
  CycleSet( NORMAL, IO1_TS5_ACG, IO1_TS5);
  CycleSet( NORMAL, OUT1_TS5_ACG, OUT1_TS5);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 6                                 ****
*
*    TX_2                                                         *
*
*******************************************************************
*)

ACSetupOpen( TIMING_6, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 100.00NS, SLOW_MAX_DC, FORMAT_6 );
  ACSetInOut( IN0_TS6_ACG, 0NS, 0NS, 95.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS6_ACG, 0.0NS, 0.0NS, 50.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS6_ACG, 0.0NS, 0.0NS, 50.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS6_ACG, 0NS, 0NS, 95.000NS, 90.00NS-TGB, 95.000NS+TGB);
  ACSetInOut( OUT1_TS6_ACG, 0NS, 0NS, 95.000NS, 90.00NS-TGB, 95.000NS+TGB);

  CycleSet( NORMAL, IN0_TS6_ACG, IN0_TS6);
  CycleSet( NORMAL, IN1_TS6_ACG, IN1_TS6);
  CycleSet( NORMAL, IN2_TS6_ACG, IN2_TS6);
  CycleSet( NORMAL, IO1_TS6_ACG, IO1_TS6);
  CycleSet( NORMAL, OUT1_TS6_ACG, OUT1_TS6);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 7                                 ****
*
*    dch DCH_ALL                                                  *
*
*******************************************************************
*)

ACSetupOpen( TIMING_7, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 1.00US, SLOW_MAX_DC, FORMAT_7 );
  ACSetInOut( IN0_TS7_ACG, 0NS, 0NS, 995.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS7_ACG, 0NS, 0NS, 995.000NS, 990.00NS-TGB, 995.000NS+TGB);
  ACSetInOut( OUT1_TS7_ACG, 0NS, 0NS, 995.000NS, 990.00NS-TGB, 995.000NS+TGB);

  CycleSet( NORMAL, IN0_TS7_ACG, IN0_TS7);
  CycleSet( NORMAL, IO1_TS7_ACG, IO1_TS7);
  CycleSet( NORMAL, OUT1_TS7_ACG, OUT1_TS7);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 8                                 ****
*
*    die                                                          *
*
*******************************************************************
*)

ACSetupOpen( TIMING_8, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 200.00NS, SLOW_MAX_DC, FORMAT_8 );
  ACSetInOut( IN0_TS8_ACG, 0NS, 0NS, 195.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS8_ACG, 0.0NS, 0.0NS, 100.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS8_ACG, 0NS, 0NS, 195.000NS, 190.00NS-TGB, 195.000NS+TGB);
  ACSetInOut( OUT1_TS8_ACG, 0NS, 0NS, 195.000NS, 190.00NS-TGB, 195.000NS+TGB);

  CycleSet( NORMAL, IN0_TS8_ACG, IN0_TS8);
  CycleSet( NORMAL, IN1_TS8_ACG, IN1_TS8);
  CycleSet( NORMAL, IO1_TS8_ACG, IO1_TS8);
  CycleSet( NORMAL, OUT1_TS8_ACG, OUT1_TS8);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 9                                 ****
*
*    BURNIN                                                       *
*
*******************************************************************
*)

ACSetupOpen( TIMING_9, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 120.00NS, SLOW_MAX_DC, FORMAT_9 );
  ACSetInOut( IN0_TS9_ACG, 0NS, 0NS, 115.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS9_ACG, 50.00NS, 50.00NS, 70.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS9_ACG, 50.00NS, 50.00NS, 70.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS9_ACG, 0NS, 0NS, 115.000NS, 40.00NS-TGB, 45.000NS+TGB);
  ACSetInOut( OUT1_TS9_ACG, 0NS, 0NS, 115.000NS, 40.00NS-TGB, 45.000NS+TGB);

  CycleSet( NORMAL, IN0_TS9_ACG, IN0_TS9);
  CycleSet( NORMAL, IN1_TS9_ACG, IN1_TS9);
  CycleSet( NORMAL, IN2_TS9_ACG, IN2_TS9);
  CycleSet( NORMAL, IO1_TS9_ACG, IO1_TS9);
  CycleSet( NORMAL, OUT1_TS9_ACG, OUT1_TS9);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 10                                 ****
*
*    IDQ LU                                                       *
*
*******************************************************************
*)

ACSetupOpen( TIMING_10, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 300.00NS, SLOW_MAX_DC, FORMAT_10 );
  ACSetInOut( IN0_TS10_ACG, 0NS, 0NS, 295.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS10_ACG, 50.00NS, 50.00NS, 60.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS10_ACG, 50.00NS, 50.00NS, 60.000NS, 0NS, 5NS);
  ACSetInOut( IN3_TS10_ACG, 50.00NS, 50.00NS, 70.000NS, 0NS, 5NS);
  ACSetInOut( IN4_TS10_ACG, 35.00NS, 35.00NS, 45.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS10_ACG, 0NS, 0NS, 295.000NS, 30.00NS-TGB, 35.000NS+TGB);
  ACSetInOut( OUT1_TS10_ACG, 0NS, 0NS, 295.000NS, 30.00NS-TGB, 35.000NS+TGB);

  CycleSet( NORMAL, IN0_TS10_ACG, IN0_TS10);
  CycleSet( NORMAL, IN1_TS10_ACG, IN1_TS10);
  CycleSet( NORMAL, IN2_TS10_ACG, IN2_TS10);
  CycleSet( NORMAL, IN3_TS10_ACG, IN3_TS10);
  CycleSet( NORMAL, IN4_TS10_ACG, IN4_TS10);
  CycleSet( NORMAL, IO1_TS10_ACG, IO1_TS10);
  CycleSet( NORMAL, OUT1_TS10_ACG, OUT1_TS10);
ACSetupClose;
{VPLUS_FIX_TIMING}{ begin

(*
*******************************************************************
****            TIMING SET 11                                 ****
*
*    RX_1_1                                                       *
*
*******************************************************************
*)

ACSetupOpen( TIMING_11, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 6.00NS, FAST_MAX_DC, FORMAT_11 );
  ACSetInOut( IN0_TS11_ACG, 0NS, 0NS, 1.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS11_ACG, 2.00NS, 2.00NS, 5.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS11_ACG, 2.00NS, 2.00NS, 5.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS11_ACG, 0NS, 0NS, 1.000NS, 2.60NS-TGB, 7.600NS+TGB);
  ACSetInOut( OUT1_TS11_ACG, 0NS, 0NS, 1.000NS, 5.10NS-TGB, 10.100NS+TGB);
  ACSetInOut( OUT2_TS11_ACG, 0NS, 0NS, 1.000NS, 3.60NS-TGB, 8.600NS+TGB);

  CycleSet( NORMAL, IN0_TS11_ACG, IN0_TS11);
  CycleSet( NORMAL, IN1_TS11_ACG, IN1_TS11);
  CycleSet( NORMAL, IN2_TS11_ACG, IN2_TS11);
  CycleSet( NORMAL, IO1_TS11_ACG, IO1_TS11);
  CycleSet( NORMAL, OUT1_TS11_ACG, OUT1_TS11);
  CycleSet( NORMAL, OUT2_TS11_ACG, OUT2_TS11);
ACSetupClose;{}
{VPLUS_FIX_TIMING} end}
{}(*
{}*******************************************************************
{}****            TIMING SET 11                                 ****
{}*
{}*    RX_1_1                                                       *
{}*
{}*******************************************************************
{}*)
{}ACSetupOpen( TIMING_11, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
{}             DEFAULT_PERIOD_TABLE, 6.00NS, FAST_MAX_DC, FORMAT_11 );
{}  ACSetInOut(IN0_TS11_ACG, 0NS, 0NS, 1NS, 0NS, 0NS+6NS/2);
{}  ACSetInOut(IN1_TS11_ACG, 2NS, 2NS, 5NS, 0NS, 0NS+6NS/2);
{}  ACSetInOut(IN2_TS11_ACG, 2NS, 2NS, 5NS, 0NS, 0NS+6NS/2);
{}  ACSetInOut(IO1_TS11_ACG, 0NS, 0NS, 1NS, 2.6NS, 2.6NS+6NS/2);
{}  ACSetInOut(OUT1_TS11_ACG, -1S, 0NS, 1NS, 5.1NS, 5.1NS+6NS/2);
{}  ACSetInOut(OUT2_TS11_ACG, -1S, 0NS, 1NS, 3.6NS, 3.6NS+6NS/2);
{}  CycleSet( NORMAL, IN0_TS11_ACG, IN0_TS11);
{}  CycleSet( NORMAL, IN1_TS11_ACG, IN1_TS11);
{}  CycleSet( NORMAL, IN2_TS11_ACG, IN2_TS11);
{}  CycleSet( NORMAL, IO1_TS11_ACG, IO1_TS11);
{}  CycleSet( NORMAL, OUT1_TS11_ACG, OUT1_TS11);
{}  CycleSet( NORMAL, OUT2_TS11_ACG, OUT2_TS11);
{}ACSetupClose;
{VPLUS_FIX_TIMING}{ begin

(*
*******************************************************************
****            TIMING SET 12                                 ****
*
*    RX_622_3305 RX_622_6610                                      *
*
*******************************************************************
*)

ACSetupOpen( TIMING_12, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 3.20NS, FAST_MAX_DC, FORMAT_12 );
  ACSetInOut( IN0_TS12_ACG, 0NS, 0NS, -1.800NS, 0NS, 5NS);
  ACSetInOut( IN1_TS12_ACG, 0.0NS, 0.0NS, 1.600NS, 0NS, 5NS);
  ACSetInOut( IN2_TS12_ACG, 0.0NS, 0.0NS, 1.600NS, 0NS, 5NS);
  ACSetInOut( IO1_TS12_ACG, 0NS, 0NS, -1.800NS, 2.50NS-TGB, 7.500NS+TGB);
  ACSetInOut( OUT1_TS12_ACG, 0NS, 0NS, -1.800NS, 2.50NS-TGB, 7.500NS+TGB);

  CycleSet( NORMAL, IN0_TS12_ACG, IN0_TS12);
  CycleSet( NORMAL, IN1_TS12_ACG, IN1_TS12);
  CycleSet( NORMAL, IN2_TS12_ACG, IN2_TS12);
  CycleSet( NORMAL, IO1_TS12_ACG, IO1_TS12);
  CycleSet( NORMAL, OUT1_TS12_ACG, OUT1_TS12);
ACSetupClose;{}
{VPLUS_FIX_TIMING} end}
{}(*
{}*******************************************************************
{}****            TIMING SET 12                                 ****
{}*
{}*    RX_622_3305 RX_622_6610                                      *
{}*
{}*******************************************************************
{}*)
{}ACSetupOpen( TIMING_12, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
{}             DEFAULT_PERIOD_TABLE, 3.20NS, FAST_MAX_DC, FORMAT_12 );
{}  ACSetInOut(IN0_TS12_ACG, 0NS, 0NS, 0NS+3.2NS/2, 0NS, 0NS+3.2NS/2);
{}  ACSetInOut(IN1_TS12_ACG, 0NS, 0NS, 1.6NS, 0NS, 0NS+3.2NS/2);
{}  ACSetInOut(IN2_TS12_ACG, 0NS, 0NS, 1.6NS, 0NS, 0NS+3.2NS/2);
{}  ACSetInOut(IO1_TS12_ACG, 0NS, 0NS, 0NS+3.2NS/2, 2.5NS, 2.5NS+3.2NS/2);
{}  ACSetInOut(OUT1_TS12_ACG, -1S, 0NS, 0NS+3.2NS/2, 2.5NS, 2.5NS+3.2NS/2);
{}  CycleSet( NORMAL, IN0_TS12_ACG, IN0_TS12);
{}  CycleSet( NORMAL, IN1_TS12_ACG, IN1_TS12);
{}  CycleSet( NORMAL, IN2_TS12_ACG, IN2_TS12);
{}  CycleSet( NORMAL, IO1_TS12_ACG, IO1_TS12);
{}  CycleSet( NORMAL, OUT1_TS12_ACG, OUT1_TS12);
{}ACSetupClose;
(*
*******************************************************************
****            TIMING SET 13                                 ****
*
*    TC_PLL50                                                     *
*
*******************************************************************
*)

ACSetupOpen( TIMING_13, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 21.40NS, FAST_MAX_DC, FORMAT_13 );
  ACSetInOut( IN0_TS13_ACG, 0NS, 0NS, 16.400NS, 0NS, 5NS);
  ACSetInOut( IN1_TS13_ACG, 5.00NS, 5.00NS, 15.700NS, 0NS, 5NS);
  ACSetInOut( IN2_TS13_ACG, 5.00NS, 5.00NS, 15.700NS, 0NS, 5NS);
  ACSetInOut( IO1_TS13_ACG, 0NS, 0NS, 16.400NS, 23.00NS-TGB, 28.000NS+TGB);
  ACSetInOut( OUT1_TS13_ACG, 0NS, 0NS, 16.400NS, 23.00NS-TGB, 28.000NS+TGB);

  CycleSet( NORMAL, IN0_TS13_ACG, IN0_TS13);
  CycleSet( NORMAL, IN1_TS13_ACG, IN1_TS13);
  CycleSet( NORMAL, IN2_TS13_ACG, IN2_TS13);
  CycleSet( NORMAL, IO1_TS13_ACG, IO1_TS13);
  CycleSet( NORMAL, OUT1_TS13_ACG, OUT1_TS13);
ACSetupClose;
{VPLUS_FIX_TIMING}{ begin

(*
*******************************************************************
****            TIMING SET 14                                 ****
*
*    TC_PLL83                                                     *
*
*******************************************************************
*)

ACSetupOpen( TIMING_14, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 6.50NS, FAST_MAX_DC, FORMAT_14 );
  ACSetInOut( IN0_TS14_ACG, 0NS, 0NS, 1.500NS, 0NS, 5NS);
  ACSetInOut( IN1_TS14_ACG, 2.00NS, 2.00NS, 5.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS14_ACG, 2.00NS, 2.00NS, 5.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS14_ACG, 0NS, 0NS, 1.500NS, 2.15NS-TGB, 7.150NS+TGB);
  ACSetInOut( OUT1_TS14_ACG, 0NS, 0NS, 1.500NS, 5.15NS-TGB, 10.150NS+TGB);
  ACSetInOut( OUT2_TS14_ACG, 0NS, 0NS, 1.500NS, 2.00NS-TGB, 7.000NS+TGB);

  CycleSet( NORMAL, IN0_TS14_ACG, IN0_TS14);
  CycleSet( NORMAL, IN1_TS14_ACG, IN1_TS14);
  CycleSet( NORMAL, IN2_TS14_ACG, IN2_TS14);
  CycleSet( NORMAL, IO1_TS14_ACG, IO1_TS14);
  CycleSet( NORMAL, OUT1_TS14_ACG, OUT1_TS14);
  CycleSet( NORMAL, OUT2_TS14_ACG, OUT2_TS14);
ACSetupClose;{}
{VPLUS_FIX_TIMING} end}
{}(*
{}*******************************************************************
{}****            TIMING SET 14                                 ****
{}*
{}*    TC_PLL83                                                     *
{}*
{}*******************************************************************
{}*)
{}ACSetupOpen( TIMING_14, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
{}             DEFAULT_PERIOD_TABLE, 6.50NS, FAST_MAX_DC, FORMAT_14 );
{}  ACSetInOut(IN0_TS14_ACG, 0NS, 0NS, 1.5NS, 0NS, 0NS+6.5NS/2);
{}  ACSetInOut(IN1_TS14_ACG, 2NS, 2NS, 5NS, 0NS, 0NS+6.5NS/2);
{}  ACSetInOut(IN2_TS14_ACG, 2NS, 2NS, 5NS, 0NS, 0NS+6.5NS/2);
{}  ACSetInOut(IO1_TS14_ACG, 0NS, 0NS, 1.5NS, 2.15NS, 2.15NS+6.5NS/2);
{}  ACSetInOut(OUT1_TS14_ACG, -1S, 0NS, 1.5NS, 5.15NS, 5.15NS+6.5NS/2);
{}  ACSetInOut(OUT2_TS14_ACG, -1S, 0NS, 1.5NS, 2NS, 2NS+6.5NS/2);
{}  CycleSet( NORMAL, IN0_TS14_ACG, IN0_TS14);
{}  CycleSet( NORMAL, IN1_TS14_ACG, IN1_TS14);
{}  CycleSet( NORMAL, IN2_TS14_ACG, IN2_TS14);
{}  CycleSet( NORMAL, IO1_TS14_ACG, IO1_TS14);
{}  CycleSet( NORMAL, OUT1_TS14_ACG, OUT1_TS14);
{}  CycleSet( NORMAL, OUT2_TS14_ACG, OUT2_TS14);
{}ACSetupClose;
{VPLUS_FIX_TIMING}{ begin

(*
*******************************************************************
****            TIMING SET 15                                 ****
*
*    TX_1_1 TX_1_10 TX_1_11 TX_1_12 TX_1_13                       *
*    TX_1_14 TX_1_15 TX_1_16 TX_1_17 TX_1_18                      *
*    TX_1_19 TX_1_2 TX_1_3 TX_1_4 TX_1_5                          *
*    TX_1_6 TX_1_7 TX_1_8 TX_1_9                                  *
*
*******************************************************************
*)

ACSetupOpen( TIMING_15, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 1.50NS, FAST_MAX_DC, FORMAT_15 );
  ACSetInOut( IN0_TS15_ACG, 0NS, 0NS, -3.500NS, 0NS, 5NS);
  ACSetInOut( IN1_TS15_ACG, 250.00PS, 250.00PS, 1.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS15_ACG, 250.00PS, 250.00PS, 1.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS15_ACG, 0NS, 0NS, -3.500NS, 1.00NS-TGB, 6.000NS+TGB);
  ACSetInOut( OUT1_TS15_ACG, 0NS, 0NS, -3.500NS, 1.00NS-TGB, 6.000NS+TGB);

  CycleSet( NORMAL, IN0_TS15_ACG, IN0_TS15);
  CycleSet( NORMAL, IN1_TS15_ACG, IN1_TS15);
  CycleSet( NORMAL, IN2_TS15_ACG, IN2_TS15);
  CycleSet( NORMAL, IO1_TS15_ACG, IO1_TS15);
  CycleSet( NORMAL, OUT1_TS15_ACG, OUT1_TS15);
ACSetupClose;{}
{VPLUS_FIX_TIMING} end}
{}(*
{}*******************************************************************
{}****            TIMING SET 15                                 ****
{}*
{}*    TX_1_1 TX_1_10 TX_1_11 TX_1_12 TX_1_13                       *
{}*    TX_1_14 TX_1_15 TX_1_16 TX_1_17 TX_1_18                      *
{}*    TX_1_19 TX_1_2 TX_1_3 TX_1_4 TX_1_5                          *
{}*    TX_1_6 TX_1_7 TX_1_8 TX_1_9                                  *
{}*
{}*******************************************************************
{}*)
{}ACSetupOpen( TIMING_15, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
{}             DEFAULT_PERIOD_TABLE, 1.50NS, FAST_MAX_DC, FORMAT_15 );
{}  ACSetInOut(IN0_TS15_ACG, 0NS, 0NS, 0NS+1.5NS/2, 0NS, 0NS+1.5NS/2);
{}  ACSetInOut(IN1_TS15_ACG, 250PS, 250PS, 1NS, 0NS, 0NS+1.5NS/2);
{}ACSetInOut(IN2_TS15_ACG, 250PS, 250PS, 1NS+100PS, 0NS, 0NS+1.5NS/2);{rev04a}
{}  ACSetInOut(IO1_TS15_ACG, 0NS, 0NS, 0NS+1.5NS/2, 1NS, 1NS+1.5NS/2);
{}  ACSetInOut(OUT1_TS15_ACG, -1S, 0NS, 0NS+1.5NS/2, 1NS, 1NS+1.5NS/2);
{}  CycleSet( NORMAL, IN0_TS15_ACG, IN0_TS15);
{}  CycleSet( NORMAL, IN1_TS15_ACG, IN1_TS15);
{}  CycleSet( NORMAL, IN2_TS15_ACG, IN2_TS15);
{}  CycleSet( NORMAL, IO1_TS15_ACG, IO1_TS15);
{}  CycleSet( NORMAL, OUT1_TS15_ACG, OUT1_TS15);
{}ACSetupClose;
(*
*******************************************************************
****            TIMING SET 16                                 ****
*
*    TX_3                                                         *
*
*******************************************************************
*)

ACSetupOpen( TIMING_16, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 12.00NS, FAST_MAX_DC, FORMAT_16 );
  ACSetInOut( IN0_TS16_ACG, 0NS, 0NS, 7.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS16_ACG, 1.00NS, 1.00NS, 7.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS16_ACG, 0NS, 0NS, 7.000NS, 11.90NS-TGB, 16.900NS+TGB);
  ACSetInOut( OUT1_TS16_ACG, 0NS, 0NS, 7.000NS, 11.90NS-TGB, 16.900NS+TGB);

  CycleSet( NORMAL, IN0_TS16_ACG, IN0_TS16);
  CycleSet( NORMAL, IN1_TS16_ACG, IN1_TS16);
  CycleSet( NORMAL, IO1_TS16_ACG, IO1_TS16);
  CycleSet( NORMAL, OUT1_TS16_ACG, OUT1_TS16);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 17                                 ****
*
*    Scan_AC1 Scan_AC2 Scan_AC3 Scan_AC4                          *
*
*******************************************************************
*)

ACSetupOpen( TIMING_17, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 80.00NS, FAST_MAX_DC, FORMAT_17 );
  ACSetInOut( IN0_TS17_ACG, 0NS, 0NS, 75.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS17_ACG, 50.00NS, 50.00NS, 60.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS17_ACG, 50.00NS, 50.00NS, 60.000NS, 0NS, 5NS);
  ACSetInOut( IN3_TS17_ACG, 50.00NS, 50.00NS, 70.000NS, 0NS, 5NS);
  ACSetInOut( IN4_TS17_ACG, 35.00NS, 35.00NS, 45.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS17_ACG, 0NS, 0NS, 75.000NS, 30.00NS-TGB, 35.000NS+TGB);
  ACSetInOut( OUT1_TS17_ACG, 0NS, 0NS, 75.000NS, 30.00NS-TGB, 35.000NS+TGB);

  CycleSet( NORMAL, IN0_TS17_ACG, IN0_TS17);
  CycleSet( NORMAL, IN1_TS17_ACG, IN1_TS17);
  CycleSet( NORMAL, IN2_TS17_ACG, IN2_TS17);
  CycleSet( NORMAL, IN3_TS17_ACG, IN3_TS17);
  CycleSet( NORMAL, IN4_TS17_ACG, IN4_TS17);
  CycleSet( NORMAL, IO1_TS17_ACG, IO1_TS17);
  CycleSet( NORMAL, OUT1_TS17_ACG, OUT1_TS17);
ACSetupClose;

{rev01c Begin only execute at probe }
  CASE TIDeviceType OF
    PB_2 :
      BEGIN
(*
*******************************************************************
****            TIMING SET 18                                 ****
*
*    pat_1_tclk3_tdl pat_2_tclk3_tdl pat_3_tclk3_tdl pat_4_tclk3_tdl pat_5_tclk3
_tdl  *
*
*******************************************************************
*)

ACSetupOpen( TIMING_18, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 80.00NS, FAST_MAX_DC, FORMAT_18 );
  ACSetInOut( IN0_TS18_ACG, 0NS, 0NS, 75.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS18_ACG, 70.00NS, 70.00NS, 80.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS18_ACG, 70.00NS, 70.00NS, 80.000NS, 0NS, 5NS);
  ACSetInOut( IN3_TS18_ACG, 30.00NS, 30.00NS, 80.000NS, 0NS, 5NS);
  ACSetInOut( IN4_TS18_ACG, 30.00NS, 30.00NS, 80.000NS, 0NS, 5NS);
  ACSetInOut( IN5_TS18_ACG, 50.00NS, 50.00NS, 70.000NS, 0NS, 5NS);
  ACSetInOut( IN6_TS18_ACG, 40.00NS, 40.00NS, 73.000NS, 0NS, 5NS);
{  ACSetInOut( IN7_TS18_ACG, 1.60NS, 1.60NS, 6.600NS, 0NS, 5NS);
  ACSetInOut( IO1_TS18_ACG, 35.00NS, 35.00NS, 68.000NS, 5.00NS-TGB,
              10.000NS+TGB); rev01c }
  ACSetInOut( IN7_TS18_ACG, 0NS, 1.60NS, 6.600NS, 0NS, 5NS);{rev01c}
  ACSetInOut( IO1_TS18_ACG, 0NS, 35.00NS, 68.000NS, 5.00NS-TGB,
              10.000NS+TGB);{rev01c}
  ACSetInOut( IO2_TS18_ACG, 0NS, 0NS, 75.000NS, 20.00NS-TGB, 25.000NS+TGB);
  ACSetInOut( OUT1_TS18_ACG, 0NS, 0NS, 75.000NS, 20.00NS-TGB, 25.000NS+TGB);

  CycleSet( NORMAL, IN0_TS18_ACG, IN0_TS18);
  CycleSet( NORMAL, IN1_TS18_ACG, IN1_TS18);
  CycleSet( NORMAL, IN2_TS18_ACG, IN2_TS18);
  CycleSet( NORMAL, IN3_TS18_ACG, IN3_TS18);
  CycleSet( NORMAL, IN4_TS18_ACG, IN4_TS18);
  CycleSet( NORMAL, IN5_TS18_ACG, IN5_TS18);
  CycleSet( NORMAL, IN6_TS18_ACG, IN6_TS18);
  CycleSet( NORMAL, IN7_TS18_ACG, IN7_TS18);
  CycleSet( NORMAL, IO1_TS18_ACG, IO1_TS18);
  CycleSet( NORMAL, IO2_TS18_ACG, IO2_TS18);
  CycleSet( NORMAL, OUT1_TS18_ACG, OUT1_TS18);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 19                                 ****
*
*    pat_1_tclk5_tdl                                              *
*
*******************************************************************
*)

ACSetupOpen( TIMING_19, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 80.00NS, FAST_MAX_DC, FORMAT_19 );
  ACSetInOut( IN0_TS19_ACG, 0NS, 0NS, 75.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS19_ACG, 70.00NS, 70.00NS, 80.000NS, 0NS, 5NS);
  ACSetInOut( IN2_TS19_ACG, 70.00NS, 70.00NS, 80.000NS, 0NS, 5NS);
  ACSetInOut( IN3_TS19_ACG, 30.00NS, 30.00NS, 80.000NS, 0NS, 5NS);
  ACSetInOut( IN4_TS19_ACG, 30.00NS, 30.00NS, 80.000NS, 0NS, 5NS);
  ACSetInOut( IN5_TS19_ACG, 50.00NS, 50.00NS, 70.000NS, 0NS, 5NS);
  ACSetInOut( IN6_TS19_ACG, 35.00NS, 35.00NS, 68.000NS, 0NS, 5NS);
{  ACSetInOut( IN7_TS19_ACG, 4.90NS, 4.90NS, 9.900NS, 0NS, 5NS);
  ACSetInOut( IO1_TS19_ACG, 40.00NS, 40.00NS, 73.000NS, 5.00NS-TGB,
              10.000NS+TGB); rev01c }
  ACSetInOut( IN7_TS19_ACG, 0NS, 4.90NS, 9.900NS, 0NS, 5NS);{rev01c}
  ACSetInOut( IO1_TS19_ACG, 0NS, 40.00NS, 73.000NS, 5.00NS-TGB,
              10.000NS+TGB);{rev01c}
  ACSetInOut( IO2_TS19_ACG, 0NS, 0NS, 75.000NS, 20.00NS-TGB, 25.000NS+TGB);
  ACSetInOut( OUT1_TS19_ACG, 0NS, 0NS, 75.000NS, 20.00NS-TGB, 25.000NS+TGB);

  CycleSet( NORMAL, IN0_TS19_ACG, IN0_TS19);
  CycleSet( NORMAL, IN1_TS19_ACG, IN1_TS19);
  CycleSet( NORMAL, IN2_TS19_ACG, IN2_TS19);
  CycleSet( NORMAL, IN3_TS19_ACG, IN3_TS19);
  CycleSet( NORMAL, IN4_TS19_ACG, IN4_TS19);
  CycleSet( NORMAL, IN5_TS19_ACG, IN5_TS19);
  CycleSet( NORMAL, IN6_TS19_ACG, IN6_TS19);
  CycleSet( NORMAL, IN7_TS19_ACG, IN7_TS19);
  CycleSet( NORMAL, IO1_TS19_ACG, IO1_TS19);
  CycleSet( NORMAL, IO2_TS19_ACG, IO2_TS19);
  CycleSet( NORMAL, OUT1_TS19_ACG, OUT1_TS19);
ACSetupClose;

      END;
  END; {case of pin_maps}

{rev01c End only execute at probe }

(*
*******************************************************************
****            TIMING SET 20                                 ****
*
*    BIST                                                         *
*
*******************************************************************
*)

ACSetupOpen( TIMING_20, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 100.00NS, FAST_MAX_DC, FORMAT_20 );
  ACSetInOut( IN0_TS20_ACG, 0NS, 0NS, 95.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS20_ACG, 20.00NS, 20.00NS, 40.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS20_ACG, 0NS, 0NS, 95.000NS, 49.15NS-TGB, 54.150NS+TGB);
  ACSetInOut( OUT1_TS20_ACG, 0NS, 0NS, 95.000NS, 98.15NS-TGB, 103.150NS+TGB);
  ACSetInOut( OUT2_TS20_ACG, 0NS, 0NS, 95.000NS, 16.15NS-TGB, 21.150NS+TGB);
  ACSetInOut( OUT3_TS20_ACG, 0NS, 0NS, 95.000NS, 49.15NS-TGB, 54.150NS+TGB);

  CycleSet( NORMAL, IN0_TS20_ACG, IN0_TS20);
  CycleSet( NORMAL, IN1_TS20_ACG, IN1_TS20);
  CycleSet( NORMAL, IO1_TS20_ACG, IO1_TS20);
  CycleSet( NORMAL, OUT1_TS20_ACG, OUT1_TS20);
  CycleSet( NORMAL, OUT2_TS20_ACG, OUT2_TS20);
  CycleSet( NORMAL, OUT3_TS20_ACG, OUT3_TS20);
ACSetupClose;
(*
*******************************************************************
****            TIMING SET 21                                 ****
*
*
*******************************************************************
*)

ACSetupOpen( TIMING_21, DEFAULT_AC_TABLE, DEFAULT_CYCLE_TABLE,
             DEFAULT_PERIOD_TABLE, 150.00NS, SLOW_MAX_DC, FORMAT_21 );
  ACSetInOut( IN0_TS21_ACG, 0NS, 0NS, 145.000NS, 0NS, 5NS);
  ACSetInOut( IN1_TS21_ACG, 0NS, 0NS, 145.000NS, 0NS, 5NS);
  ACSetInOut( IO1_TS21_ACG, 0NS, 0NS, 145.000NS, 140.00NS-TGB, 145.000NS+TGB);
  ACSetInOut( OUT1_TS21_ACG, 0NS, 0NS, 145.000NS, 140.00NS-TGB, 145.000NS+TGB);

  CycleSet( NORMAL, IN0_TS21_ACG, IN0_TS21);
  CycleSet( NORMAL, IN1_TS21_ACG, IN1_TS21);
  CycleSet( NORMAL, IO1_TS21_ACG, IO1_TS21);
  CycleSet( NORMAL, OUT1_TS21_ACG, OUT1_TS21);
ACSetupClose;


(*  LEAKAGE SETUP  *)

DCSetupOpen( LC_ODD_EVEN, LEAKAGE_DC_TABLE );
          DCSetPMU( IIHCMOSa3V_MAX, IIHCMOSa3V_MIN, IIHCMOSa3V_FORCEV,
                    -1mA, 1mA, CMOSa3V_IN_ODD );
          DCSetPMU( IILCMOSa3V_MAX, IILCMOSa3V_MIN, IILCMOSa3V_FORCEV,
                    -1mA, 1mA, CMOSa3V_IN_EVEN );
          DCSetPMU( IILTESTINA1V_MAX, IILTESTINA1V_MIN, IILTESTINA1V_FORCEV,
                    -1mA, 1mA, TESTINA1V_IN_EVEN );
DCSetupClose;

DCSetupOpen( LC_EVEN_ODD, LEAKAGE_DC_TABLE );
          DCSetPMU( IIHCMOSa3V_MAX, IIHCMOSa3V_MIN, IIHCMOSa3V_FORCEV,
                    -1mA, 1mA, CMOSa3V_IN_EVEN );
          DCSetPMU( IILCMOSa3V_MAX, IILCMOSa3V_MIN, IILCMOSa3V_FORCEV,
                    -1mA, 1mA, CMOSa3V_IN_ODD );
{rev07a   DCSetPMU( IIHTESTINA1V_MAX, IIHTESTINA1V_MIN, IIHTESTINA1V_FORCEV,
                    -1mA, 1mA, TESTINA1V_IN_EVEN );}
DCSetupClose;


DCSetupOpen( II_ODD_EVEN, LEAKAGE_DC_TABLE );
          DCSetPMU( IIHCMOSa3V_MAX, IIHCMOSa3V_MIN, IIHCMOSa3V_FORCEV,
                    IIHCMOSa3V_SINK, IIHCMOSa3V_SOURCE, CMOSa3V_IN_ODD );
          DCSetPMU( IILCMOSa3V_MAX, IILCMOSa3V_MIN, IILCMOSa3V_FORCEV,
                    IILCMOSa3V_SINK, IILCMOSa3V_SOURCE, CMOSa3V_IN_EVEN );
{rev07a   DCSetPMU( IILTESTINA1V_MAX, IILTESTINA1V_MIN, IILTESTINA1V_FORCEV,
                   IILTESTINA1V_SINK, IILTESTINA1V_SOURCE, TESTINA1V_IN_EVEN );}
          DCSetPMU( IILP1_MAX, IILP1_MIN, 0V,
                    IILP1_SINK, IILP1_SOURCE, EVN_IN_PU1 );
DCSetupClose;

DCSetupOpen( II_EVEN_ODD, LEAKAGE_DC_TABLE );
          DCSetPMU( IIHCMOSa3V_MAX, IIHCMOSa3V_MIN, IIHCMOSa3V_FORCEV,
                    IIHCMOSa3V_SINK, IIHCMOSa3V_SOURCE, CMOSa3V_IN_EVEN );
          DCSetPMU( IILCMOSa3V_MAX, IILCMOSa3V_MIN, IILCMOSa3V_FORCEV,
                    IILCMOSa3V_SINK, IILCMOSa3V_SOURCE, CMOSa3V_IN_ODD );
          DCSetPMU( IIHTESTINA1V_MAX, IIHTESTINA1V_MIN, IIHTESTINA1V_FORCEV,
                    IIHTESTINA1V_SINK, IIHTESTINA1V_SOURCE, TESTINA1V_IN_EVEN );
DCSetupClose;

DCSetupOpen( IILP_ON_PM1_DC, LEAKAGE_DC_TABLE );
          DCSetPMU( IILP1_MAX, IILP1_MIN, 0V,
                    IILP1_SINK, IILP1_SOURCE, IILP1_ON_PM1 );
DCSetupClose;

DCSetupOpen( IILP_ON_PM2_DC, LEAKAGE_DC_TABLE );
          DCSetPMU( IILP1_MAX, IILP1_MIN, 0V,
                    IILP1_SINK, IILP1_SOURCE, IILP1_ON_PM2 );
DCSetupClose;

DCSetupOpen( IILP_ON_PM6_DC, LEAKAGE_DC_TABLE );
          DCSetPMU( IILP1_MAX, IILP1_MIN, 0V,
                    IILP1_SINK, IILP1_SOURCE, IILP1_ON_PM6 );
DCSetupClose;

DCSetupOpen( IILP_ON_PM7_DC, LEAKAGE_DC_TABLE );
          DCSetPMU( IILP1_MAX, IILP1_MIN, 0V,
                    IILP1_SINK, IILP1_SOURCE, IILP1_ON_PM7 );
DCSetupClose;

DCSetupOpen( II_DIFFA_HI, LEAKAGE_DC_TABLE );
          DCSetPMU( IIHLVDSa1VD_MAX, IIHLVDSa1VD_MIN, IIHLVDSa1VD_FORCEV,
                    IIHLVDSa1VD_SINK, IIHLVDSa1VD_SOURCE, LVDSa1V_INSA );
          DCSetPMU( IIHCML1VD_MAX, IIHCML1VD_MIN, IIHCML1VD_FORCEV,
                    IIHCML1VD_SINK, IIHCML1VD_SOURCE, CML1V_INSA );
DCSetupClose;

DCSetupOpen( II_DIFFB_HI, LEAKAGE_DC_TABLE );
          DCSetPMU( IIHLVDSa1VD_MAX, IIHLVDSa1VD_MIN, IIHLVDSa1VD_FORCEV,
                    IIHLVDSa1VD_SINK, IIHLVDSa1VD_SOURCE, LVDSa1V_INSAZ );
          DCSetPMU( IIHCML1VD_MAX, IIHCML1VD_MIN, IIHCML1VD_FORCEV,
                    IIHCML1VD_SINK, IIHCML1VD_SOURCE, CML1V_INSAZ );
DCSetupClose;

DCSetupOpen( II_DIFFA_LO, LEAKAGE_DC_TABLE );
          DCSetPMU( IILLVDSa1VD_MAX, IILLVDSa1VD_MIN, IILLVDSa1VD_FORCEV,
                    IILLVDSa1VD_SINK, IILLVDSa1VD_SOURCE, LVDSa1V_INSA );
          DCSetPMU( IILCML1VD_MAX, IILCML1VD_MIN, IILCML1VD_FORCEV,
                    IILCML1VD_SINK, IILCML1VD_SOURCE, CML1V_INSA );
DCSetupClose;

DCSetupOpen( II_DIFFB_LO, LEAKAGE_DC_TABLE );
          DCSetPMU( IILLVDSa1VD_MAX, IILLVDSa1VD_MIN, IILLVDSa1VD_FORCEV,
                    IILLVDSa1VD_SINK, IILLVDSa1VD_SOURCE, LVDSa1V_INSAZ );
          DCSetPMU( IILCML1VD_MAX, IILCML1VD_MIN, IILCML1VD_FORCEV,
                    IILCML1VD_SINK, IILCML1VD_SOURCE, CML1V_INSAZ );
DCSetupClose;

{rev00k Begin add setup}
DCSetupOpen( II_DIFFA_HI_AZ_LOW, LEAKAGE_DC_TABLE );
          DCSetPMU( 6mA, 2mA, 1.3V,-15mA, 15mA, LVDSa1V_INSA );
          DCSetPMU( -2mA, -6mA, 0.9V,-15mA, 15mA, LVDSa1V_INSAZ );

DCSetupClose;

DCSetupOpen( II_DIFFAZ_HI_A_LOW, LEAKAGE_DC_TABLE );
          DCSetPMU( 6mA, 2mA, 1.3V,-15mA, 15mA, LVDSa1V_INSAZ );
          DCSetPMU( -2mA, -6mA, 0.9V,-15mA, 15mA, LVDSa1V_INSA );
DCSetupClose;
{rev00k End add setup}

(*  VOUT SETUP  *)

DCSetupOpen( VOUT_FUNC_DC, VOUT_DC_TABLE );
  DCSetDyn( 2.700V,0V,CP,
            VOHL3V_MIN, VOLL3V_MAX, 1.755V,
            -I4MA, I4MA, CMOS3V4MA );
  DCSetDyn( 2.700V,0V,CP,
            VOHL3V_MIN, VOLL3V_MAX, 1.755V,
            -I8MA, I8MA, CMOS3V8MA );
  DCSetDyn( 2.700V,0V,CP,
            VOHL3V_MIN, VOLL3V_MAX, 1.755V,
            -I12MA, I24MA, CMOS3V12MA24 );
DCSetupClose;

DCSetupOpen( VOUT_PIN_DC, VOUT_DC_TABLE );
DCSetupClose;

{ rev00f Not needed 
DCSetupOpen( VOUTLVDSa_PM8_DC, VOUT_DC_TABLE );
          DCSetPMU( VOHLVDSa1V_MAX, VOHLVDSa1V_MIN, VOHLVDSa1V_FORCEV,
                    -IXXX, IXXX, VOHLVDSa1V1_PM8 );
          DCSetPMU( VOLLVDSa1V_MAX, VOLLVDSa1V_MIN, VOLLVDSa1V_FORCEV,
                    -IXXX, IXXX, VOLLVDSa1V1_PM8 );
DCSetupClose;

DCSetupOpen( VOUTLVDSa_PM9_DC, VOUT_DC_TABLE );
          DCSetPMU( VOHLVDSa1V_MAX, VOHLVDSa1V_MIN, VOHLVDSa1V_FORCEV,
                    -IXXX, IXXX, VOHLVDSa1V1_PM9 );
          DCSetPMU( VOLLVDSa1V_MAX, VOLLVDSa1V_MIN, VOLLVDSa1V_FORCEV,
                    -IXXX, IXXX, VOLLVDSa1V1_PM9 );
DCSetupClose;
}
DCSetupOpen( VOUTCMOSa_PM3_DC, VOUT_DC_TABLE );
          DCSetPMU( VOHCMOSa3V_MAX, VOHCMOSa3V_MIN, VOHCMOSa3V_FORCEV,
                    -I12MA, I12MA, VOHCMOSa3V1_PM3 );
DCSetupClose;

DCSetupOpen( VOUTCMOSa_PM4_DC, VOUT_DC_TABLE );
          DCSetPMU( VOLCMOSa3V_MAX, VOLCMOSa3V_MIN, VOLCMOSa3V_FORCEV,
                    -I24MA, I24MA, VOLCMOSa3V1_PM4 );
DCSetupClose;

DCSetupOpen( VOUTCMOSa_PM8_DC, VOUT_DC_TABLE );
          DCSetPMU( VOHCMOSa3V_MAX, VOHCMOSa3V_MIN, VOHCMOSa3V_FORCEV,
         {rev00f}   -I12MA, I12MA, VOHCMOSa3V1_PM8 );
          DCSetPMU( VOHCMOSa3V_MAX, VOHCMOSa3V_MIN, VOHCMOSa3V_FORCEV,
         {rev00f}   -I8MA, I8MA, VOHCMOSa3V1_PM8X );
          DCSetPMU( VOHCMOSa3V_MAX, VOHCMOSa3V_MIN, VOHCMOSa3V_FORCEV,
                    -I4MA, I4MA, VOHCMOSa3V2_PM8 );
          DCSetPMU( VOHCMOSa3V_MAX, VOHCMOSa3V_MIN, VOHCMOSa3V_FORCEV,
                    -I8MA, I8MA, VOHCMOSa3V3_PM8 );
          DCSetPMU( VOHCMOSa3V_MAX, VOHCMOSa3V_MIN, VOHCMOSa3V_FORCEV,
                    -I12MA, I12MA, VOHCMOSa3V4_PM8 );
DCSetupClose;

DCSetupOpen( VOUTCMOSa_PM9_DC, VOUT_DC_TABLE );
          DCSetPMU( VOLCMOSa3V_MAX, VOLCMOSa3V_MIN, VOLCMOSa3V_FORCEV,
         {rev00f}   -I24MA, I24MA, VOLCMOSa3V1_PM9 );
          DCSetPMU( VOLCMOSa3V_MAX, VOLCMOSa3V_MIN, VOLCMOSa3V_FORCEV,
         {rev00f}   -I8MA, I8MA, VOLCMOSa3V1_PM9X );
          DCSetPMU( VOLCMOSa3V_MAX, VOLCMOSa3V_MIN, VOLCMOSa3V_FORCEV,
                    -I4MA, I4MA, VOLCMOSa3V2_PM9 );
          DCSetPMU( VOLCMOSa3V_MAX, VOLCMOSa3V_MIN, VOLCMOSa3V_FORCEV,
                    -I8MA, I8MA, VOLCMOSa3V3_PM9 );
          DCSetPMU( VOLCMOSa3V_MAX, VOLCMOSa3V_MIN, VOLCMOSa3V_FORCEV,
                    -I24MA, I24MA, VOLCMOSa3V4_PM9 );
DCSetupClose;

DCSetupOpen( LEAKAGE_PIN_DC, LEAKAGE_DC_TABLE );
DCSetupClose;

DCSetupOpen( LKGHI_PM5_DC, LEAKAGE_DC_TABLE );
          DCSetPMU( IOZHCMOSa3V_MAX, IOZHCMOSa3V_MIN, IOZHCMOSa3V_FORCEV,
                    IOZHCMOSa3V_SINK, IOZHCMOSa3V_SOURCE, IOZCMOSa3V_PM5 );
DCSetupClose;

DCSetupOpen( LKGLO_PM5_DC, LEAKAGE_DC_TABLE );
          DCSetPMU( IOZLCMOSa3V_MAX, IOZLCMOSa3V_MIN, IOZLCMOSa3V_FORCEV,
                    IOZLCMOSa3V_SINK, IOZLCMOSa3V_SOURCE, IOZCMOSa3V_PM5 );
DCSetupClose;

DCSetupOpen( LKGLOR_ON_PM6_DC, LEAKAGE_DC_TABLE );
          DCSetPMU( IOLP1_MAX, IOLP1_MIN, 0V,
                    IOLP1_SINK, IOLP1_SOURCE, IOLP1_ON_PM6 );
DCSetupClose;

DCSetupOpen( LKGLOR_ON_PM7_DC, LEAKAGE_DC_TABLE );
          DCSetPMU( IOLP1_MAX, IOLP1_MIN, 0V,
                    IOLP1_SINK, IOLP1_SOURCE, IOLP1_ON_PM7 );
DCSetupClose;

(*  PROP TEST SETUP  *)

DCSetupOpen( PROP_MIN_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VMN3V, 0V,CP, VMN3V*0.5, VMN3V*0.5, CMOSa3V_INS );
  DCSetDyn( VMN3V, 0V,CP, VMN3V*0.5, VMN3V*0.5, VMN3V*0.8, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( VMN3V, 0V,CP, VMN3V*0.5, VMN3V*0.5, VMN3V*0.8, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 1.65V, 0.0V,CP, 0.825V, 0.825V, TESTINA1V_INS );
  DCSetDyn( 1.65V, 0.0V,CP, 0.825V, 0.825V, 1.320V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VMNC1V, VMNC1V-0.5V,CP, VMNC1V-0.2V, VMNC1V-0.2V, CML1V_INSA );
  DCSetLDOFF( VMNC1V, VMNC1V-0.5V,CP, VMNC1V-0.2V, VMNC1V-0.2V, CML1V_INSAZ );
  DCSetDyn( VMNC1V, VMNC1V-0.5V,CP, VMNC1V-0.2V, VMNC1V-0.2V, VMNC1V, -0mA,
              0mA, CML1V_OUTSY );
  DCSetDyn( VMNC1V, VMNC1V-0.5V,CP, VMNC1V-0.2V, VMNC1V-0.2V, VMNC1V, -0mA,
              0mA, CML1V_OUTSYZ );
DCSetupClose;

DCSetupOpen( PROP_MAX_DC, DEFAULT_DC_TABLE );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VMX3V, 0V,CP, VMX3V*0.5, VMX3V*0.5, CMOSa3V_INS );
  DCSetDyn( VMX3V, 0V,CP, VMX3V*0.5, VMX3V*0.5, VMX3V*0.8, -2.0mA, 2.0mA,
              CMOSa3V_OUTS );
  DCSetDyn( VMX3V, 0V,CP, VMX3V*0.5, VMX3V*0.5, VMX3V*0.8, -2.0mA, 2.0mA,
              CMOSa3V_IOS );
  DCSetLDOFF( 1.95V, 0.0V,CP, 0.975V, 0.975V, TESTINA1V_INS );
  DCSetDyn( 1.95V, 0.0V,CP, 0.975V, 0.975V, 1.560V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, 1.2V, 1.2V, LVDSa1V_INSAZ );
  DCSetDyn( 1.2V, 0V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSY );
  DCSetDyn( 1.2V, 0V,CP, 1.2V, 1.2V, 1.2V, -0mA, 0mA, LVDSa1V_OUTSYZ );
  DCSetLDOFF( VMXC1V, VMXC1V-0.5V,CP, VMXC1V-0.2V, VMXC1V-0.2V, CML1V_INSA );
  DCSetLDOFF( VMXC1V, VMXC1V-0.5V,CP, VMXC1V-0.2V, VMXC1V-0.2V, CML1V_INSAZ );
  DCSetDyn( VMXC1V, VMXC1V-0.5V,CP, VMXC1V-0.2V, VMXC1V-0.2V, VMXC1V, -0mA,
              0mA, CML1V_OUTSY );
  DCSetDyn( VMXC1V, VMXC1V-0.5V,CP, VMXC1V-0.2V, VMXC1V-0.2V, VMXC1V, -0mA,
              0mA, CML1V_OUTSYZ );
DCSetupClose;

end;  (* LOAD_FAST_SETS *)


procedure SELECT_FAST_SETS; Export;
(*
***********************************************************************
****            SELECT FAST SETS                                   ****
****                                                               ****
****            TEMP TYPES ARE:                                    ****
****                                                               ****
****              HOT                                              ****
****              ROOM                                             ****
****              QC                                               ****
****              COLD                                             ****
****                                                               ****
***********************************************************************
*)

  begin

    if Reload_the_Setups then
      SetupReload( LOAD_FAST_SETS, OPEN_ODD_DC, CONTY_FORMAT, CONTY_AC )
    else
      begin
        LOAD_FAST_SETS;
        Reload_the_Setups := TRUE
      end

  end;  (* SELECT_FAST_SETS *)


procedure INITIALIZE_LOT_INFORMATION;
(*
************************************************************************
****            INITIALIZE LOT INFORMATION                          ****
************************************************************************
*)
  begin

    ClassDefine( Good_class,          s_GOOD_CLASS );
    ClassDefine( Continuity_class,    s_FAILED_CLASS );
    ClassDefine( Pin2Pin_class,       s_FAILED_CLASS );
    ClassDefine( ICCQ_class,          s_FAILED_CLASS );
    ClassDefine( Functional_class,    s_FAILED_CLASS );
    ClassDefine( DC_Parametric_class, s_FAILED_CLASS );
    ClassDefine( AC_Parametric_class, s_FAILED_CLASS );
    ClassDefine( Latch_Up_class,      s_FAILED_CLASS );
    ClassDefine( DIE_ID_class,        s_FAILED_CLASS );  {rev00p}

(*rev10a - begin
    BinDefine( Good,               1, Good_class );
    BinDefine( Open,               2, Continuity_class );
    BinDefine( Short,              3, Continuity_class );
    BinDefine( ICCQ_bin,           4, ICCQ_class );
    BinDefine( Slow_Functional,    5, Functional_class );
    BinDefine( Fast_Functional,    6, Functional_class );
    BinDefine( DC_Leakage,         7, DC_Parametric_class );
    BinDefine( AC_Prop,            8, AC_Parametric_class );
    BinDefine( Pin2Pin_bin,        9, Pin2Pin_class );
    BinDefine( Latch_Up,          11, Latch_Up_class );
    BinDefine( DIE_ID_bin,        12, DIE_ID_class );  {rev00p}

    BinDefine( VBox_Functional,   13, Functional_class ); {revvmin}
    BinDefine( VMin_Shift_Func,   40, Functional_class ); {revvmin}
rev10a *)
    BinDefine( Good,               1, Good_class );
    BinDefine( F_OS,               8, Continuity_class );
    BinDefine( Open,              12, Continuity_class );{rev10a ignore}
    BinDefine( Short,             13, Continuity_class );{rev10a ignore}
    BinDefine( ICCQ_bin,          14, ICCQ_class );
    BinDefine( Slow_Functional,   15, Functional_class );
    BinDefine( Fast_Functional,   16, Functional_class );
    BinDefine( DC_Leakage,        17, DC_Parametric_class );
    BinDefine( AC_Prop,           18, AC_Parametric_class );
    BinDefine( Pin2Pin_bin,       19, Pin2Pin_class );
    BinDefine( Latch_Up,          21, Latch_Up_class );
    BinDefine( DIE_ID_bin,        22, DIE_ID_class );  {rev00p}

    BinDefine( VBox_Functional,   23, Functional_class ); {revvmin}
    BinDefine( VMin_Shift_Func,   40, Functional_class ); {revvmin}
{rev10a - end}
    SortRuleOpen( s_NORMAL );

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    SummaryBinSet( GoodSummaryBin, Good ); {revtw}
    SummaryBinSet( ContinuitySummaryBin, F_OS ); {revtw}
    SummaryBinSet( ContinuitySummaryBin, Open ); {revtw}
    SummaryBinSet( ContinuitySummaryBin, Short ); {revtw}
    SummaryBinSet( ParametricFailureSummaryBin, ICCQ_bin ); {revtw}
    SummaryBinSet( FunctionalFailureSummaryBin, Slow_Functional ); {revtw}
    SummaryBinSet( FunctionalFailureSummaryBin, Fast_Functional ); {revtw}
    SummaryBinSet( ParametricFailureSummaryBin, DC_Leakage ); {revtw}
    SummaryBinSet( ParametricFailureSummaryBin, AC_Prop ); {revtw}
    SummaryBinSet( ParametricFailureSummaryBin, Pin2Pin_bin ); {revtw}
    SummaryBinSet( ParametricFailureSummaryBin, Latch_Up ); {revtw}
    SummaryBinSet( FunctionalFailureSummaryBin, DIE_ID_bin ); {revtw}
    SummaryBinSet( FunctionalFailureSummaryBin, VBox_Functional ); {revtw}
    SummaryBinSet( FunctionalFailureSummaryBin, VMin_Shift_Func ); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}

{rev10a}
      CategoryDefine( Good_cat, Good, s_ALL,
                      +OPENS..OLD_ICCQ );
      CategoryDefine( Good_New_ICCQ_cat, Good, s_ALL,
                      +OPENS..ACPROP );
      CategoryDefine( F_OS_cat, F_OS, s_ANY,
                      -OPENS , -SHORTS , -PIN2PIN ,
                      -SUPPLY_SHORTS, -JUNCTION_LEAKAGE );
{rev10a - should never get to Open/Short/etc }
      CategoryDefine( Open_cat, Open, s_ANY,
                      -OPENS );
      CategoryDefine( Short_cat, Short, s_ANY,
                      -SHORTS );
      CategoryDefine( Pin2Pin_cat, Pin2Pin_bin, s_ANY,
                      -PIN2PIN );
      CategoryDefine( Supply_Shorts_cat, Short, s_ANY,
                      -SUPPLY_SHORTS, -JUNCTION_LEAKAGE );
      CategoryDefine( SLOW_NOM_55917014_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917014 );
      CategoryDefine( SLOW_NOM_55917024_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917024 );
      CategoryDefine( SLOW_NOM_55917034_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917034 );
      CategoryDefine( SLOW_NOM_55917044_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917044 );
      CategoryDefine( SLOW_NOM_55917064_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917064 );
      CategoryDefine( SLOW_NOM_55917074_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917074 );
      CategoryDefine( SLOW_NOM_55917084_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917084 );
      CategoryDefine( SLOW_NOM_55917094_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917094 );
      CategoryDefine( SLOW_NOM_55917104_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917104 );
      CategoryDefine( SLOW_NOM_55917114_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917114 );
      CategoryDefine( SLOW_NOM_55917124_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917124 );
      CategoryDefine( SLOW_NOM_55917134_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917134 );
      CategoryDefine( SLOW_NOM_55917144_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917144 );
      CategoryDefine( SLOW_NOM_55917154_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917154 );
      CategoryDefine( SLOW_NOM_55917164_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917164 );
      CategoryDefine( SLOW_NOM_55917174_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917174 );
      CategoryDefine( SLOW_NOM_55917184_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917184 );
      CategoryDefine( SLOW_NOM_55917194_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917194 );
      CategoryDefine( SLOW_NOM_55917204_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917204 );
      CategoryDefine( SLOW_NOM_55917214_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917214 );
      CategoryDefine( SLOW_NOM_55917224_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917224 );
      CategoryDefine( SLOW_NOM_55917234_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917234 );
      CategoryDefine( SLOW_NOM_55917244_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917244 );
      CategoryDefine( SLOW_NOM_55917254_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917254 );
      CategoryDefine( SLOW_NOM_55917264_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917264 );
      CategoryDefine( SLOW_NOM_55917274_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917274 );
      CategoryDefine( SLOW_NOM_55917284_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917284 );
      CategoryDefine( SLOW_NOM_55917294_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917294 );
      CategoryDefine( SLOW_NOM_55917304_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917304 );
      CategoryDefine( SLOW_NOM_55917314_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917314 );
      CategoryDefine( SLOW_NOM_55917324_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917324 );
      CategoryDefine( SLOW_NOM_55917334_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917334 );
      CategoryDefine( SLOW_NOM_55917344_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917344 );
      CategoryDefine( SLOW_NOM_55917354_cat, Slow_Functional, s_ANY,
                      -SLOW_NOM_55917354 );
      CategoryDefine( SLOW_MIN_55917014_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917014 );
      CategoryDefine( SLOW_MIN_55917024_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917024 );
      CategoryDefine( SLOW_MIN_55917034_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917034 );
      CategoryDefine( SLOW_MIN_55917044_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917044 );
      CategoryDefine( SLOW_MIN_55917064_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917064 );
      CategoryDefine( SLOW_MIN_55917074_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917074 );
      CategoryDefine( SLOW_MIN_55917084_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917084 );
      CategoryDefine( SLOW_MIN_55917094_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917094 );
      CategoryDefine( SLOW_MIN_55917104_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917104 );
      CategoryDefine( SLOW_MIN_55917114_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917114 );
      CategoryDefine( SLOW_MIN_55917124_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917124 );
      CategoryDefine( SLOW_MIN_55917134_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917134 );
      CategoryDefine( SLOW_MIN_55917144_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917144 );
      CategoryDefine( SLOW_MIN_55917154_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917154 );
      CategoryDefine( SLOW_MIN_55917164_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917164 );
      CategoryDefine( SLOW_MIN_55917174_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917174 );
      CategoryDefine( SLOW_MIN_55917184_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917184 );
      CategoryDefine( SLOW_MIN_55917194_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917194 );
      CategoryDefine( SLOW_MIN_55917204_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917204 );
      CategoryDefine( SLOW_MIN_55917214_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917214 );
      CategoryDefine( SLOW_MIN_55917224_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917224 );
      CategoryDefine( SLOW_MIN_55917234_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917234 );
      CategoryDefine( SLOW_MIN_55917244_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917244 );
      CategoryDefine( SLOW_MIN_55917254_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917254 );
      CategoryDefine( SLOW_MIN_55917264_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917264 );
      CategoryDefine( SLOW_MIN_55917274_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917274 );
      CategoryDefine( SLOW_MIN_55917284_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917284 );
      CategoryDefine( SLOW_MIN_55917294_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917294 );
      CategoryDefine( SLOW_MIN_55917304_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917304 );
      CategoryDefine( SLOW_MIN_55917314_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917314 );
      CategoryDefine( SLOW_MIN_55917324_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917324 );
      CategoryDefine( SLOW_MIN_55917334_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917334 );
      CategoryDefine( SLOW_MIN_55917344_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917344 );
      CategoryDefine( SLOW_MIN_55917354_cat, Slow_Functional, s_ANY,
                      -SLOW_MIN_55917354 );
      CategoryDefine( ICCQ_cat, ICCQ_bin, s_ANY,
                      -ICCQ );
      CategoryDefine( SLOW_MAX_55917014_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917014 );
      CategoryDefine( SLOW_MAX_55917024_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917024 );
      CategoryDefine( SLOW_MAX_55917034_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917034 );
      CategoryDefine( SLOW_MAX_55917044_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917044 );
      CategoryDefine( SLOW_MAX_55917064_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917064 );
      CategoryDefine( SLOW_MAX_55917074_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917074 );
      CategoryDefine( SLOW_MAX_55917084_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917084 );
      CategoryDefine( SLOW_MAX_55917094_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917094 );
      CategoryDefine( SLOW_MAX_55917104_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917104 );
      CategoryDefine( SLOW_MAX_55917114_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917114 );
      CategoryDefine( SLOW_MAX_55917124_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917124 );
      CategoryDefine( SLOW_MAX_55917134_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917134 );
      CategoryDefine( SLOW_MAX_55917144_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917144 );
      CategoryDefine( SLOW_MAX_55917154_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917154 );
      CategoryDefine( SLOW_MAX_55917164_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917164 );
      CategoryDefine( SLOW_MAX_55917174_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917174 );
      CategoryDefine( SLOW_MAX_55917184_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917184 );
      CategoryDefine( SLOW_MAX_55917194_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917194 );
      CategoryDefine( SLOW_MAX_55917204_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917204 );
      CategoryDefine( SLOW_MAX_55917214_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917214 );
      CategoryDefine( SLOW_MAX_55917224_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917224 );
      CategoryDefine( SLOW_MAX_55917234_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917234 );
      CategoryDefine( SLOW_MAX_55917244_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917244 );
      CategoryDefine( SLOW_MAX_55917254_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917254 );
      CategoryDefine( SLOW_MAX_55917264_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917264 );
      CategoryDefine( SLOW_MAX_55917274_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917274 );
      CategoryDefine( SLOW_MAX_55917284_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917284 );
      CategoryDefine( SLOW_MAX_55917294_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917294 );
      CategoryDefine( SLOW_MAX_55917304_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917304 );
      CategoryDefine( SLOW_MAX_55917314_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917314 );
      CategoryDefine( SLOW_MAX_55917324_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917324 );
      CategoryDefine( SLOW_MAX_55917334_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917334 );
      CategoryDefine( SLOW_MAX_55917344_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917344 );
      CategoryDefine( SLOW_MAX_55917354_cat, Slow_Functional, s_ANY,
                      -SLOW_MAX_55917354 );
      CategoryDefine( VIH_VIL_MIN_55917044_cat, DC_Leakage, s_ANY,
                      -VIHL_MIN_55917044 );
      CategoryDefine( VIH_VIL_MIN_55917054_cat, DC_Leakage, s_ANY,
                      -VIHL_MIN_55917054 );
      CategoryDefine( VIH_VIL_MAX_55917044_cat, DC_Leakage, s_ANY,
                      -VIHL_MAX_55917044 );
      CategoryDefine( VIH_VIL_MAX_55917054_cat, DC_Leakage, s_ANY,
                      -VIHL_MAX_55917054 );
      CategoryDefine( FAST_MIN_55917364_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917364 );
      CategoryDefine( FAST_MIN_55917374_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917374 );
      CategoryDefine( FAST_MIN_55917384_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917384 );
      CategoryDefine( FAST_MIN_55917394_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917394 );
      CategoryDefine( FAST_MIN_55917404_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917404 );
      CategoryDefine( FAST_MIN_55917414_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917414 );
      CategoryDefine( FAST_MIN_55917424_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917424 );
      CategoryDefine( FAST_MIN_55917434_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917434 );
      CategoryDefine( FAST_MIN_55917444_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917444 );
      CategoryDefine( FAST_MIN_55917454_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917454 );
      CategoryDefine( FAST_MIN_55917464_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917464 );
      CategoryDefine( FAST_MIN_55917474_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917474 );
      CategoryDefine( FAST_MIN_55917484_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917484 );
      CategoryDefine( FAST_MIN_55917494_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917494 );
      CategoryDefine( FAST_MIN_55917504_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917504 );
      CategoryDefine( FAST_MIN_55917514_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917514 );
      CategoryDefine( FAST_MIN_55917524_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917524 );
      CategoryDefine( FAST_MIN_55917534_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917534 );
      CategoryDefine( FAST_MIN_55917544_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917544 );
      CategoryDefine( FAST_MIN_55917554_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917554 );
      CategoryDefine( FAST_MIN_55917564_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917564 );
      CategoryDefine( FAST_MIN_55917574_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917574 );
      CategoryDefine( FAST_MIN_55917584_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917584 );
      CategoryDefine( FAST_MIN_55917594_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917594 );
      CategoryDefine( FAST_MIN_55917604_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917604 );
      CategoryDefine( FAST_MIN_55917614_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917614 );
      CategoryDefine( FAST_MIN_55917624_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917624 );
      CategoryDefine( FAST_MIN_55917634_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917634 );
      CategoryDefine( FAST_MIN_55917644_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917644 );
      CategoryDefine( FAST_MIN_55917654_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917654 );
      CategoryDefine( FAST_MIN_55917664_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917664 );
      CategoryDefine( FAST_MIN_55917674_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917674 );
      CategoryDefine( FAST_MIN_55917684_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917684 );
      CategoryDefine( FAST_MIN_55917694_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917694 );
      CategoryDefine( FAST_MIN_55917704_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917704 );
      CategoryDefine( FAST_MIN_55917714_cat, Fast_Functional, s_ANY,
                      -FAST_MIN_55917714 );
      CategoryDefine( FAST_NOM_55917364_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917364 );
      CategoryDefine( FAST_NOM_55917374_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917374 );
      CategoryDefine( FAST_NOM_55917384_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917384 );
      CategoryDefine( FAST_NOM_55917394_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917394 );
      CategoryDefine( FAST_NOM_55917404_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917404 );
      CategoryDefine( FAST_NOM_55917414_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917414 );
      CategoryDefine( FAST_NOM_55917424_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917424 );
      CategoryDefine( FAST_NOM_55917434_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917434 );
      CategoryDefine( FAST_NOM_55917444_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917444 );
      CategoryDefine( FAST_NOM_55917454_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917454 );
      CategoryDefine( FAST_NOM_55917464_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917464 );
      CategoryDefine( FAST_NOM_55917474_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917474 );
      CategoryDefine( FAST_NOM_55917484_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917484 );
      CategoryDefine( FAST_NOM_55917494_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917494 );
      CategoryDefine( FAST_NOM_55917504_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917504 );
      CategoryDefine( FAST_NOM_55917514_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917514 );
      CategoryDefine( FAST_NOM_55917524_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917524 );
      CategoryDefine( FAST_NOM_55917534_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917534 );
      CategoryDefine( FAST_NOM_55917544_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917544 );
      CategoryDefine( FAST_NOM_55917554_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917554 );
      CategoryDefine( FAST_NOM_55917564_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917564 );
      CategoryDefine( FAST_NOM_55917574_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917574 );
      CategoryDefine( FAST_NOM_55917584_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917584 );
      CategoryDefine( FAST_NOM_55917594_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917594 );
      CategoryDefine( FAST_NOM_55917604_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917604 );
      CategoryDefine( FAST_NOM_55917614_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917614 );
      CategoryDefine( FAST_NOM_55917624_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917624 );
      CategoryDefine( FAST_NOM_55917634_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917634 );
      CategoryDefine( FAST_NOM_55917644_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917644 );
      CategoryDefine( FAST_NOM_55917654_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917654 );
      CategoryDefine( FAST_NOM_55917664_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917664 );
      CategoryDefine( FAST_NOM_55917674_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917674 );
      CategoryDefine( FAST_NOM_55917684_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917684 );
      CategoryDefine( FAST_NOM_55917694_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917694 );
      CategoryDefine( FAST_NOM_55917704_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917704 );
      CategoryDefine( FAST_NOM_55917714_cat, Fast_Functional, s_ANY,
                      -FAST_NOM_55917714 );
      CategoryDefine( FAST_MAX_55917364_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917364 );
      CategoryDefine( FAST_MAX_55917374_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917374 );
      CategoryDefine( FAST_MAX_55917384_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917384 );
      CategoryDefine( FAST_MAX_55917394_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917394 );
      CategoryDefine( FAST_MAX_55917404_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917404 );
      CategoryDefine( FAST_MAX_55917414_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917414 );
      CategoryDefine( FAST_MAX_55917424_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917424 );
      CategoryDefine( FAST_MAX_55917434_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917434 );
      CategoryDefine( FAST_MAX_55917444_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917444 );
      CategoryDefine( FAST_MAX_55917454_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917454 );
      CategoryDefine( FAST_MAX_55917464_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917464 );
      CategoryDefine( FAST_MAX_55917474_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917474 );
      CategoryDefine( FAST_MAX_55917484_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917484 );
      CategoryDefine( FAST_MAX_55917494_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917494 );
      CategoryDefine( FAST_MAX_55917504_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917504 );
      CategoryDefine( FAST_MAX_55917514_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917514 );
      CategoryDefine( FAST_MAX_55917524_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917524 );
      CategoryDefine( FAST_MAX_55917534_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917534 );
      CategoryDefine( FAST_MAX_55917544_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917544 );
      CategoryDefine( FAST_MAX_55917554_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917554 );
      CategoryDefine( FAST_MAX_55917564_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917564 );
      CategoryDefine( FAST_MAX_55917574_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917574 );
      CategoryDefine( FAST_MAX_55917584_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917584 );
      CategoryDefine( FAST_MAX_55917594_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917594 );
      CategoryDefine( FAST_MAX_55917604_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917604 );
      CategoryDefine( FAST_MAX_55917614_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917614 );
      CategoryDefine( FAST_MAX_55917624_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917624 );
      CategoryDefine( FAST_MAX_55917634_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917634 );
      CategoryDefine( FAST_MAX_55917644_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917644 );
      CategoryDefine( FAST_MAX_55917654_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917654 );
      CategoryDefine( FAST_MAX_55917664_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917664 );
      CategoryDefine( FAST_MAX_55917674_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917674 );
      CategoryDefine( FAST_MAX_55917684_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917684 );
      CategoryDefine( FAST_MAX_55917694_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917694 );
      CategoryDefine( FAST_MAX_55917704_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917704 );
      CategoryDefine( FAST_MAX_55917714_cat, Fast_Functional, s_ANY,
                      -FAST_MAX_55917714 );
      CategoryDefine( In_leakage_cat, DC_Leakage, s_ANY,
                      -IIH_IIL );
      CategoryDefine( Vout_cat, DC_Leakage, s_ANY,
                      -VOUT );
      CategoryDefine( IO_Leakage_cat, DC_Leakage, s_ANY,
                      -LEAKAGE );
      CategoryDefine( AC_Prop_cat, AC_Prop, s_ANY,
                      -ACPROP );
      CategoryDefine( DIE_ID_cat, DIE_ID_bin, s_ANY,
                      -DIE_ID );                      {rev00p}
      CategoryDefine( Latch_Up_cat, Latch_Up, s_ANY,
                      -LATCHUP_TEST );


      CategoryDefine( VBOX_MIN1_FUNC_CAT, VBox_Functional, s_ANY,
                      -VBOX_MIN1_TEST ); {revvmin}
      CategoryDefine( VBOX_MAX1_FUNC_CAT, VBox_Functional, s_ANY,
                      -VBOX_MAX1_TEST ); {revvmin}
      CategoryDefine( VMIN_PRE1_CAT, VMin_Shift_Func, s_ANY,
                      -VMIN_PRE1_TEST ); {revvmin}
      CategoryDefine( VMIN_POST1_CAT, VMin_Shift_Func, s_ANY,
                      -VMIN_POST1_TEST ); {revvmin}
      CategoryDefine( ICCQ_DELTA_cat, ICCQ_bin, s_ANY,
                      -DELTA_ICCQ{Rev10a} );
    SortRuleClose;

  end;  (* INITIALIZE_LOT_INFORMATION *)



procedure SET_POWER( V_1V : treal; I_1V : treal;
                     V_3V : treal; I_3V : treal;
                     V_1Va : treal; I_1Va : treal;
                     V_1Vb : treal; I_1Vb : treal;
                     WAIT_TIME : treal );
(*
**********************************************************************
****            POWER SUPPLY SETUP                                ****
**********************************************************************
*)
  begin
        (* Changed to avoid forcing higher 8V range. rev05a *)
        SupplySet(PS_VDD, V_1V, I_1V);
        SupplySet(PS_VDD2, V_1Vb, I_1Vb);
        SupplySet(PS_VDDSHV, V_3V, I_3V);
        SupplySet(PS_VDDG, V_1Va, I_1Va);

        Enable( PS_VDD );
        Enable( PS_VDD2 );
        Enable( PS_VDDSHV );
        Enable( PS_VDDG );

        wait( WAIT_TIME );

  end;  (* SET_POWER *)

{rev06b Add power up}
procedure SET_POWER1( V_1V : treal; I_1V : treal;
                     V_3V : treal; I_3V : treal;
                     V_1Va : treal; I_1Va : treal;
                     V_1Vb : treal; I_1Vb : treal;
                     WAIT_TIME : treal );

  var

    VoltStep         : TReal;
    RampVolt         : TReal;
    StopVolt         : TReal;

(*
**********************************************************************
****            POWER SUPPLY SETUP                                ****
**********************************************************************
*)
  begin


        (* Changed to avoid forcing higher 8V range. rev04g *)
        SupplySet(PS_VDD, V_1V, I_1V);
        SupplySet(PS_VDD2, V_1Vb, I_1Vb);
        SupplySet(PS_VDDSHV, V_3V, I_3V);
        SupplySet(PS_VDDG, V_1Va, I_1Va);

{rev04g SupplySetLimit( PS_VDD, V_1V, I_1V, 8V, 0V );
        SupplySetLimit( PS_VDD2, V_1Vb, I_1Vb, 8V, 0V );
        SupplySetLimit( PS_VDDSHV, V_3V, I_3V, 8V, 0V );
        SupplySetLimit( PS_VDDG, V_1Va, I_1Va, 8V, 0V );
}
{        Enable( PS_VDD2  );
                 wait( 500mS );
        Enable( PS_VDD );
                 wait( 500mS );
        Enable( PS_VDDG );
                 wait( 500mS );
        Enable( PS_VDDSHV );

        wait( WAIT_TIME );
}

    VoltStep := 50mV;     {use 100mV steps}
    RampVolt := 0V;        {start a 0V}
    StopVolt := 1.95V;      {final supply voltage level}
    (* Set start level (0V) and enable supply. *)
    SupplySetLimit(PS_VDD2, 0V, 750mA, StopVolt, 0V);
    Enable(PS_VDD2);

    (* Now ramp the supply in 100mV steps. *)
    WHILE (RampVolt <= StopVolt) DO
    BEGIN
       RampVolt := RampVolt + VoltStep;
       SupplySetLimit(PS_VDD2, RampVolt, 750mA, StopVolt, 0V);
       Wait(200uS);        {it needs some settling time - could change}
    END;

        Enable( PS_VDD );
                 wait( 100uS );
        Enable( PS_VDDG );
                 wait( 100uS );
        Enable( PS_VDDSHV );

        wait( WAIT_TIME );

  end;  (* SET_POWER *)



procedure Power_down;
(*
**********************************************************************
****            POWER DOWN ALL HARDWARE                           ****
**********************************************************************
*)
  begin

        SetupSelect( OPEN_PINS_DC, FORMAT_1, TIMING_1 );
        Disable( PS_VDDG );
        Disable( PS_VDDSHV );
        Disable( PS_VDD );
        Disable( PS_VDD2 );
        Disable( s_ALL );

  end;  (* Power_down *)


procedure Sequence_down( V_1V : treal; I_1V : treal;
                         V_3V : treal; I_3V : treal;
                         V_1Va : treal; I_1Va : treal;
                         V_1Vb : treal; I_1Vb : treal;
                         WAIT_TIME : treal );
(*
**********************************************************************
**** SEQUENCE SUPPLIES DOWN IN REVERSE ORDER FROM SET_POWER.      ****
**** DOES NOT DISABLE SUPPLIES. (CONT,SHORTS TESTS)               ****
**********************************************************************
*)
  begin

        SupplySetLimit( PS_VDDG, V_1Va, I_1Va, 8V, 0V );
        SupplySetLimit( PS_VDDSHV, V_3V, I_3V, 8V, 0V );
        SupplySetLimit( PS_VDD, V_1V, I_1V, 8V, 0V );
        SupplySetLimit( PS_VDD2, V_1Vb, I_1Vb, 8V, 0V );
        Enable( PS_VDDG );
        Enable( PS_VDDSHV );
        Enable( PS_VDD );
        Enable( PS_VDD2 );

        wait( WAIT_TIME );

  end;  (* Sequence_down *)


(*
**********************************************************************
****            POWER SUPPLY SHORTS                               ****
**********************************************************************
*)
 procedure SUPPLY_SHORTS_TEST ;
  var
    TEST_RESULT          : boolean;
    STATUS               : integer;
    ICCQ_value           : treal;
    SUPPLY_SHORT_RESULT  : boolean;
    JUNCTION_LEAK_RESULT : boolean;
    TEMP_VDD, Clamp      : treal;
    Junction_min         : treal;
    Junction_max         : treal;
    PINS_VDD, Done       : boolean;

  begin
    TEST_RESULT := PASS;
    SUPPLY_SHORT_RESULT := PASS;
    SupplyShortsResult := PASS; {revtw}
    TEMP_VDD := 0.1V;
    Clamp := ICCQ_RANGE;
{rev_ICCQ}    Clamp := ICCQ_DATA_RANGE;
    Junction_min := ICCQ_MIN;
{rev_ICCQ}    Junction_min := ICCQ_DATA_MIN;
    Junction_max := ICCQ_MAX;
{rev_ICCQ}    Junction_max := ICCQ_DATA_MAX;

{rev00m}    Clamp := 11mA {ICCQ_RANGE};
{rev00m}    Junction_min := -1mA {ICCQ_MIN};
{rev00m}    Junction_max := 10mA;

    TestOpen( SUPPLY_SHORTS );

      SetupSelect( OPEN_PINS_DC, FORMAT_1, TIMING_1 );

      SET_POWER( 0.0V, 215mA,
                 0.0V, 215mA,
                 0.0V, 215mA,
                 0.0V, 215mA,
                 2mS );


      if ( V_DatalogEnabled ) then
        begin
          DatalogResetPinList( ALL_PINS_PLUS );
          DatalogResetType(s_DPSI);
        end;

      Datalog('comment=''Supply Shorts Test''',chr(10));


        (* TEST VDD *)
        Datalog('VCC=0.1V',chr(10));
        SupplySetComp( PS_VDD, 1uF );
        SupplySetLimit( PS_VDD, TEMP_VDD,
                     215mA, 200ma, -10ma );
        wait(2ms);
        SupplySetLimit( PS_VDD, TEMP_VDD,
                     Clamp, Clamp*0.95, -(Clamp*0.05));
        wait(2ms);
        if SupplyReadLimit( PS_VDD, s_CURRENT,
                         ICCQ_value ) = FAIL then
          TEST_RESULT := FAIL;
        SupplySet( PS_VDD, 0.0V, 215mA );

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TWPDLDatalogRealVariable('SS_VDD', Amps, Single(ICCQ_value),
                                      TWMinimumData);
#endif                                      {revtw}
#endif                                      {revtw}


        if ((ICCQ_value > Junction_max) or (ICCQ_value < Junction_min)) then
          begin
            Datalog('name= SUPPLY_SHORT_PS_VDD',
                    ';value=',ICCQ_value:4:2,';vcc=',TEMP_VDD:5:1,
                    ';min=',Junction_min:4:2,';max=',Junction_max,
                    ';range=',Clamp,';**',chr(10));
            SUPPLY_SHORT_RESULT := FAIL;
            SupplyShortsResult := FAIL; {revtw}
          end
        else
          begin
            Datalog('name= SUPPLY_SHORT_PS_VDD',
                    ';value=',ICCQ_value:4:2,';vcc=',TEMP_VDD:5:1,
                    ';min=',Junction_min:4:2,';max=',Junction_max,
                    ';range=',Clamp,';',chr(10));
          end;

        (* TEST VDDG *)
        Datalog('VCC=0.1V',chr(10));
        SupplySetComp( PS_VDDG, 1uF );
        SupplySetLimit( PS_VDDG, TEMP_VDD,
                     215mA, 200ma, -10ma );
        wait(2ms);
        SupplySetLimit( PS_VDDG, TEMP_VDD,
                     Clamp, Clamp*0.95, -(Clamp*0.05));
        wait(2ms);
        if SupplyReadLimit( PS_VDDG, s_CURRENT,
                         ICCQ_value ) = FAIL then
          TEST_RESULT := FAIL;
        SupplySet( PS_VDDG, 0.0V, 215mA );

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TWPDLDatalogRealVariable('SS_VDDG', Amps, Single(ICCQ_value),
                                      TWMinimumData);
#endif                                      {revtw}
#endif                                      {revtw}


        if ((ICCQ_value > Junction_max) or (ICCQ_value < Junction_min)) then
          begin
            Datalog('name= SUPPLY_SHORT_PS_VDDG',
                    ';value=',ICCQ_value:4:2,';vcc=',TEMP_VDD:5:1,
                    ';min=',Junction_min:4:2,';max=',Junction_max,
                    ';range=',Clamp,';**',chr(10));
            SUPPLY_SHORT_RESULT := FAIL;
            SupplyShortsResult := FAIL; {revtw}
          end
        else
          begin
            Datalog('name= SUPPLY_SHORT_PS_VDDG',
                    ';value=',ICCQ_value:4:2,';vcc=',TEMP_VDD:5:1,
                    ';min=',Junction_min:4:2,';max=',Junction_max,
                    ';range=',Clamp,';',chr(10));
          end;

        (* TEST VDDSHV *)
        Datalog('VCC=0.1V',chr(10));
        SupplySetComp( PS_VDDSHV, 1uF );
        SupplySetLimit( PS_VDDSHV, TEMP_VDD,
                     215mA, 200ma, -10ma );
        wait(2ms);
        SupplySetLimit( PS_VDDSHV, TEMP_VDD,
                     Clamp, Clamp*0.95, -(Clamp*0.05));
        wait(2ms);
        if SupplyReadLimit( PS_VDDSHV, s_CURRENT,
                         ICCQ_value ) = FAIL then
          TEST_RESULT := FAIL;
        SupplySet( PS_VDDSHV, 0.0V, 215mA );

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TWPDLDatalogRealVariable('SS_VDDSHV', Amps, Single(ICCQ_value),
                                      TWMinimumData);
#endif                                      {revtw}
#endif                                      {revtw}


        if ((ICCQ_value > Junction_max) or (ICCQ_value < Junction_min)) then
          begin
            Datalog('name= SUPPLY_SHORT_PS_VDDSHV',
                    ';value=',ICCQ_value:4:2,';vcc=',TEMP_VDD:5:1,
                    ';min=',Junction_min:4:2,';max=',Junction_max,
                    ';range=',Clamp,';**',chr(10));
            SUPPLY_SHORT_RESULT := FAIL;
            SupplyShortsResult := FAIL; {revtw}
          end
        else
          begin
            Datalog('name= SUPPLY_SHORT_PS_VDDSHV',
                    ';value=',ICCQ_value:4:2,';vcc=',TEMP_VDD:5:1,
                    ';min=',Junction_min:4:2,';max=',Junction_max,
                    ';range=',Clamp,';',chr(10));
          end;

        (* TEST VDD2 *)
        Datalog('VCC=0.1V',chr(10));
        SupplySetComp( PS_VDD2, 1uF );
        SupplySetLimit( PS_VDD2, TEMP_VDD,
                     215mA, 200ma, -10ma );
        wait(2ms);
        SupplySetLimit( PS_VDD2, TEMP_VDD,
                     Clamp, Clamp*0.95, -(Clamp*0.05));
        wait(2ms);
        if SupplyReadLimit( PS_VDD2, s_CURRENT,
                         ICCQ_value ) = FAIL then
          TEST_RESULT := FAIL;
        SupplySet( PS_VDD2, 0.0V, 215mA );

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TWPDLDatalogRealVariable('SS_VDD2', Amps, Single(ICCQ_value),
                                      TWMinimumData);
#endif                                      {revtw}
#endif                                      {revtw}


        if ((ICCQ_value > Junction_max) or (ICCQ_value < Junction_min)) then
          begin
            Datalog('name= SUPPLY_SHORT_PS_VDD2',
                    ';value=',ICCQ_value:4:2,';vcc=',TEMP_VDD:5:1,
                    ';min=',Junction_min:4:2,';max=',Junction_max,
                    ';range=',Clamp,';**',chr(10));
            SUPPLY_SHORT_RESULT := FAIL;
            SupplyShortsResult := FAIL; {revtw}
          end
        else
          begin
            Datalog('name= SUPPLY_SHORT_PS_VDD2',
                    ';value=',ICCQ_value:4:2,';vcc=',TEMP_VDD:5:1,
                    ';min=',Junction_min:4:2,';max=',Junction_max,
                    ';range=',Clamp,';',chr(10));
          end;

      ResultRecord( SUPPLY_SHORT_RESULT );

      Disable( s_ALL );

      if ( V_DatalogEnabled ) then
        begin
          DatalogResetPinList( ALL_PINS_PLUS );
          DatalogSetPinList( ALL_PINS );
        end;

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;



(*
****
****   Special test conditions to be met for the junction leakage test:
****
****     a. Disable all pullups/pulldowns
****     b. Any output pins connected through I/Os having an internal
****        resistor terminated to Vdd need to be OPEN before
****        current measurement.
****
****   Limits:  Use the following:
****
****              Junction min = ICCQ_MIN
{rev_ICCQ}****              Junction min = ICCQ_DATA_MIN
****              Junction max = ICCQ_MAX
{rev_ICCQ}****              Junction max = ICCQ_DATA_MAX
****
****              where ICCQ_MIN and ICCQ_MAX are the IDDQ test limits
{rev_ICCQ}****              where ICCQ_DATA_MIN and ICCQ_DATA_MAX are the IDDQ t
est limits
****              at the corresponding sort rule.
****
*)
    JUNCTION_LEAK_RESULT := PASS;
    PINS_VDD := true;
    Done := false;

    TestOpen( JUNCTION_LEAKAGE );

      SetupSelect( OPEN_PINS_DC, FORMAT_1, TIMING_1 );

      SET_POWER( 0.0V, 215mA,
                 0.0V, 215mA,
                 0.0V, 215mA,
                 0.0V, 215mA,
                 2mS );

      if ( V_DatalogEnabled ) then
        begin
          DatalogResetPinList( ALL_PINS_PLUS );
          DatalogResetType(s_DPSI);

        end;

      Datalog('comment=''Junction Leakage Test''',chr(10));

      while (not Done) do
        begin

          if (PINS_VDD ) then
            Datalog(chr(10),'comment=''All pins forced to VDD.''',chr(10))
          else
            Datalog(chr(10),'comment=''All pins forced to GND.''',chr(10));

          (* TEST JUNCTION LEAKAGE FORWARD BIASED *)
          Datalog('comment=''Forward-Biased''',chr(10));

          SupplySetComp( PS_VDD, 3uF );
          SupplySetComp( PS_VDDG, 3uF );
          SupplySetComp( PS_VDDSHV, 3uF );
          SupplySetComp( PS_VDD2, 3uF );

          SupplySetLimit( PS_VDD, TEMP_VDD,
                          215mA, 200mA, -10mA );
          SupplySetLimit( PS_VDDG, TEMP_VDD,
                          215mA, 200mA, -10mA );
          SupplySetLimit( PS_VDDSHV, TEMP_VDD,
                          215mA, 200mA, -10mA );
          SupplySetLimit( PS_VDD2, TEMP_VDD,
                          215mA, 200mA, -10mA );
          wait( 4ms );
          SupplySetLimit( PS_VDD, TEMP_VDD,
                          Clamp, Clamp*0.95, -(Clamp*0.05) );
          SupplySetLimit( PS_VDDG, TEMP_VDD,
                          Clamp, Clamp*0.95, -(Clamp*0.05) );
          SupplySetLimit( PS_VDDSHV, TEMP_VDD,
                          Clamp, Clamp*0.95, -(Clamp*0.05) );
          SupplySetLimit( PS_VDD2, TEMP_VDD,
                          Clamp, Clamp*0.95, -(Clamp*0.05) );

          if (PINS_VDD) then
            DCSetForce( TEMP_VDD, ALL_PINS )
          else
            DCSetForce( 0V, ALL_PINS );
          wait( 4ms );

          (* TEST VDD *)
          TEST_RESULT := SupplyReadLimit( PS_VDD, s_CURRENT, ICCQ_value );

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    if (PINS_VDD) then

    TWPDLDatalogRealVariable('JSHI_VDD', Amps, Single(ICCQ_value),
                                      TWMinimumData)
    else
    
    TWPDLDatalogRealVariable('JSLO_VDD', Amps, Single(ICCQ_value),
                                      TWMinimumData);

#endif                                      {revtw}
#endif                                      {revtw}


          if ((ICCQ_value > Junction_max) or
              (ICCQ_value < Junction_min)) then
            begin
              if (PINS_VDD) then
                Datalog('name= JN_LEAK_VDD_PS_VDD',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp,';**', chr(10))
              else
                Datalog('name= JN_LEAK_GND_PS_VDD',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp, ';**', chr(10));

              JUNCTION_LEAK_RESULT := FAIL;
              SupplyShortsResult := FAIL; {revtw}

            end
          else
            begin
              if (PINS_VDD) then
                Datalog('name= JN_LEAK_VDD_PS_VDD',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp,';', chr(10))
              else
                Datalog('name= JN_LEAK_GND_PS_VDD',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp, ';', chr(10));

            end;

          (* TEST VDDG *)
          TEST_RESULT := SupplyReadLimit( PS_VDDG, s_CURRENT, ICCQ_value );

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    if (PINS_VDD) then

    TWPDLDatalogRealVariable('JSHI_VDDG', Amps, Single(ICCQ_value),
                                      TWMinimumData)
    else
    
    TWPDLDatalogRealVariable('JSLO_VDDG', Amps, Single(ICCQ_value),
                                      TWMinimumData);

#endif                                      {revtw}
#endif                                      {revtw}


          if ((ICCQ_value > Junction_max) or
              (ICCQ_value < Junction_min)) then
            begin
              if (PINS_VDD) then
                Datalog('name= JN_LEAK_VDD_PS_VDDG',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp,';**', chr(10))
              else
                Datalog('name= JN_LEAK_GND_PS_VDDG',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp, ';**', chr(10));

              JUNCTION_LEAK_RESULT := FAIL;
              SupplyShortsResult := FAIL; {revtw}

            end
          else
            begin
              if (PINS_VDD) then
                Datalog('name= JN_LEAK_VDD_PS_VDDG',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp,';', chr(10))
              else
                Datalog('name= JN_LEAK_GND_PS_VDDG',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp, ';', chr(10));

            end;

          (* TEST VDDSHV *)
          TEST_RESULT := SupplyReadLimit( PS_VDDSHV, s_CURRENT, ICCQ_value );

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    if (PINS_VDD) then

    TWPDLDatalogRealVariable('JSHI_VDDSHV', Amps, Single(ICCQ_value),
                                      TWMinimumData)
    else
    
    TWPDLDatalogRealVariable('JSLO_VDDSHV', Amps, Single(ICCQ_value),
                                      TWMinimumData);

#endif                                      {revtw}
#endif                                      {revtw}


          if ((ICCQ_value > Junction_max) or
              (ICCQ_value < Junction_min)) then
            begin
              if (PINS_VDD) then
                Datalog('name= JN_LEAK_VDD_PS_VDDSHV',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp,';**', chr(10))
              else
                Datalog('name= JN_LEAK_GND_PS_VDDSHV',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp, ';**', chr(10));

              JUNCTION_LEAK_RESULT := FAIL;
              SupplyShortsResult := FAIL; {revtw}

            end
          else
            begin
              if (PINS_VDD) then
                Datalog('name= JN_LEAK_VDD_PS_VDDSHV',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp,';', chr(10))
              else
                Datalog('name= JN_LEAK_GND_PS_VDDSHV',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp, ';', chr(10));

            end;

          (* TEST VDD2 *)
          TEST_RESULT := SupplyReadLimit( PS_VDD2, s_CURRENT, ICCQ_value );

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    if (PINS_VDD) then

    TWPDLDatalogRealVariable('JSHI_VDD2', Amps, Single(ICCQ_value),
                                      TWMinimumData)
    else
    
    TWPDLDatalogRealVariable('JSLO_VDD2', Amps, Single(ICCQ_value),
                                      TWMinimumData);

#endif                                      {revtw}
#endif                                      {revtw}


          if ((ICCQ_value > Junction_max) or
              (ICCQ_value < Junction_min)) then
            begin
              if (PINS_VDD) then
                Datalog('name= JN_LEAK_VDD_PS_VDD2',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp,';**', chr(10))
              else
                Datalog('name= JN_LEAK_GND_PS_VDD2',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp, ';**', chr(10));

              JUNCTION_LEAK_RESULT := FAIL;
              SupplyShortsResult := FAIL; {revtw}

            end
          else
            begin
              if (PINS_VDD) then
                Datalog('name= JN_LEAK_VDD_PS_VDD2',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp,';', chr(10))
              else
                Datalog('name= JN_LEAK_GND_PS_VDD2',
                        ';  value=',ICCQ_value:4:2,';  vcc= ',TEMP_VDD:5:1,
                        ';  min=',Junction_min:4:2,
                        ';  max=',Junction_max,
                        ';  range=', Clamp, ';', chr(10));

            end;

          if (not PINS_VDD) then
            Done := true
          else
            PINS_VDD := false;

        end;  { while (not Done)  }

      if( not JUNCTION_LEAK_RESULT) then
        Datalog(chr(10),'** Junction Leakage test failed', chr(10) );

      ResultRecord( JUNCTION_LEAK_RESULT );

      SET_POWER( 0.0V, 215mA,
                 0.0V, 215mA,
                 0.0V, 215mA,
                 0.0V, 215mA,
                 2mS );

      SetupSelect( OPEN_PINS_DC, FORMAT_1, TIMING_1 );

      Disable( s_ALL );

      if ( V_DatalogEnabled ) then
        begin
          DatalogResetPinList( ALL_PINS_PLUS );
          DatalogSetPinList( ALL_PINS );
          DatalogSetType(s_DPSI);
        end;

    TestClose;  (* JUNCTION_LEAKAGE *)

  end; (* SUPPLY_SHORTS_TEST *)


procedure LOG_PINS_AND_BINS;
(*
************************************************************************
****           DATALOG PIN AND BIN INFORMATION                      ****
************************************************************************
*)
  begin

    TestOpen( LOG_INFO );

      Datalog('comment=''TEST_LIMIT :',TEST_LIMIT,'''',chr(10));

      Datalog('comment=''PIN_MAP :',PIN_MAPS,'''',chr(10));

      If (NOT V_DatalogEnabled) then
          Have_not_datalogged := TRUE;
      If ((V_DatalogEnabled) and (Have_not_datalogged)) then
        Begin
          Have_not_datalogged := FALSE;

Datalog('+----+----------+-+--------------+--+----------',
        '+----------+--+-+-+-+-----+-------+',chr(10));
Datalog('|    |          | |              |  |          ',
        '|          |  |S| | |     |       |',chr(10));
Datalog('|    |          | |              |AM|          ',
        '|          |  |u|D| |     |M      |',chr(10));
Datalog('|    |          | |              |sa|DP        ',
        '|          |  |p|i|V|     |at     |',chr(10));
Datalog('|    |          |I|              |sc|ia        ',
        '|          |  |p|o|r|     |cy     |',chr(10));
Datalog('|Pkg |          |O|Cell          |or|fi        ',
        '|Ioh/Iol   |OD|l|d|e|PU   |rp     |',chr(10));
Datalog('|Pin |Pin Name  |B|Name          |co|fr        ',
        '|or Bias   |3S|y|e|f|PD   |oe     |',chr(10));
Datalog('+====+==========+=+==============+==+==========',
        '+==========+==+=+=+=+=====+=======+',chr(10));
Datalog('| P29|C6XX_OUTP |O|OPD083        |  |C6XX_OUTN ',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| P28|C6XX_OUTN |O|OPD083        |  |C6XX_OUTP ',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| G30|C167_15UTP|O|OPD083        |  |C167_155_O',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| G29|C167_155_O|O|OPD083        |  |C167_15UTP',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| B18|C1G35_OUTP|O|GNDLF2T5C0W0  |  |C1G35_OUTN',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| A18|C1G35_OUTN|O|GNDLF2T5C0W0  |  |          ',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| Y30|PAR_6XX_TP|O|OPD083        |  |PAR_6XX_OU',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| Y31|PAR_6XX_OU|O|OPD083        |  |PAR_6XX_TP',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| B20|P2G7_OUTP |O|GNDLF2T5C0W0  |  |P2G7_OUTN ',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| A20|P2G7_OUTN |O|GNDLF2T5C0W0  |  |          ',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| B19|D2G7_OUTP3|O|GNDLF2T5C0W0  |  |D2G7_OUTN3',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| C15|D2G7_OUTP2|O|GNDLF2T5C0W0  |  |D2G7_OUTN2',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| C14|D2G7_OUTP1|O|GNDLF2T5C0W0  |  |D2G7_OUTN1',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| A13|D2G7_OUTP0|O|GNDLF2T5C0W0  |  |D2G7_OUTN0',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| A19|D2G7_OUTN3|O|GNDLF2T5C0W0  |  |          ',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| D15|D2G7_OUTN2|O|GNDLF2T5C0W0  |  |D2G7_OUTP2',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| D14|D2G7_OUTN1|O|GNDLF2T5C0W0  |  |D2G7_OUTP1',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| B13|D2G7_OUTN0|O|GNDLF2T5C0W0  |  |D2G7_OUTP0',
        '|          |3S| |B| |     |CML    |',chr(10));
Datalog('| A22|MODE2G7   |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| N31|DX6X_OUTP5|O|OPD083        |  |DX6X_OUTN5',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| N29|DX6X_OUTP4|O|OPD083        |  |DX6X_OUTN4',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| M31|DX6X_OUTP3|O|OPD083        |  |DX6X_OUTN3',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| M29|DX6X_OUTP2|O|OPD083        |  |DX6X_OUTN2',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| L30|DX6X_OUTP1|O|OPD083        |  |DX6X_OUTN1',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| K30|D6XX_OUTP1|O|OPD083        |  |D6XX_OUTN1',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| J30|D6XX_OUTP9|O|OPD083        |  |D6XX_OUTN9',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| H30|D6XX_OUTP8|O|OPD083        |  |D6XX_OUTN8',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| W28|D6XX_OUTP7|O|OPD083        |  |D6XX_OUTN7',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| W30|D6XX_OUTP6|O|OPD083        |  |D6XX_OUTN6',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| V28|D6XX_OUTP5|O|OPD083        |  |D6XX_OUTN5',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| V30|D6XX_OUTP4|O|OPD083        |  |D6XX_OUTN4',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| U28|D6XX_OUTP3|O|OPD083        |  |D6XX_OUTN3',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| U30|D6XX_OUTP2|O|OPD083        |  |D6XX_OUTN2',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| R29|D6XX_OUT10|O|OPD083        |  |D6XX_OUT11',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| P31|D6XX_OUTP0|O|OPD083        |  |D6XX_OUTN0',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| N30|DX6X_OUTN5|O|OPD083        |  |DX6X_OUTP5',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| N28|DX6X_OUTN4|O|OPD083        |  |DX6X_OUTP4',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| M30|DX6X_OUTN3|O|OPD083        |  |DX6X_OUTP3',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| M28|DX6X_OUTN2|O|OPD083        |  |DX6X_OUTP2',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| L29|DX6X_OUTN1|O|OPD083        |  |DX6X_OUTP1',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| K29|D6XX_OUTN1|O|OPD083        |  |D6XX_OUTP1',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| J29|D6XX_OUTN9|O|OPD083        |  |D6XX_OUTP9',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| H29|D6XX_OUTN8|O|OPD083        |  |D6XX_OUTP8',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| W29|D6XX_OUTN7|O|OPD083        |  |D6XX_OUTP7',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| W31|D6XX_OUTN6|O|OPD083        |  |D6XX_OUTP6',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| V29|D6XX_OUTN5|O|OPD083        |  |D6XX_OUTP5',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| V31|D6XX_OUTN4|O|OPD083        |  |D6XX_OUTP4',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| U29|D6XX_OUTN3|O|OPD083        |  |D6XX_OUTP3',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| U31|D6XX_OUTN2|O|OPD083        |  |D6XX_OUTP2',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| R28|D6XX_OUT11|O|OPD083        |  |D6XX_OUT10',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| P30|D6XX_OUTN0|O|OPD083        |  |D6XX_OUTP0',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| AJ9|D622_INP15|I|IPD174        |  |D622_INN15',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ10|D622_INP14|I|IPD174        |  |D622_INN14',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ11|D622_INP13|I|IPD174        |  |D622_INN13',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AH12|D622_INP12|I|IPD174        |  |D622_INN12',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK12|D622_INP11|I|IPD174        |  |D622_INN11',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AH13|D622_INP10|I|IPD174        |  |D622_INN10',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK13|D622_INP9 |I|IPD174        |  |D622_INN9 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AH14|D622_INP8 |I|IPD174        |  |D622_INN8 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK14|D622_INP7 |I|IPD174        |  |D622_INN7 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AH15|D622_INP6 |I|IPD174        |  |D622_INN6 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK15|D622_INP5 |I|IPD174        |  |D622_INN5 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AL17|D622_INP4 |I|IPD174        |  |D622_INN4 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ17|D622_INP3 |I|IPD174        |  |D622_INN3 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AL18|D622_INP2 |I|IPD174        |  |D622_INN2 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ18|D622_INP1 |I|IPD174        |  |D622_INN1 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AL19|D622_INP0 |I|IPD174        |  |D622_INN0 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('| AK9|D622_INN15|I|IPD174        |  |D622_INP15',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK10|D622_INN14|I|IPD174        |  |D622_INP14',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK11|D622_INN13|I|IPD174        |  |D622_INP13',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ12|D622_INN12|I|IPD174        |  |D622_INP12',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AL12|D622_INN11|I|IPD174        |  |D622_INP11',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ13|D622_INN10|I|IPD174        |  |D622_INP10',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AL13|D622_INN9 |I|IPD174        |  |D622_INP9 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ14|D622_INN8 |I|IPD174        |  |D622_INP8 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AL14|D622_INN7 |I|IPD174        |  |D622_INP7 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ15|D622_INN6 |I|IPD174        |  |D622_INP6 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AL15|D622_INN5 |I|IPD174        |  |D622_INP5 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK17|D622_INN4 |I|IPD174        |  |D622_INP4 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AH17|D622_INN3 |I|IPD174        |  |D622_INP3 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK18|D622_INN2 |I|IPD174        |  |D622_INP2 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AH18|D622_INN1 |I|IPD174        |  |D622_INP1 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK19|D622_INN0 |I|IPD174        |  |D622_INP0 ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AL20|C155_BPLNP|I|IPD174        |  |C155_BPL_I',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK20|C155_BPL_I|I|IPD174        |  |C155_BPLNP',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('| AJ8|C8K_BPLP  |I|IPD174        |  |C8K_BPLN  ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('| AK8|C8K_BPLN  |I|IPD174        |  |C8K_BPLP  ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ19|C155_CSDNP|I|IPD174        |  |C155_CSD_I',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AH19|C155_CSD_I|I|IPD174        |  |C155_CSDNP',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('| AJ7|C8K_CSDP  |I|IPD174        |  |C8K_CSDN  ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('| AK7|C8K_CSDN  |I|IPD174        |  |C8K_CSDP  ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('| D11|C5_HCH_RX |O|OUI83         |  |          ',
        '|-8MA/8MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| A10|P5_HCH_RX |O|OUI83         |  |          ',
        '|-8MA/8MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| D10|D5_HCH_RX_|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  A9|D5_HCH_RX7|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| E10|D5_HCH_RX6|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  B9|D5_HCH_RX5|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  C9|D5_HCH_RX4|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  D9|D5_HCH_RX3|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  A8|D5_HCH_RX2|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  E9|D5_HCH_RX1|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  B8|D5_HCH_RX0|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| C10|D10_BXI_RX|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AK23|C6XX_EXTP |I|IPD174        |  |C6XX_EXTN ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ23|C6XX_EXTN |I|IPD174        |  |C6XX_EXTP ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK24|C666_EXTP |I|IPD174        |  |C666_EXTN ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ24|C666_EXTN |I|IPD174        |  |C666_EXTP ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AA29|C80_EXTP  |O|OPD083        |  |C80_EXTN  ',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('|AA30|C80_EXTN  |O|OPD083        |  |C80_EXTP  ',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| Y28|C83_EXTP  |O|OPD083        |  |C83_EXTN  ',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('| Y29|C83_EXTN  |O|OPD083        |  |C83_EXTP  ',
        '|          |50| |B| |     |LVDS   |',chr(10));
Datalog('|  B7|ONDDSI    |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('|  E8|ONMFRI    |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('|  A7|ONCKI     |I|IDH09         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('| E22|CICLK     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| C23|CICSN     |I|IDH09         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('| B25|CIINF7    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('| B25|CIINF7    |B|OUKB3         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('| E24|CIINF6    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('| E24|CIINF6    |B|OUKB3         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('| A25|CIINF5    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('| A25|CIINF5    |B|OUKB3         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('| D24|CIINF4    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('| D24|CIINF4    |B|OUKB3         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('| C24|CIINF3    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('| C24|CIINF3    |B|OUKB3         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('| B24|CIINF2    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('| B24|CIINF2    |B|OUKB3         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('| E23|CIINF1    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('| E23|CIINF1    |B|OUKB3         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('| A24|CIINF0    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('| A24|CIINF0    |B|OUKB3         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('| C22|CIACKN    |O|OUKB3         |  |          ',
        '|-12MA/24MA|3S| |B| |     |CMOS   |',chr(10));
Datalog('| D22|CICSRN    |O|OUKB3         |  |          ',
        '|-12MA/24MA|3S| |B| |     |CMOS   |',chr(10));
Datalog('| B23|CTLID_RSTN|I|IDI09         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('|AK21|DATA_V_INP|I|IPD174        |  |DATA_VALID',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ21|DATA_VALID|I|IPD174        |  |DATA_V_INP',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ20|ES_SPILLP |I|IPD174        |  |ES_SPILLN ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AH20|ES_SPILLN |I|IPD174        |  |ES_SPILLP ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AK22|DATVAL_INP|I|IPD174        |  |DATVAL_ES_',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AJ22|DATVAL_ES_|I|IPD174        |  |DATVAL_INP',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|  F5|RECENTER  |O|OUK83         |  |          ',
        '|-8MA/8MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  E2|MX_PAR_TOG|O|OUK83         |  |          ',
        '|-8MA/8MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  H4|AISINSMSOH|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  C7|RSTN      |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('|  D7|POISON    |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('|  E7|REIRDI    |I|IDH09         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('|AE29|KAINP     |I|IPD174        |  |KAINN     ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AE30|KAINN     |I|IPD174        |  |KAINP     ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AD29|KBINP     |I|IPD174        |  |KBINN     ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AD30|KBINN     |I|IPD174        |  |KBINP     ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|  J5|GPIO15    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  J5|GPIO15    |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  J4|GPIO14    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  J4|GPIO14    |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  J2|GPIO13    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  J2|GPIO13    |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  J1|GPIO12    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  J1|GPIO12    |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  K3|GPIO11    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  K3|GPIO11    |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  K1|GPIO10    |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  K1|GPIO10    |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  L3|GPIO9     |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  L3|GPIO9     |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  M5|GPIO8     |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  M5|GPIO8     |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  M3|GPIO7     |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  M3|GPIO7     |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  M1|GPIO6     |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  M1|GPIO6     |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  N4|GPIO5     |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  N4|GPIO5     |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  N2|GPIO4     |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  N2|GPIO4     |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  P5|GPIO3     |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  P5|GPIO3     |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  P3|GPIO2     |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  P3|GPIO2     |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  P1|GPIO1     |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  P1|GPIO1     |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  R4|GPIO0     |B|IDI09         |  |          ',
        '|          |  | |B| |PS100|CMOS   |',chr(10));
Datalog('|  R4|GPIO0     |B|OUK83         |  |          ',
        '|          |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  U1|BYPASS_PLL|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  E3|IDDQN     |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('|  D8|THZ_N     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  C6|T_SET_BD2I|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AG4|T_DISARST |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  H5|TOUT7     |O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  G2|TOUT6     |O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  G3|TOUT5     |O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  G4|TOUT4     |O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  F2|TOUT3     |O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  G5|TOUT2     |O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  F3|TOUT1     |O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  E1|TOUT0     |O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| AH6|TPO       |O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|AC29|TC166P    |I|IPD174        |  |TC166N    ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AC30|TC166N    |I|IPD174        |  |TC166P    ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('| AE3|T_CLK13   |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  B4|T_CLK12   |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  B6|T_CLK11   |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AA3|T_CLK10   |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AA2|T_CLK9    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  Y5|T_CLK8    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  Y4|T_CLK7    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  Y3|T_CLK6    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  Y2|T_CLK5    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  Y1|T_CLK4    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  W5|T_CLK3    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  W4|T_CLK2    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  W3|T_CLK1    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  W2|T_CLK0    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  H3|TM_SCAN   |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  R2|TE_SCAN   |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AC2|TSCI7     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AB5|TSCI6     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AC1|TSCI5     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AB4|TSCI4     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AB3|TSCI3     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AB2|TSCI2     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AB1|TSCI1     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AA4|TSCI0     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  D6|TDO       |O|OUKB3         |  |          ',
        '|-12MA/24MA|3S| |B| |     |CMOS   |',chr(10));
Datalog('|  D2|TDI       |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  E6|TCK       |I|IDH09         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('|  C5|TMS       |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  E4|TRSTN     |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  U2|TBIST_RUN |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AC4|TBIST_ROT |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  U3|TM_RAM    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  V5|TBIST_FAIL|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  V4|TBIST_DONE|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|AE27|TM_PLL    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|  R1|TPLL_TEST1|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AK28|TM_HSI    |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AF4|THSI_BYPS1|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AF27|THSI_BYPAS|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AF28|THSI_SEL01|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AG30|THSI_SEL00|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AF5|THSI_SEL11|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AG2|THSI_SEL10|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AJ27|THSI_PWRDN|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AG26|RSTZ_HSI  |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AJ6|THSI_INA  |I|CK814A        |  |          ',
        '|          |  | |B| |     |TESTINA|',chr(10));
Datalog('| AG3|THSI_OPEN |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AE2|TESTSELZ15|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AD5|TESTSELZ14|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AE1|TESTSELZ13|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AD4|TESTSELZ12|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AD3|TESTSELZ11|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AD2|TESTSELZ10|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AC5|TESTSELZ9 |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AD1|TESTSELZ8 |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AH26|TESTSELZ7 |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AL27|TESTSELZ6 |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AJ26|TESTSELZ5 |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AG25|TESTSELZ4 |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AK26|TESTSELZ3 |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AH25|TESTSELZ2 |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AJ25|TESTSELZ1 |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AK25|TESTSELZ0 |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AH2|THSI_STAND|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AF2|THSI_CKGE1|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AG31|THSI_CKGEN|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AG1|THSI_SELN1|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AF29|THSI_SEL_E|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AE4|THSI_ACC_S|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AE5|THSI_RESYN|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AF3|TC78_SEL  |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| AG7|THSI_OUTA |O|CK814A        |  |          ',
        '|          |  | |B| |     |AOUT   |',chr(10));
Datalog('| AJ5|THSI_TCKOU|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| AK4|THSI_TESTD|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| AG6|THSI_OUTD1|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|AH30|THSI_OUTD0|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| C26|THSI_P2S  |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| E31|THSI_D787 |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('| F28|THSI_D786 |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('| E30|THSI_D785 |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('| F27|THSI_D784 |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('| C27|THSI_D783 |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('| E26|THSI_D782 |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('| B27|THSI_D781 |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('| D26|THSI_D780 |I|IDH04         |  |          ',
        '|          |  | |B| |     |CMOS   |',chr(10));
Datalog('| D25|BYPASS_HSI|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('|AB29|TC622P    |I|IPD174        |  |TC622N    ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('|AB30|TC622N    |I|IPD174        |  |TC622P    ',
        '|          |  | |G| |     |LVDS   |',chr(10));
Datalog('| E25|RSTZ_SHSI |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| B26|THSI_RP_BY|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| B17|C1G35_INP |I|GNDLF2T5C0W0  |  |C1G35_INN ',
        '|          |  | |B| |     |CML    |',chr(10));
Datalog('| A17|C1G35_INN |I|GNDLF2T5C0W0  |  |C1G35_INP ',
        '|          |  | |B| |     |CML    |',chr(10));
Datalog('| D20|T2G7_BYPAS|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| B11|T2G7_TDO  |O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| D21|T2G7_PRMP0|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| C21|T2G7_PRE_E|I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| E20|TM_SHSI   |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| B21|T2G7_TDI  |I|IDH09         |  |          ',
        '|          |  | |B| |PS020|CMOS   |',chr(10));
Datalog('| A12|PRBSGSYNC4|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| B12|PRBSGSYNC3|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| C12|PRBSGSYNC2|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| D12|PRBSGSYNC1|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('| E12|PRBSGSYNC0|O|OUK43         |  |          ',
        '|-4MA/4MA  |3S| |B| |     |CMOS   |',chr(10));
Datalog('|  V2|TMPDIOA   |?|TG001         |  |          ',
        '|          |  | |G| |     |TDIO   |',chr(10));
Datalog('|  V1|TMPDIOK   |?|TG001         |  |          ',
        '|          |  | |G| |     |       |',chr(10));
Datalog('|AC28|VBIASLVDA1|I|VBIASLVDSIA1  |  |          ',
        '|          |  | |B|Y|     |LVDS   |',chr(10));
Datalog('|AD31|VBIASLVDB1|I|VBIASLVDSIB1  |  |          ',
        '|          |  | |B|Y|     |LVDS   |',chr(10));
Datalog('|AG22|VIBASLVDSA|I|VBIASLVDSIA   |  |          ',
        '|          |  | |B|Y|     |LVDS   |',chr(10));
Datalog('|AL23|VBIASLVDSI|I|VBIASLVDSIB   |  |          ',
        '|          |  | |B|Y|     |LVDS   |',chr(10));
Datalog('| D17|VDDTXBIAS |I|VDDTXBIAS     |  |          ',
        '|          |  | |B|Y|     |LVDS   |',chr(10));
Datalog('| G31|VBIASLVDSA|I|VBIASLVDSOA   |  |          ',
        '|          |  | |B|Y|     |LVDS   |',chr(10));
Datalog('| H28|VBIASLVDSO|I|VBIASLVDSOB   |  |          ',
        '|          |  | |B|Y|     |LVDS   |',chr(10));
Datalog('+----+----------+-+--------------+--+----------',
        '+----------+--+-+-+-+-----+-------+',chr(10));
Datalog('bin_name=Good;soft_bin=1;',
'soft_bin_type=P;bin_enum=0',chr(10));
Datalog('bin_name=Open;soft_bin=2;',
'soft_bin_type=F;bin_enum=1',chr(10));
Datalog('bin_name=Short;soft_bin=3;',
'soft_bin_type=F;bin_enum=2',chr(10));
Datalog('bin_name=ICCQ_bin;soft_bin=4;',
'soft_bin_type=F;bin_enum=3',chr(10));
Datalog('bin_name=Slow_Functional;soft_bin=5;',
'soft_bin_type=F;bin_enum=4',chr(10));
Datalog('bin_name=Fast_Functional;soft_bin=6;',
'soft_bin_type=F;bin_enum=5',chr(10));
Datalog('bin_name=DC_Leakage;soft_bin=7;',
'soft_bin_type=F;bin_enum=6',chr(10));
Datalog('bin_name=AC_Prop;soft_bin=8;',
'soft_bin_type=F;bin_enum=7',chr(10));

        End;

      ResultRecord( PASS );

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end; (* LOG_PINS_AND_BINS *)


procedure CONTINUITY_TEST;
(*
************************************************************************
****            CONTINUITY TEST  (OPENS)                            ****
************************************************************************
*)
  var
    TEST_RESULT    : boolean;

  begin

    TestOpen( OPENS );

      Datalog('VCC=0.0V',chr(10));

      SetupSelect( OPEN_PINS_DC, FORMAT_1, TIMING_1 );

      SET_POWER( VNM1V, 750mA,
                 VNM3V, 750mA,
                 VNM1Va, 750mA,
                 VNM1Vb, 750mA,
                 500uS );



      Sequence_down( 0.0V, 750mA,
                     0.0V, 750mA,
                     0.0V, 750mA,
                     0.0V, 750mA,
                     500uS );

      SetupSelect( OPEN_ODD_DC, CONTY_FORMAT, CONTY_AC );
      wait( 10mS );

      TEST_RESULT := PMUConvertPF;

      SetupSelect( OPEN_EVEN_DC, CONTY_FORMAT, CONTY_AC );
      wait( 10mS );

      if (PMUConvertPF = FAIL) then
        TEST_RESULT := FAIL;

      ResultRecord( TEST_RESULT );

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end;  (* CONTINUITY_TEST *)


procedure SHORTS_TEST;
(*
************************************************************************
****            SHORTS TEST                                         ****
************************************************************************
*)
  var
    TEST_RESULT    : boolean;

  begin

    TestOpen( SHORTS );

      SET_POWER( VNM1V, 750mA,
                 VNM3V, 750mA,
                 VNM1Va, 750mA,
                 VNM1Vb, 750mA,
                 500uS );



      Sequence_down( 0.0V, 750mA,
                     0.0V, 750mA,
                     0.0V, 750mA,
                     0.0V, 750mA,
                     500uS );

      Datalog('VCC=0.0V',chr(10));

      SetupSelect( SHORT_ODD_DC, CONTY_FORMAT, CONTY_AC );
      wait( 10mS );

      TEST_RESULT := PMUConvertPF;

      SetupSelect( SHORT_EVEN_DC, CONTY_FORMAT, CONTY_AC );
      wait( 10mS );

      if (PMUConvertPF = FAIL) then
        TEST_RESULT := FAIL;

      ResultRecord( TEST_RESULT );

      Power_down;

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end;  (* SHORTS_TEST *)


procedure DIODE_TEST;
(*
************************************************************************
****                        DIODE TEST                              ****
************************************************************************
*)
  var
    TEST_RESULT    : boolean;

  begin

    if ( V_DatalogEnabled ) then
      begin
        DatalogResetPinList( ALL_PINS_PLUS );
        DatalogSetPinList( ALL_PINS);  (* Start with all signal pins on. *)
      end;

    if Datalog_In_Production then
     begin
         CONTINUITY_TEST;
         if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           begin
            SHORTS_TEST;
           end;
     end
    else
    begin

    TestOpen( DIODE );

(*
************************************************************************
**  Test Flow for Diode Procedure:                                    **
**                                                                    **
**  With Datalogger ON:                                               **
**                                                                    **
**      Call CONTINUITY & SHORTS procedures. When complete, exit DIODE**
**         procedure.                                                 **
**                                                                    **
**  With Datalogger OFF:                                              **
**                                                                    **
**      If DIODE procedure passes, then Bin 02 & Bin 03 are logged as **
**         passing.                                                   **
**                                                                    **
**      If DIODE procedure fails, then CONTINUITY is called and Bin 02**
**         is logged appropriately. If Bin 02 passes, then SHORTS is  **
**         called and Bin 03 is logged appropriately.  If Bin 03      **
**         passes, DIODE completes execution and continues on with the**
**         next procedure in the Test Sequence.                       **
**                                                                    **
************************************************************************
*)

      SetupSelect( OPEN_PINS_DC, FORMAT_1, TIMING_1 );

      SET_POWER( VNM1V, 750mA,
                 VNM3V, 750mA,
                 VNM1Va, 750mA,
                 VNM1Vb, 750mA,
                 500uS );
      Sequence_down( 0.0V, 750mA,
                     0.0V, 750mA,
                     0.0V, 750mA,
                     0.0V, 750mA,
                     500uS );

      SetupSelect( DIODE_ODD_DC, CONTY_FORMAT, CONTY_AC );
      wait( 10mS );

      TEST_RESULT := PMUConvertPF;

      SetupSelect( DIODE_EVEN_DC, CONTY_FORMAT, CONTY_AC );
      wait( 10mS );

      if (PMUConvertPF = FAIL) or (TEST_RESULT = FAIL) then
        begin
          TestClose;  {Close DIODE_TEST}
          CONTINUITY_TEST;
          if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
            begin
             SHORTS_TEST;
            end;
        end
      else  {DIODE Procedure passes}
        begin
          TestClose;  {Close DIODE_TEST}
          {Bin02 (CONTINUITY) set to PASS}
          TestOpen( OPENS );
            ResultRecord( PASS );
{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
          TestClose;
          {Bin03 (SHORTS) set to PASS}
          TestOpen( SHORTS );
            ResultRecord( PASS );
{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
          TestClose;
        end;

    end;

    (* Test Pin2Pin Leakage at Final Test Only *)
    if (((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) and
        ((Test_Limit = FT_ROOM) or (Test_Limit = FT_HOT))) then
      begin
        TestOpen( PIN2PIN );

          SetupSelect( OPEN_PINS_DC, FORMAT_1, TIMING_1 );

          SET_POWER( VNM1V, 750mA,
                     VNM3V, 750mA,
                     VNM1Va, 750mA,
                     VNM1Vb, 750mA,
                     500uS );



          Sequence_down( 0.0V, 750mA,
                         0.0V, 750mA,
                         0.0V, 750mA,
                         0.0V, 750mA,
                         500uS );

   (* Connect PPPMUs to pins in odd rows forcing -0.1V
      Connect PPPMUs to pins in even rows forcing +0.1V *)
          SetupSelect( PIN2PIN_ROWS_DC, CONTY_FORMAT, CONTY_AC );
          wait( 10mS );

          TEST_RESULT := PMUConvertPF;

   (* Connect PPPMUs to pins in odd columns forcing -0.1V
      Connect PPPMUs to pins in even columns forcing +0.1V *)
          SetupSelect( PIN2PIN_COLUMNS_DC, CONTY_FORMAT, CONTY_AC );
          wait( 10mS );

          if( PMUConvertPF = FAIL) then
            TEST_RESULT := FAIL;

          ResultRecord( TEST_RESULT );
{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;
      end;

  end;  (* DIODE_TEST *)




procedure GOI_TEST;
(*
*********************************************************************
****            3.1V GOI STRESS TEST FOR 500MS    ****
*********************************************************************
*)
  var
    TEST_RESULT    : boolean;
    STATUS, I      : integer;

  begin

    TestOpen( GOI_STRESS );

    if (Test_Limit = FT_ROOM) or (Test_Limit = PROBE) then {rev04c}
    begin

      Datalog('VCC=3.1V',chr(10));


      (* TURN ON SUPPLIES TO 90% OF PROGRAMMED VALUE *)
      SET_POWER( VGOI1V*0.9, 2A,
                 VGOI3V*0.9, 2A,
                 VGOI1Va*0.9, 2A,
                 VGOI1Vb*0.9, 2A,
                 2mS );

      (* TURN ON SUPPLIES TO PROGRAMMED VALUE *)
      SET_POWER( VGOI1V, 2A,
                 VGOI3V, 2A,
                 VGOI1Va, 2A,
                 VGOI1Vb, 2A,
                 2mS );

      Enable( s_IGNORE_FUNC_FAIL );

      SetupSelect( GOI_DC, FORMAT_10, GOI_AC );
      wait( 2mS );

      (* Period = 7.921US     Pattern cycles = 63118  *)
      TEST_RESULT := PatternExecute( STATUS, F741576B_55917324 );

      (* TURN SUPPLIES DOWN TO 10% OF PROGRAMMED VALUE *)
      SET_POWER( VGOI1V*0.1, 2A,
                 VGOI3V*0.1, 2A,
                 VGOI1Va*0.1, 2A,
                 VGOI1Vb*0.1, 2A,
                 2mS );

      Power_down;

    end;

    ResultRecord( PASS );

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end;  (* GOI_TEST *)




function READ_ICCQ : treal;
(*
************************************************************************
****            MEASURE ICCQ AT ONE PM STOP                         ****
************************************************************************
*)

  begin  (* READ_ICCQ *)

    IccqPMResult := PASS;



    SupplySetComp( PS_VDD, 10uF ); {rev04f was 1uF }
    SupplySetLimit( PS_VDD, VTMX1V, NEW_ICCQ_RANGE,{rev10b}
                    NEW_ICCQ_MAX, ICCQ_MIN );{rev10b}

    SupplySetComp( PS_VDDG, 10uF ); {rev04f was 1uF }
    SupplySetLimit( PS_VDDG, VTMX1V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );

    SupplySetComp( PS_VDDSHV, 10uF ); {rev04f was 1uF }
    SupplySetLimit( PS_VDDSHV, VTMX3V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );

    SupplySetComp( PS_VDD2, 10uF ); {rev04f was 1uF }
    SupplySetLimit( PS_VDD2, VTMX1V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );

    wait( 200mS ); { rev04f Was 10mS}

{reviccq}
    if SupplyReadLimit( PS_VDD2, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TW_VAR_String := concat(TW_TMP_String,'VDD2');
    TWPDLDatalogRealVariable(TW_VAR_String, Amps, Single(ICCQ_value),
                                      TWMinimumData); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}

{reviccq}

    if SupplyReadLimit( PS_VDD, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TW_VAR_String := concat(TW_TMP_String,'VDD');
    TWPDLDatalogRealVariable(TW_VAR_String, Amps, Single(ICCQ_value),
                                      TWMinimumData); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}

    ICCQ_READ := ICCQ_value;  (* return VCC reading *)
{rev10b}if ICCQ_READ>ICCQ_MAX then
{rev10b}  OLD_ICCQ_RESULT := FALSE; {fail old ICCQ test}
{rev10b}if ICCQ_READ<ICCQ_MIN_READ then
{rev10b}  ICCQ_MIN_READ := ICCQ_READ;
{rev10b}if ICCQ_READ>ICCQ_MAX_READ then
{rev10b}  ICCQ_MAX_READ := ICCQ_READ;
{rev10b}if (ICCQ_MAX_READ-ICCQ_MIN_READ)>DELTA_ICCQ_MAX then
{rev10b}  DELTA_ICCQ_RESULT := FALSE;

    if SupplyReadLimit( PS_VDDG, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TW_VAR_String := concat(TW_TMP_String,'VDDG');
    TWPDLDatalogRealVariable(TW_VAR_String, Amps, Single(ICCQ_value),
                                      TWMinimumData); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}


    if SupplyReadLimit( PS_VDDSHV, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TW_VAR_String := concat(TW_TMP_String,'VDDSHV');
    TWPDLDatalogRealVariable(TW_VAR_String, Amps, Single(ICCQ_value),
                                      TWMinimumData); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}

    if SupplyReadLimit( PS_VDD2, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TW_VAR_String := concat(TW_TMP_String,'VDD2');
    TWPDLDatalogRealVariable(TW_VAR_String, Amps, Single(ICCQ_value),
                                      TWMinimumData); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}


      SET_POWER( VTMX1V, 750mA,
                 VTMX3V, 750mA,
                 VMX1Va, 750mA,
                 VMX1Vb, 750mA,
                 2mS );

    READ_ICCQ := ICCQ_READ;

  end;   (* READ_ICCQ *)


procedure ICCQ_TEST;
(*
************************************************************************
****            ICCQ TEST                                           ****
****                                                                ****
**** For GS30 Autogen assumes all pull-up cells will be disabled ****
**** during ICCQ measurements. All inputs & I/O's in input state    ****
**** will be driven.                                                ****
****                                                                ****
************************************************************************
*)
  var
    RESULT         : boolean;
    STATUS         : integer;



  begin  (* ICCQ_TEST *)

    TestOpen( ICCQ );

      Datalog('VCC=',VTMX1V,chr(10));

{rev06b}
      SET_POWER1( VTMX1V, 750mA,
                 VTMX3V, 750mA,
                 VMX1Va, 750mA,
                 VMX1Vb, 750mA,
                 2mS );

{rev_ICCQ - begin add}
{rev_ICCQ} ICCQ_TEST_RESULT := PASS;
          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );
          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ',
                  '''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );
          if(RESULT = FAIL) then begin {rev_ICCQ TEST RESULT BEGIN}
              ICCQ_TEST_RESULT := FAIL; {rev_ICCQ FAIL RESULT}
          end;                         {rev_ICCQ TEST RESULT END}
          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargminICCQ_TEST32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargminICCQ_TEST32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargminICCQ_TEST32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargminICCQ_TEST32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnomICCQ_TEST32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnomICCQ_TEST32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnomICCQ_TEST32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnomICCQ_TEST32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmaxICCQ_TEST32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmaxICCQ_TEST32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmaxICCQ_TEST32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmaxICCQ_TEST32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );
          (* LU *)
          Datalog('comment=''TDL NAME: LU',
                  '''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917334 );
          if(RESULT = FAIL) then begin {rev_ICCQ TEST RESULT BEGIN}
              ICCQ_TEST_RESULT := FAIL; {rev_ICCQ FAIL RESULT}
          end;                         {rev_ICCQ TEST RESULT END}
          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargminICCQ_TEST33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargminICCQ_TEST33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargminICCQ_TEST33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargminICCQ_TEST33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnomICCQ_TEST33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnomICCQ_TEST33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnomICCQ_TEST33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnomICCQ_TEST33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmaxICCQ_TEST33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmaxICCQ_TEST33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmaxICCQ_TEST33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmaxICCQ_TEST33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

{rev_ICCQ - end}
      Enable( s_IGNORE_FUNC_FAIL, s_PMExit );
      wait( 2mS );

{rev_ICCQ
      ICCQ_TEST_RESULT := PASS;
rev_ICCQ}


      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ10_MIN;
          ICCQ_MAX := ICCQ10_MAX;
          ICCQ_RANGE := ICCQ10_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 1 );  (* PM 10 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 10',
                  '  VECTOR: 44''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM10 );
          DCSetOpen( ICCQ_OPEN_PM10 );
         DCSetForce( VTMX3V, ICCQ_ZPINS_PM10 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

           DCSetForce( 3.6V, THSI_INA ); 
           DCSetForce( 0.0V, THSI_SEL00 ); 
           DCSetForce( 3.6V, THSI_SEL10 ); 
           DCSetForce( 0.0V, THSI_SEL01 ); 
           DCSetForce( 3.6V, THSI_SEL11 ); 
           DCSetForce( 3.6V, THSI_SEL_E ); 
           DCSetForce( 3.6V, THSI_SELN1 ); 
      {     DCSetForce( 3.6V, IDDQN ); }


          TW_TMP_String := 'IDDQ_PM10_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 1, ICCQ_OPEN_PM10,
                      ICCQ_ZPINS_PM10, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ11_MIN;
          ICCQ_MAX := ICCQ11_MAX;
          ICCQ_RANGE := ICCQ11_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 2 );  (* PM 11 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 11',
                  '  VECTOR: 47''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM11 );
          DCSetOpen( ICCQ_OPEN_PM11 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM11 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 


           DCSetForce( 3.6V, THSI_INA ); 
           DCSetForce( 0.0V, THSI_SEL00 ); 
           DCSetForce( 3.6V, THSI_SEL10 ); 
           DCSetForce( 0.0V, THSI_SEL01 ); 
           DCSetForce( 3.6V, THSI_SEL11 ); 
           DCSetForce( 3.6V, THSI_SEL_E ); 
           DCSetForce( 3.6V, THSI_SELN1 ); 

          TW_TMP_String := 'IDDQ_PM11_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 2, ICCQ_OPEN_PM11,
                      ICCQ_ZPINS_PM11, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ12_MIN;
          ICCQ_MAX := ICCQ12_MAX;
          ICCQ_RANGE := ICCQ12_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 3 );  (* PM 12 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 12',
                  '  VECTOR: 50''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM12 );
          DCSetOpen( ICCQ_OPEN_PM12 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM12 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 


          TW_TMP_String := 'IDDQ_PM12_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 3, ICCQ_OPEN_PM12,
                      ICCQ_ZPINS_PM12, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ13_MIN;
          ICCQ_MAX := ICCQ13_MAX;
          ICCQ_RANGE := ICCQ13_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 4 );  (* PM 13 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 13',
                  '  VECTOR: 53''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM13 );
          DCSetOpen( ICCQ_OPEN_PM13 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM13 );
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM13_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 4, ICCQ_OPEN_PM13,
                      ICCQ_ZPINS_PM13, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ14_MIN;
          ICCQ_MAX := ICCQ14_MAX;
          ICCQ_RANGE := ICCQ14_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 5 );  (* PM 14 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 14',
                  '  VECTOR: 56''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM14 );
          DCSetOpen( ICCQ_OPEN_PM14 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM14 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM14_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 5, ICCQ_OPEN_PM14,
                      ICCQ_ZPINS_PM14, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ15_MIN;
          ICCQ_MAX := ICCQ15_MAX;
          ICCQ_RANGE := ICCQ15_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 6 );  (* PM 15 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 15',
                  '  VECTOR: 59''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM15 );
          DCSetOpen( ICCQ_OPEN_PM15 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM15 );  
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM15_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 6, ICCQ_OPEN_PM15,
                      ICCQ_ZPINS_PM15, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ16_MIN;
          ICCQ_MAX := ICCQ16_MAX;
          ICCQ_RANGE := ICCQ16_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 7 );  (* PM 16 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 16',
                  '  VECTOR: 62''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM16 );
          DCSetOpen( ICCQ_OPEN_PM16 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM16 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM16_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 7, ICCQ_OPEN_PM16,
                      ICCQ_ZPINS_PM16, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ17_MIN;
          ICCQ_MAX := ICCQ17_MAX;
          ICCQ_RANGE := ICCQ17_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 8 );  (* PM 17 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 17',
                  '  VECTOR: 65''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM17 );
          DCSetOpen( ICCQ_OPEN_PM17 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM17 );  
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM17_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 8, ICCQ_OPEN_PM17,
                      ICCQ_ZPINS_PM17, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ18_MIN;
          ICCQ_MAX := ICCQ18_MAX;
          ICCQ_RANGE := ICCQ18_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 9 );  (* PM 18 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 18',
                  '  VECTOR: 68''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM18 );
          DCSetOpen( ICCQ_OPEN_PM18 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM18 );  
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM18_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 9, ICCQ_OPEN_PM18,
                      ICCQ_ZPINS_PM18, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ19_MIN;
          ICCQ_MAX := ICCQ19_MAX;
          ICCQ_RANGE := ICCQ19_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 10 );  (* PM 19 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 19',
                  '  VECTOR: 71''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM19 );
          DCSetOpen( ICCQ_OPEN_PM19 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM19 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM19_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 10, ICCQ_OPEN_PM19,
                      ICCQ_ZPINS_PM19, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ20_MIN;
          ICCQ_MAX := ICCQ20_MAX;
          ICCQ_RANGE := ICCQ20_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 11 );  (* PM 20 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 20',
                  '  VECTOR: 74''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM20 );
          DCSetOpen( ICCQ_OPEN_PM20 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM20 );  
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 


          TW_TMP_String := 'IDDQ_PM20_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 11, ICCQ_OPEN_PM20,
                      ICCQ_ZPINS_PM20, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ21_MIN;
          ICCQ_MAX := ICCQ21_MAX;
          ICCQ_RANGE := ICCQ21_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 12 );  (* PM 21 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 21',
                  '  VECTOR: 77''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM21 );
          DCSetOpen( ICCQ_OPEN_PM21 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM21 );
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM21_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 12, ICCQ_OPEN_PM21,
                      ICCQ_ZPINS_PM21, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ22_MIN;
          ICCQ_MAX := ICCQ22_MAX;
          ICCQ_RANGE := ICCQ22_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 1 );  (* PM 22 *)

          (* LU *)
          Datalog('comment=''TDL NAME: LU  PM: 22',
                  '  VECTOR: 4893''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917334 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM22 );
          DCSetOpen( ICCQ_OPEN_PM22 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM22 );  
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM22_'; {revtw}
          discard( READ_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917334,
                     VMAXI, VMINI, VSTEPI, 1, ICCQ_OPEN_PM22,
                      ICCQ_ZPINS_PM22, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      ResultRecord( ICCQ_TEST_RESULT );

      Power_down;

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end;  (* ICCQ_TEST *)
{rev_ICCQ - begin}
function READ_HOT_ICCQ : treal;
(*
************************************************************************
****            MEASURE ICCQ AT ONE PM STOP                         ****
************************************************************************
*)

  begin  (* READ_HOT_ICCQ *)

    IccqPMResult := PASS;



    SupplySetComp( PS_VDD, 10uF ); {rev04f was 1uF }
    SupplySetLimit( PS_VDD, VTHOT1V, NEW_ICCQ_RANGE,{rev10b}
                    NEW_ICCQ_MAX, ICCQ_MIN );{rev10b}

    SupplySetComp( PS_VDDG, 10uF ); {rev04f was 1uF }
    SupplySetLimit( PS_VDDG, VTHOT1V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );

    SupplySetComp( PS_VDDSHV, 10uF ); {rev04f was 1uF }
    SupplySetLimit( PS_VDDSHV, VTMX3V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );

    SupplySetComp( PS_VDD2, 10uF ); {rev04f was 1uF }
    SupplySetLimit( PS_VDD2, VTHOT1V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );

    wait( 200mS ); { rev04f Was 10mS}

    if SupplyReadLimit( PS_VDD, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TW_VAR_String := concat(TW_TMP_String,'VDD');
    TWPDLDatalogRealVariable(TW_VAR_String, Amps, Single(ICCQ_value),
                                      TWMinimumData); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}

    ICCQ_READ := ICCQ_value;  (* return VCC reading *)
{rev10b} Datalog('comment=''ICCQ_READ = ',ICCQ_READ,'''',chr(10));
{rev10b}if ICCQ_READ>ICCQ_MAX then
{rev10b}  OLD_ICCQ_RESULT := FALSE; {fail old ICCQ test}
{rev10b}if ICCQ_READ<ICCQ_MIN_READ then
{rev10b}  ICCQ_MIN_READ := ICCQ_READ;
{rev10b}if ICCQ_READ>ICCQ_MAX_READ then
{rev10b}  ICCQ_MAX_READ := ICCQ_READ;
{rev10b}if (ICCQ_MAX_READ-ICCQ_MIN_READ)>DELTA_ICCQ_MAX then
{rev10b}  DELTA_ICCQ_RESULT := FALSE;

    if SupplyReadLimit( PS_VDDG, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TW_VAR_String := concat(TW_TMP_String,'VDDG');
    TWPDLDatalogRealVariable(TW_VAR_String, Amps, Single(ICCQ_value),
                                      TWMinimumData); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}


    if SupplyReadLimit( PS_VDDSHV, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TW_VAR_String := concat(TW_TMP_String,'VDDSHV');
    TWPDLDatalogRealVariable(TW_VAR_String, Amps, Single(ICCQ_value),
                                      TWMinimumData); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}

    if SupplyReadLimit( PS_VDD2, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;
#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TW_VAR_String := concat(TW_TMP_String,'VDD2');
    TWPDLDatalogRealVariable(TW_VAR_String, Amps, Single(ICCQ_value),
                                      TWMinimumData); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}


      SET_POWER( VTHOT1V, 750mA,
                 VTMX3V, 750mA,
      {rev03f    VMX1Va, 750mA,
                 VMX1Vb, 750mA,}
                 VTHOT1V, 750mA,
                 VTHOT1V, 750mA,
                 2mS );

    READ_HOT_ICCQ := ICCQ_READ;

  end;   (* READ_HOT_ICCQ *)


procedure ICCQ_HOT_TEST;
(*
************************************************************************
****            ICCQ TEST                                           ****
****                                                                ****
**** For GS30 Autogen assumes all pull-up cells will be disabled ****
**** during ICCQ measurements. All inputs & I/O's in input state    ****
**** will be driven.                                                ****
****                                                                ****
************************************************************************
*)
  var
    RESULT         : boolean;
    STATUS         : integer;



  begin  (* ICCQ_HOT_TEST *)

    TestOpen( ICCQ );

      Datalog('VCC=',VTHOT1V,chr(10));

{rev06b}
      SET_POWER1( VTHOT1V, 750mA,
                 VTMX3V, 750mA,
      {rev03f    VMX1Va, 750mA,
                 VMX1Vb, 750mA,}
                 VTHOT1V, 750mA,
                 VTHOT1V, 750mA,
                 2mS );

{ - begin add}
{} ICCQ_TEST_RESULT := PASS;
          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );
          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ',
                  '''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );
          if(RESULT = FAIL) then begin { TEST RESULT BEGIN}
              ICCQ_TEST_RESULT := FAIL; { FAIL RESULT}
          end;                         { TEST RESULT END}
          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargminICCQ_HOT_TEST32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargminICCQ_HOT_TEST32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargminICCQ_HOT_TEST32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargminICCQ_HOT_TEST32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnomICCQ_HOT_TEST32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnomICCQ_HOT_TEST32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnomICCQ_HOT_TEST32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnomICCQ_HOT_TEST32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmaxICCQ_HOT_TEST32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmaxICCQ_HOT_TEST32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmaxICCQ_HOT_TEST32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmaxICCQ_HOT_TEST32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );
          (* LU *)
          Datalog('comment=''TDL NAME: LU',
                  '''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917334 );
          if(RESULT = FAIL) then begin { TEST RESULT BEGIN}
              ICCQ_TEST_RESULT := FAIL; { FAIL RESULT}
          end;                         { TEST RESULT END}
          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargminICCQ_HOT_TEST33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargminICCQ_HOT_TEST33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargminICCQ_HOT_TEST33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargminICCQ_HOT_TEST33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnomICCQ_HOT_TEST33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnomICCQ_HOT_TEST33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnomICCQ_HOT_TEST33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnomICCQ_HOT_TEST33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmaxICCQ_HOT_TEST33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmaxICCQ_HOT_TEST33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmaxICCQ_HOT_TEST33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmaxICCQ_HOT_TEST33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

{ - end}
      Enable( s_IGNORE_FUNC_FAIL, s_PMExit );
      wait( 2mS );

{
      ICCQ_TEST_RESULT := PASS;
}


      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ10_MIN;
          ICCQ_MAX := ICCQ10_MAX;
          ICCQ_RANGE := ICCQ10_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 1 );  (* PM 10 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 10',
                  '  VECTOR: 44''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM10 );
          DCSetOpen( ICCQ_OPEN_PM10 );
         DCSetForce( VTMX3V, ICCQ_ZPINS_PM10 );  
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM10_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 1, ICCQ_OPEN_PM10,
                      ICCQ_ZPINS_PM10, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ11_MIN;
          ICCQ_MAX := ICCQ11_MAX;
          ICCQ_RANGE := ICCQ11_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 2 );  (* PM 11 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 11',
                  '  VECTOR: 47''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM11 );
          DCSetOpen( ICCQ_OPEN_PM11 );
         DCSetForce( VTMX3V, ICCQ_ZPINS_PM11 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM11_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 2, ICCQ_OPEN_PM11,
                      ICCQ_ZPINS_PM11, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ12_MIN;
          ICCQ_MAX := ICCQ12_MAX;
          ICCQ_RANGE := ICCQ12_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 3 );  (* PM 12 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 12',
                  '  VECTOR: 50''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM12 );
          DCSetOpen( ICCQ_OPEN_PM12 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM12 );
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM12_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 3, ICCQ_OPEN_PM12,
                      ICCQ_ZPINS_PM12, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ13_MIN;
          ICCQ_MAX := ICCQ13_MAX;
          ICCQ_RANGE := ICCQ13_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 4 );  (* PM 13 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 13',
                  '  VECTOR: 53''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM13 );
          DCSetOpen( ICCQ_OPEN_PM13 );
         DCSetForce( VTMX3V, ICCQ_ZPINS_PM13 );  
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM13_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 4, ICCQ_OPEN_PM13,
                      ICCQ_ZPINS_PM13, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ14_MIN;
          ICCQ_MAX := ICCQ14_MAX;
          ICCQ_RANGE := ICCQ14_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 5 );  (* PM 14 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 14',
                  '  VECTOR: 56''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM14 );
          DCSetOpen( ICCQ_OPEN_PM14 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM14 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM14_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 5, ICCQ_OPEN_PM14,
                      ICCQ_ZPINS_PM14, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ15_MIN;
          ICCQ_MAX := ICCQ15_MAX;
          ICCQ_RANGE := ICCQ15_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 6 );  (* PM 15 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 15',
                  '  VECTOR: 59''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM15 );
          DCSetOpen( ICCQ_OPEN_PM15 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM15 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM15_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 6, ICCQ_OPEN_PM15,
                      ICCQ_ZPINS_PM15, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ16_MIN;
          ICCQ_MAX := ICCQ16_MAX;
          ICCQ_RANGE := ICCQ16_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 7 );  (* PM 16 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 16',
                  '  VECTOR: 62''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM16 );
          DCSetOpen( ICCQ_OPEN_PM16 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM16 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM16_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 7, ICCQ_OPEN_PM16,
                      ICCQ_ZPINS_PM16, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ17_MIN;
          ICCQ_MAX := ICCQ17_MAX;
          ICCQ_RANGE := ICCQ17_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 8 );  (* PM 17 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 17',
                  '  VECTOR: 65''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM17 );
          DCSetOpen( ICCQ_OPEN_PM17 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM17 );
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 


          TW_TMP_String := 'IDDQ_PM17_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 8, ICCQ_OPEN_PM17,
                      ICCQ_ZPINS_PM17, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ18_MIN;
          ICCQ_MAX := ICCQ18_MAX;
          ICCQ_RANGE := ICCQ18_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 9 );  (* PM 18 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 18',
                  '  VECTOR: 68''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM18 );
          DCSetOpen( ICCQ_OPEN_PM18 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM18 );  
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM18_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 9, ICCQ_OPEN_PM18,
                      ICCQ_ZPINS_PM18, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ19_MIN;
          ICCQ_MAX := ICCQ19_MAX;
          ICCQ_RANGE := ICCQ19_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 10 );  (* PM 19 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 19',
                  '  VECTOR: 71''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM19 );
          DCSetOpen( ICCQ_OPEN_PM19 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM19 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM19_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 10, ICCQ_OPEN_PM19,
                      ICCQ_ZPINS_PM19, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ20_MIN;
          ICCQ_MAX := ICCQ20_MAX;
          ICCQ_RANGE := ICCQ20_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 11 );  (* PM 20 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 20',
                  '  VECTOR: 74''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM20 );
          DCSetOpen( ICCQ_OPEN_PM20 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM20 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM20_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 11, ICCQ_OPEN_PM20,
                      ICCQ_ZPINS_PM20, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ21_MIN;
          ICCQ_MAX := ICCQ21_MAX;
          ICCQ_RANGE := ICCQ21_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 12 );  (* PM 21 *)

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ  PM: 21',
                  '  VECTOR: 77''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM21 );
          DCSetOpen( ICCQ_OPEN_PM21 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM21 );
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM21_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 12, ICCQ_OPEN_PM21,
                      ICCQ_ZPINS_PM21, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ22_MIN;
          ICCQ_MAX := ICCQ22_MAX;
          ICCQ_RANGE := ICCQ22_RANGE;

          SetupSelect( HOT_ICCQ_DC, FORMAT_10, TIMING_10 );

          PMExSetDelay( s_PFLAGS, 1 );  (* PM 22 *)

          (* LU *)
          Datalog('comment=''TDL NAME: LU  PM: 22',
                  '  VECTOR: 4893''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917334 );

          SetupSelect( HOT_ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM22 );
          DCSetOpen( ICCQ_OPEN_PM22 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM22 ); 
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          TW_TMP_String := 'IDDQ_PM22_'; {revtw}
          discard( READ_HOT_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917334,
                     VMAXI, VMINI, VSTEPI, 1, ICCQ_OPEN_PM22,
                      ICCQ_ZPINS_PM22, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      ResultRecord( ICCQ_TEST_RESULT );

      Power_down;

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end;  (* ICCQ_HOT_TEST *)

function READ_DATA_ICCQ : treal;
(*
************************************************************************
****            MEASURE ICCQ AT ONE PM STOP                         ****
************************************************************************
*)

  begin  (* READ_DATA_ICCQ *)  Datalog('comment=''',ICCQ_COMMENT,'''',chr(10));
  if(ICCQ_COMMENT = 'ICCQ-Shmoo') then
    write('|');

  ICCQ_MIN := -0.05*ICCQ_RANGE;

    IccqPMResult := PASS;



    SupplySetComp( PS_VDD, 1uF );
    SupplySetLimit( PS_VDD, VTTMP1V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );

    SupplySetComp( PS_VDDG, 1uF );
    SupplySetLimit( PS_VDDG, VTTMP1V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );

    SupplySetComp( PS_VDDSHV, 1uF );
    SupplySetLimit( PS_VDDSHV, VTMX3V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );

    ICCQ_RANGE := 240uA;
    SupplySetComp( PS_VDD2, 1uF );
    SupplySetLimit( PS_VDD2, VTTMP1V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );

    wait( 10mS );

    if SupplyReadLimit( PS_VDD, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        LOW_ICCQ_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;
    LOW_ICCQ_RESULT := PASS; {before 2nd test}
    IF ( ICCQ_value > ICCQ_RANGE * 0.98 ) then
    begin
      ICCQ_RANGE := ICCQ_RANGE * 4;
      ICCQ_MIN := -0.05*ICCQ_RANGE;
      SupplySetLimit( PS_VDD2, VTTMP1V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );
      wait( 10ms );
      if SupplyReadLimit( PS_VDD, s_CURRENT, ICCQ_value ) = FAIL then
        LOW_ICCQ_RESULT := FAIL;
    end
    ELSE IF(ICCQ_value < 15uA * 0.98) then
    begin
      ICCQ_RANGE := 15uA;
      ICCQ_MIN := -0.05*ICCQ_RANGE;
      SupplySetLimit( PS_VDD2, VTTMP1V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );
      wait( 10ms );
      if SupplyReadLimit( PS_VDD, s_CURRENT, ICCQ_value ) = FAIL then
        LOW_ICCQ_RESULT := FAIL;
    end
    ELSE IF(ICCQ_value < 60uA * 0.98) then
    begin
      ICCQ_RANGE := 60uA;
      ICCQ_MIN := -0.05*ICCQ_RANGE;
      SupplySetLimit( PS_VDD2, VTTMP1V, ICCQ_RANGE,
                    ICCQ_MAX, ICCQ_MIN );
      wait( 10ms );
      if SupplyReadLimit( PS_VDD, s_CURRENT, ICCQ_value ) = FAIL then
        LOW_ICCQ_RESULT := FAIL;
    end;
    SupplyGet( PS_VDD2 , LOW_ICCQ_V, LOW_ICCQ_I );
    Datalog('name=',LOW_ICCQ_NAME,'_PS_VDD2; value=',ICCQ_value,
            '; vcc=',LOW_ICCQ_V,'; min=',ICCQ_MIN,'; max=',ICCQ_MAX,
            '; Range= ',ICCQ_RANGE,chr(10),chr(10));
    if(LOW_ICCQ_RESULT = FAIL) then
      begin
        ICCQ_TEST_RESULT := FAIL;
        if(ICCQ_COMMENT = 'ICCQ-Shmoo') then
          write('X');
      end
    else
      begin
        if(ICCQ_COMMENT = 'ICCQ-Shmoo') then
          write('-');
      end;
    ICCQ_READ := ICCQ_value;  (* return VCC reading *)

    if SupplyReadLimit( PS_VDDG, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;

    if SupplyReadLimit( PS_VDDSHV, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;

    if SupplyReadLimit( PS_VDD2, s_CURRENT, ICCQ_value ) = FAIL then
      begin
        ICCQ_TEST_RESULT := FAIL;
        IccqPMResult := FAIL;
      end;


      SET_POWER( VTTMP1V, 750mA,
                 VTMX3V, 750mA,
                 VMX1Va, 750mA,
                 VMX1Vb, 750mA,
                 2mS );

    READ_DATA_ICCQ := ICCQ_READ;

  end;   (* READ_DATA_ICCQ *)


procedure ICCQ_DATA_TEST;
(*
************************************************************************
****            ICCQ TEST                                           ****
****                                                                ****
**** For GS30 Autogen assumes all pull-up cells will be disabled ****
**** during ICCQ measurements. All inputs & I/O's in input state    ****
**** will be driven.                                                ****
****                                                                ****
************************************************************************
*)
  var
    RESULT         : boolean;
    STATUS         : integer;



  begin  (* ICCQ_DATA_TEST *)

    TestOpen( ICCQ );
      Datalog('comment=''',ICCQ_COMMENT,'''',chr(10));
      Datalog('VCC=',VTTMP1V,chr(10));

{rev06b}
      SET_POWER1( VTTMP1V, 750mA,
                 VTMX3V, 750mA,
                 VMX1Va, 750mA,
                 VMX1Vb, 750mA,
                 2mS );

{ - begin add}
{} ICCQ_TEST_RESULT := PASS;
          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}


  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ',
                  '''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );
          if(ICCQ_COMMENT = 'ICCQ-Shmoo') then
             write('>');
          if(RESULT = FAIL) then begin { TEST RESULT BEGIN}
              ICCQ_TEST_RESULT := FAIL; { FAIL RESULT}
            if(ICCQ_COMMENT = 'ICCQ-Shmoo') then
               write('X');
          end else begin
            if(ICCQ_COMMENT = 'ICCQ-Shmoo') then
               write('-');
          end;                         { TEST RESULT END}
          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargminICCQ_DATA_TEST32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargminICCQ_DATA_TEST32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargminICCQ_DATA_TEST32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargminICCQ_DATA_TEST32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnomICCQ_DATA_TEST32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnomICCQ_DATA_TEST32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnomICCQ_DATA_TEST32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnomICCQ_DATA_TEST32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmaxICCQ_DATA_TEST32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmaxICCQ_DATA_TEST32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmaxICCQ_DATA_TEST32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmaxICCQ_DATA_TEST32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          (* LU *)
          Datalog('comment=''TDL NAME: LU',
                  '''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917334 );
          if(RESULT = FAIL) then begin { TEST RESULT BEGIN}
              ICCQ_TEST_RESULT := FAIL; { FAIL RESULT}
            if(ICCQ_COMMENT = 'ICCQ-Shmoo') then
               write('X');
          end else begin
            if(ICCQ_COMMENT = 'ICCQ-Shmoo') then
               write('-');
          end;                         { TEST RESULT END}
          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargminICCQ_DATA_TEST33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargminICCQ_DATA_TEST33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargminICCQ_DATA_TEST33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargminICCQ_DATA_TEST33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnomICCQ_DATA_TEST33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnomICCQ_DATA_TEST33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnomICCQ_DATA_TEST33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnomICCQ_DATA_TEST33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmaxICCQ_DATA_TEST33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmaxICCQ_DATA_TEST33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'ICCQ');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmaxICCQ_DATA_TEST33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmaxICCQ_DATA_TEST33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'ICCQ');
end; {margins}

{ - end}
      Enable( s_IGNORE_FUNC_FAIL, s_PMExit );
      wait( 2mS );

{
      ICCQ_TEST_RESULT := PASS;
}


      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ10_MIN;
          ICCQ_MAX := ICCQ10_MAX;
          ICCQ_RANGE := ICCQ10_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 1 );  (* PM 10 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_10';
          Datalog('comment=''TDL NAME: IDQ  PM: 10',
                  '  VECTOR: 44''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS ); }    
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM10 );
          DCSetOpen( ICCQ_OPEN_PM10 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM10 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 1, ICCQ_OPEN_PM10,
                      ICCQ_ZPINS_PM10, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ11_MIN;
          ICCQ_MAX := ICCQ11_MAX;
          ICCQ_RANGE := ICCQ11_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 2 );  (* PM 11 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_11';
          Datalog('comment=''TDL NAME: IDQ  PM: 11',
                  '  VECTOR: 47''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM11 );
          DCSetOpen( ICCQ_OPEN_PM11 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM11 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 2, ICCQ_OPEN_PM11,
                      ICCQ_ZPINS_PM11, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ12_MIN;
          ICCQ_MAX := ICCQ12_MAX;
          ICCQ_RANGE := ICCQ12_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 3 );  (* PM 12 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_12';
          Datalog('comment=''TDL NAME: IDQ  PM: 12',
                  '  VECTOR: 50''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM12 );
          DCSetOpen( ICCQ_OPEN_PM12 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM12 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 3, ICCQ_OPEN_PM12,
                      ICCQ_ZPINS_PM12, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ13_MIN;
          ICCQ_MAX := ICCQ13_MAX;
          ICCQ_RANGE := ICCQ13_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 4 );  (* PM 13 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_13';
          Datalog('comment=''TDL NAME: IDQ  PM: 13',
                  '  VECTOR: 53''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM13 );
          DCSetOpen( ICCQ_OPEN_PM13 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM13 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 4, ICCQ_OPEN_PM13,
                      ICCQ_ZPINS_PM13, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ14_MIN;
          ICCQ_MAX := ICCQ14_MAX;
          ICCQ_RANGE := ICCQ14_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

    {rev00e DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );     
  DCSetDyn( 1.073V, 0.0V,CP, 1.238V, 0.413V, 1.073V, -0mA, 0mA, CML1V_OUTS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 5 );  (* PM 14 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_14';
          Datalog('comment=''TDL NAME: IDQ  PM: 14',
                  '  VECTOR: 56''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM14 );
          DCSetOpen( ICCQ_OPEN_PM14 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM14 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 5, ICCQ_OPEN_PM14,
                      ICCQ_ZPINS_PM14, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ15_MIN;
          ICCQ_MAX := ICCQ15_MAX;
          ICCQ_RANGE := ICCQ15_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 6 );  (* PM 15 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_15';
          Datalog('comment=''TDL NAME: IDQ  PM: 15',
                  '  VECTOR: 59''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM15 );
          DCSetOpen( ICCQ_OPEN_PM15 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM15 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 6, ICCQ_OPEN_PM15,
                      ICCQ_ZPINS_PM15, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ16_MIN;
          ICCQ_MAX := ICCQ16_MAX;
          ICCQ_RANGE := ICCQ16_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 7 );  (* PM 16 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_16';
          Datalog('comment=''TDL NAME: IDQ  PM: 16',
                  '  VECTOR: 62''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM16 );
          DCSetOpen( ICCQ_OPEN_PM16 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM16 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 7, ICCQ_OPEN_PM16,
                      ICCQ_ZPINS_PM16, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ17_MIN;
          ICCQ_MAX := ICCQ17_MAX;
          ICCQ_RANGE := ICCQ17_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -0mA, 0mA, CML1V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
 DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 8 );  (* PM 17 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_17';
          Datalog('comment=''TDL NAME: IDQ  PM: 17',
                  '  VECTOR: 65''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM17 );
          DCSetOpen( ICCQ_OPEN_PM17 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM17 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 8, ICCQ_OPEN_PM17,
                      ICCQ_ZPINS_PM17, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ18_MIN;
          ICCQ_MAX := ICCQ18_MAX;
          ICCQ_RANGE := ICCQ18_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 9 );  (* PM 18 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_18';
          Datalog('comment=''TDL NAME: IDQ  PM: 18',
                  '  VECTOR: 68''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM18 );
          DCSetOpen( ICCQ_OPEN_PM18 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM18 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 9, ICCQ_OPEN_PM18,
                      ICCQ_ZPINS_PM18, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ19_MIN;
          ICCQ_MAX := ICCQ19_MAX;
          ICCQ_RANGE := ICCQ19_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 10 );  (* PM 19 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_19';
          Datalog('comment=''TDL NAME: IDQ  PM: 19',
                  '  VECTOR: 71''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM19 );
          DCSetOpen( ICCQ_OPEN_PM19 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM19 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 10, ICCQ_OPEN_PM19,
                      ICCQ_ZPINS_PM19, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ20_MIN;
          ICCQ_MAX := ICCQ20_MAX;
          ICCQ_RANGE := ICCQ20_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -0mA, 0mA, CML1V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 11 );  (* PM 20 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_20';
          Datalog('comment=''TDL NAME: IDQ  PM: 20',
                  '  VECTOR: 74''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM20 );
          DCSetOpen( ICCQ_OPEN_PM20 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM20 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 11, ICCQ_OPEN_PM20,
                      ICCQ_ZPINS_PM20, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ21_MIN;
          ICCQ_MAX := ICCQ21_MAX;
          ICCQ_RANGE := ICCQ21_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -0mA, 0mA, CML1V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 12 );  (* PM 21 *)

          (* IDQ *)
          LOW_ICCQ_NAME := 'IDQ_21';
          Datalog('comment=''TDL NAME: IDQ  PM: 21',
                  '  VECTOR: 77''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917324 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM21 );
          DCSetOpen( ICCQ_OPEN_PM21 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM21 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917324,
                     VMAXI, VMINI, VSTEPI, 12, ICCQ_OPEN_PM21,
                      ICCQ_ZPINS_PM21, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      if ((ICCQ_TEST_RESULT = PASS) or (Datalog_In_Production)) then
        begin

          (*  ICCQ MEASURE STATEMENT IN TDL *)
          ICCQ_MIN := ICCQ22_MIN;
          ICCQ_MAX := ICCQ22_MAX;
          ICCQ_RANGE := ICCQ22_RANGE;

          SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );

          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -0mA, 0mA, CML1V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, VTMX3V*0.65, -2.0mA,
              2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetDyn( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, VTTMP1V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSY 
);
  DCSetDyn( VTTMP1V, 0V,CP, VTTMP1V, VTTMP1V, VTTMP1V, -0mA, 0mA, LVDSa1V_OUTSYZ
 );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSA );
  DCSetLDOFF( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V,
              CML1V_INSAZ );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSY );
  DCSetDyn( VTMXC1V, VTMXC1V-0.4V,CP, VTMXC1V-0.1V, VTMXC1V-0.25V, VTMXC1V,
              -0mA, 0mA, CML1V_OUTSYZ );

          PMExSetDelay( s_PFLAGS, 1 );  (* PM 22 *)

          (* LU *)
          LOW_ICCQ_NAME := 'LU_22';
          Datalog('comment=''TDL NAME: LU  PM: 22',
                  '  VECTOR: 4893''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917334 );

          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_INS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_OUTS );
  DCSetLDOFF( VTMX3V, 0V,CP, VTMX3V*0.75, VTMX3V*0.25, CMOSa3V_IOS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, TESTINA1V_INS );
  DCSetLDOFF( VTTMP1V, 0.0V,CP, VTTMP1V, 0.488V, AOUT1V_OUTS );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSA );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_INSAZ );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSY );
  DCSetLDOFF( 2.0V, 0V,CP, VTTMP1V, VTTMP1V, LVDSa1V_OUTSYZ );
  DCSetOpen(CML1V_INSA);
  DCSetOpen(CML1V_INSAZ);
  DCSetOpen(CML1V_OUTS);
  DCSetOpen(CML1V_OUTSY);
  DCSetOpen(CML1V_OUTSYZ);

          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM22 );
          DCSetOpen( ICCQ_OPEN_PM22 );
          DCSetForce( VTMX3V, ICCQ_ZPINS_PM22 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          discard( READ_DATA_ICCQ );

          if iddqshmoo then {char}
            ShmooIddq('ICCQ_DC', F741576B_55917334,
                     VMAXI, VMINI, VSTEPI, 1, ICCQ_OPEN_PM22,
                      ICCQ_ZPINS_PM22, VDD, 10mS, ICCQ_RANGE,
                      false, 'iddqshmoo');


        end;

      ResultRecord( ICCQ_TEST_RESULT );

      Power_down;

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end;  (* ICCQ_DATA_TEST *)

{rev_ICCQ - end}


procedure VMIN_SHIFT_PRE_TEST; {revvmin}
(***********************************************************************)
(***                     VMin Shift Pre Test                         ***)
(***********************************************************************)
  var
    VMIN_TEST_RESULT     : boolean;
    VMIN_VALUE           : treal;
    VBOX_TEST_RESULT     : boolean;

function DO_VMIN_SEARCH (patt : pattern; idx : integer) : TReal;
(***********************************************************************)
(***                       Do VMin Search                            ***)
(***********************************************************************)

  var
    VMIN_PF_RESULT       : boolean;
    VMIN_READ            : treal;
    ProgV                : treal;
    STATUS               : integer;
    CurrRes              : treal;
    BinSign              : integer;

begin

   VMIN_PF_RESULT := FALSE;
   ProgV := VMinStartV[idx];

   while ( not(VMIN_PF_RESULT) AND (ProgV < (VMinStopV[idx] + 1mV))) do
   begin
      SET_POWER( ProgV, 2A,
                 VMN3V, 2A,
                 ProgV, 2A,
                 ProgV, 2A,
                 2mS );

      DCTableSet(ProgV, 'SLOW_MIN_DC'); {VMINSHIFT}
      VMIN_PF_RESULT := PatternExecute( STATUS, patt );
      datalog(patt,': Linear: ',ProgV, ' : ',VMIN_PF_RESULT, chr(10));
      if (not(VMIN_PF_RESULT)) then ProgV := ProgV + VMinLRes[idx];
   end;

   if (not(VMIN_PF_RESULT)) then
   begin
     {If VMIN_PF_RESULT is still FALSE here we must have reached
      VDD-100mV without a pass, in which case this is a VMin Lifetime
      fail}
      GVMinResult[idx] := FALSE;
   end;

  VMIN_READ := ProgV;

  if (GVMinResult[idx] AND (VMinBRes[idx] < VMinLRes[idx])) then
  begin
    CurrRes := VMinLRes[idx];
    BinSign := -1;

    while (CurrRes > VMinBRes[idx]) do
    begin
      CurrRes := CurrRes / 2;
      ProgV := ProgV + BinSign * CurrRes;
      SET_POWER( ProgV, 2A,
                 VMN3V, 2A,
                 ProgV, 2A,
                 ProgV, 2A,
                 2mS );


      DCTableSet(ProgV, 'SLOW_MIN_DC'); {VMINSHIFT}
      VMIN_PF_RESULT := PatternExecute( STATUS, patt );
      datalog(patt,': Binary: ',ProgV, ' : ',VMIN_PF_RESULT, chr(10));
      if (CurrRes > VMinBRes[idx]) then
      begin
        if (VMIN_PF_RESULT) then BinSign := -1
        else BinSign := 1;
      end
      else
      begin
        if (VMIN_PF_RESULT) then VMIN_READ := ProgV
        else VMIN_READ := ProgV + CurrRes;
        datalog(patt,': VMin Value: ',VMIN_READ, chr(10));
      end;
    end;

  end;
     

   DO_VMIN_SEARCH := VMIN_READ;

end; {DO_VMIN_SEARCH}

begin {VMIN_SHIFT_PRE_TEST}

    VBOX_TEST_RESULT := TRUE;
    GVBoxResult[1]      := TRUE;
    GVMinResult[1]      := TRUE;


    if ( (Test_Limit = HOT_CHUCK) or (Test_Limit = PROBE)) then
    begin

     VMIN_TEST_RESULT := TRUE;

     DatalogResetType(S_ALL);

     TestOpen (VMIN_PRE1_TEST);

(* First Pattern to Search *)
      SET_POWER( VMN1V, 2A,
                 VMN3V, 2A,
                 VMN1Va, 2A,
                 VMN1Vb, 2A,
                 2mS );


{VMINSHIFT Fill in setup information and pattern name}

     SetupSelect( SLOW_MIN_DC, FORMAT_1,
                  TIMING_1 );
     wait( 2mS );

     VMIN_VALUE := DO_VMIN_SEARCH( F741576B_55917314, 1 );

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
	TWPDLDatalogRealVariable('VMIN_55917314', Volts, Single(VMIN_VALUE),
                                TWMinimumData);
#endif                                      {revtw}
#endif                                      {revtw}


     VMinShiftArray[1] := VMIN_VALUE;

     if (VMIN_VALUE > VBoxMinV[1]) then GVBoxResult[1] := FALSE;



     DatalogSetType(S_ALL);

     TestClose;

    end; {if Test_limit}

end; (* VMIN_SHIFT_PRE_TEST *)



procedure VMIN_SHIFT_POST_TEST; {revvmin}
(***********************************************************************)
(***                     VMin Shift Post Test                        ***)
(***********************************************************************)
  var
    VMIN_TEST_RESULT     : boolean;
    VMIN_VALUE           : treal;
    TEST_RESULT          : boolean;
    STATUS               : integer;

procedure POST_VMIN_SEARCH (patt : pattern; StartV : treal);
(***********************************************************************)
(***                      Post VMin Search                           ***)
(***********************************************************************)
  Var
    ProgV                : treal;
    VMIN_PF_RESULT       : boolean;

begin
  ProgV := StartV;

      SET_POWER( ProgV + 100mV, 2A,
                 VMN3V, 2A,
                 ProgV + 100mV, 2A,
                 ProgV + 100mV, 2A,
                 2mS );

  DCTableSet(ProgV + 100mV, 'SLOW_MIN_DC'); {VMINSHIFT}
  VMIN_PF_RESULT := PatternExecute( STATUS, patt );

  if (VMIN_PF_RESULT) then
  begin
    datalog(patt, ' : PASS VMIN + 100mV (', ProgV + 100mV, ')', chr(10));
      SET_POWER( ProgV - 101mV, 2A,
                 VMN3V, 2A,
                 ProgV - 101mV, 2A,
                 ProgV - 101mV, 2A,
                 2mS );


    DCTableSet(ProgV - 101mV, 'SLOW_MIN_DC'); {VMINSHIFT}
    VMIN_PF_RESULT := PatternExecute( STATUS, patt );
    if (VMIN_PF_RESULT) then
      begin
       datalog(patt, ' : **PASS VMIN - 101mV (', ProgV - 101mV, ')', chr(10));
       VMIN_TEST_RESULT := FALSE;
      end
    else datalog(patt, ' : FAIL VMIN - 101mV (', ProgV - 100mV, ')', chr(10));

  end
  else
  begin
    datalog(patt, ' : **FAIL VMIN + 100mV (', ProgV + 100mV, ')', chr(10));
    VMIN_TEST_RESULT := FALSE;
  end;

 if (VMIN_TEST_RESULT) then datalog(patt, ' : PASS VMIN', chr(10))
 else datalog('**', patt, ' : FAIL VMIN', chr(10));

end; {POST_VMIN_SEARCH}

begin {VMIN_SHIFT_POST_TEST}

 if ( (Test_Limit = HOT_CHUCK) or (Test_Limit = PROBE)) then
 begin


   TestOpen(VBOX_MIN1_TEST);
     ResultRecord(GVBoxResult[1]);
     datalog('  VBOX_MIN1_TEST : ', GVBoxResult[1], chr(10));
   TestClose;

   TestOpen(VMIN_PRE1_TEST);
     ResultRecord(GVMinResult[1]);
   TestClose;



   if (V_DeviceStatus = PASS) then
   begin


{VMINSHIFT Fill in VBOXMAX setup information and pattern name}

     TestOpen(VBOX_MAX1_TEST);

      SET_POWER( VBoxMaxV[1], 2A,
                 VMX3V, 2A,
                 VBoxMaxV[1], 2A,
                 VBoxMaxV[1], 2A,
                 2mS );


     SetupSelect( SLOW_MAX_DC, FORMAT_1,
                  TIMING_1 );
     wait( 2mS );
     DCTableSet(VBoxMaxV[1], 'SLOW_MAX_DC'); {VMINSHIFT}
     TEST_RESULT := PatternExecute( STATUS, F741576B_55917314 );{VMINSHIFT}
     ResultRecord(TEST_RESULT);

    TestClose;
 


 
   end;


   if (V_DeviceStatus = PASS) then
   begin

     VMIN_TEST_RESULT := TRUE;

     DatalogResetType(S_ALL);

      SET_POWER( VMN1V, 2A,
                 VMN3V, 2A,
                 VMN1Va, 2A,
                 VMN1Vb, 2A,
                 2mS );



{VMINSHIFT Fill in setup information and pattern name}

     TestOpen( VMIN_POST1_TEST );

     SetupSelect( SLOW_MIN_DC, FORMAT_1,
                  TIMING_1 );
     wait( 2mS );

     VMIN_VALUE := VMinShiftArray[1];
     POST_VMIN_SEARCH( F741576B_55917314, VMIN_VALUE);

     ResultRecord(VMIN_TEST_RESULT);

     TestClose;




     DatalogSetType(S_ALL);


   end; (* V_DeviceStatus = PASS *)

 end; {if Test_Limit}

end; (* VMIN_SHIFT_POST_TEST *)

procedure SLOW_FUNCTIONAL_MIN_TEST;
(*
**********************************************************************
****            SLOW FUNCTIONAL MIN VCC                           ****
**********************************************************************
*)
  var
    TEST_RESULT    : boolean;
    STATUS         : integer;

  begin

{Conversion For Window Variables from Integer to Treal }
    t_range :=trange * 1ns;
    v_range :=vrange * 1mv;

    if Datalog_In_Production then
    begin


    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917014 ); (* Scanchk *)
          Datalog('comment=''TDL NAME: Scanchk''',chr(10));

          Datalog('VCC=1.8V',chr(10));

          SET_POWER( VNM1V, 6A, {rev03h Was 2A}
                     VNM3V, 6A, {rev03h Was 2A}
                     VNM1Va, 6A, {rev03h Was 2A}
                     VNM1Vb, 6A, {rev03h Was 2A}
                     2mS );


          SetupSelect( SLOW_NOM_DC, FORMAT_1,
                       TIMING_1 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917014 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom01');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := IO1_TS1;
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := OUT1_TS1;
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := IN0_TS1_AC_X;
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom01', F741576B_55917014,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom01');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom01', F741576B_55917014,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917024 ); (* hzv *)
          Datalog('comment=''TDL NAME: hzv''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917024 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom02');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargnom02', F741576B_55917024,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom02');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom02', F741576B_55917024,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917034 ); (* tgl *)
          Datalog('comment=''TDL NAME: tgl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917034 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom03');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargnom03', F741576B_55917034,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom03');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom03', F741576B_55917034,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917044 ); (* thr *)
          Datalog('comment=''TDL NAME: thr''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917044 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom04');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargnom04', F741576B_55917044,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom04');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom04', F741576B_55917044,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917064 ); (* DLP53_1 *)
          Datalog('comment=''TDL NAME: DLP53_1''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_3,
                       TIMING_3 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917064 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom06');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom06', F741576B_55917064,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom06');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom06', F741576B_55917064,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917074 ); (* DLP53_11 *)
          Datalog('comment=''TDL NAME: DLP53_11''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917074 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom07');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom07', F741576B_55917074,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom07');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom07', F741576B_55917074,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917084 ); (* DLP53_12 *)
          Datalog('comment=''TDL NAME: DLP53_12''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917084 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom08');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom08', F741576B_55917084,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom08');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom08', F741576B_55917084,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917094 ); (* DLP53_13 *)
          Datalog('comment=''TDL NAME: DLP53_13''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917094 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom09');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom09', F741576B_55917094,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom09');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom09', F741576B_55917094,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917104 ); (* DLP53_14 *)
          Datalog('comment=''TDL NAME: DLP53_14''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917104 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom10');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom10', F741576B_55917104,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom10');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom10', F741576B_55917104,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917114 ); (* DLP53_16 *)
          Datalog('comment=''TDL NAME: DLP53_16''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917114 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom11');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom11', F741576B_55917114,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom11');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom11', F741576B_55917114,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917124 ); (* DLP53_17 *)
          Datalog('comment=''TDL NAME: DLP53_17''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917124 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom12');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom12', F741576B_55917124,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom12');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom12', F741576B_55917124,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917134 ); (* DLP53_18 *)
          Datalog('comment=''TDL NAME: DLP53_18''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917134 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom13');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom13', F741576B_55917134,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom13');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom13', F741576B_55917134,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917144 ); (* DLP53_19 *)
          Datalog('comment=''TDL NAME: DLP53_19''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917144 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom14');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom14', F741576B_55917144,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom14');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom14', F741576B_55917144,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917154 ); (* DLP53_2 *)
          Datalog('comment=''TDL NAME: DLP53_2''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917154 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom15');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom15', F741576B_55917154,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom15');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom15', F741576B_55917154,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917164 ); (* DLP53_3 *)
          Datalog('comment=''TDL NAME: DLP53_3''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917164 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom16');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom16', F741576B_55917164,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom16');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom16', F741576B_55917164,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917174 ); (* DLP53_4 *)
          Datalog('comment=''TDL NAME: DLP53_4''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917174 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom17');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom17', F741576B_55917174,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom17');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom17', F741576B_55917174,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917184 ); (* DLP53_6 *)
          Datalog('comment=''TDL NAME: DLP53_6''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917184 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom18');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom18', F741576B_55917184,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom18');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom18', F741576B_55917184,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917194 ); (* DLP53_7 *)
          Datalog('comment=''TDL NAME: DLP53_7''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917194 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom19');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom19', F741576B_55917194,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom19');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom19', F741576B_55917194,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917204 ); (* DLP53_8 *)
          Datalog('comment=''TDL NAME: DLP53_8''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917204 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom20');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom20', F741576B_55917204,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom20');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom20', F741576B_55917204,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917214 ); (* DLP53_9 *)
          Datalog('comment=''TDL NAME: DLP53_9''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917214 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom21');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom21', F741576B_55917214,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom21');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom21', F741576B_55917214,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917224 ); (* RX_SLOW *)
          Datalog('comment=''TDL NAME: RX_SLOW''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_4,
                       TIMING_4 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917224 );

{rev00g}
   Datalog('comment=''************ MISR TEST ************''',chr(10));
   Datalog('comment=''EXPECTED: 3621922 ''',chr(10));

   V_ScanOutReverseBitOrder := TRUE;
   V_ScanOutStrobeAfterClk := FALSE;

    DummyB[1]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[2]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[1]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[3]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[2]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[4]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[3]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[5]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[4]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[6]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[7]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[8]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[9]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[10]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[5]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[11]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[6]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[12]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[7]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[13]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[8]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[14]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );

    Datalog('comment=''MISR MATCH1'' = ', MISR_DATA[1], '<',
       MISR_DATA[1]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH2'' = ', MISR_DATA[2], '<',
       MISR_DATA[2]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH3'' = ', MISR_DATA[3], '<',
       MISR_DATA[3]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH4'' = ', MISR_DATA[4], '<',
       MISR_DATA[4]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH5'' = ', MISR_DATA[5], '<',
       MISR_DATA[5]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH6'' = ', MISR_DATA[6], '<',
       MISR_DATA[6]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH7'' = ', MISR_DATA[7], '<',
       MISR_DATA[7]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH8'' = ', MISR_DATA[8], '<',
       MISR_DATA[8]:s_BINARY, '>', chr(10));
if     
	(((MISR_DATA[1] <> 3621922) 
    	OR (MISR_DATA[2] <> 3621922)
    	OR (MISR_DATA[3] <> 3621922)
    	OR (MISR_DATA[4] <> 3621922)     
	OR (MISR_DATA[5] <> 3621922) 
    	OR (MISR_DATA[6] <> 3621922)
    	OR (MISR_DATA[7] <> 3621922)
    	OR (MISR_DATA[8] <> 3621922)))    

        then
	begin 
        TEST_RESULT := FAIL;
	end;
{rev00g End Add }

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom22');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := IN0_TS4_AC_X;
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := IO1_TS4;
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS4;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom22', F741576B_55917224,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom22');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom22', F741576B_55917224,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917234 ); (* TC_PLL *)
          Datalog('comment=''TDL NAME: TC_PLL''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_5,
                       TIMING_5 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917234 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom23');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := IN0_TS5_AC_X;
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := IO1_TS5;
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS5;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom23', F741576B_55917234,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom23');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom23', F741576B_55917234,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917244 ); (* TX_2 *)
          Datalog('comment=''TDL NAME: TX_2''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_6,
                       TIMING_6 );

PatternMaskVector( F741576B_55917244, s_CYCLES, 4, 16 ); {rev03j}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917244 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom24');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := IN0_TS6_AC_X;
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := IO1_TS6;
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS6;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom24', F741576B_55917244,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom24');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom24', F741576B_55917244,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917254 ); (* clv *)
          Datalog('comment=''TDL NAME: clv''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917254 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom25');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargnom25', F741576B_55917254,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom25');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom25', F741576B_55917254,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917264 ); (* dch *)
          Datalog('comment=''TDL NAME: dch''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_7,
                       TIMING_7 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917264 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom26');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := IN0_TS7_AC_X;
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := IO1_TS7;
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS7;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom26', F741576B_55917264,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom26');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom26', F741576B_55917264,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917274 ); (* DCH_ALL *)
          Datalog('comment=''TDL NAME: DCH_ALL''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917274 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom27');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := IN0_TS7_AC_X;
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := IO1_TS7;
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS7;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom27', F741576B_55917274,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom27');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom27', F741576B_55917274,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917284 ); (* die *)
          Datalog('comment=''TDL NAME: die''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_8,
                       TIMING_8 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917284 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom28');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := IN0_TS8_AC_X;
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := IO1_TS8;
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := OUT1_TS8;
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom28', F741576B_55917284,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom28');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom28', F741576B_55917284,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917294 ); (* tdv *)
          Datalog('comment=''TDL NAME: tdv''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917294 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom29');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargnom29', F741576B_55917294,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom29');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom29', F741576B_55917294,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;
{rev03g
    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917304 ); (* BURNIN *)
          Datalog('comment=''TDL NAME: BURNIN''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_9,
                       TIMING_9 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917304 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom30');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := IN0_TS9_AC_X;
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := IO1_TS9;
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := OUT1_TS9;
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom30', F741576B_55917304,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom30');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom30', F741576B_55917304,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;
 rev03g}
    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917314 ); (* VBOX_ALL *)
          Datalog('comment=''TDL NAME: VBOX_ALL''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_1,
                       TIMING_1 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917314 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom31');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := IO1_TS1;
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := OUT1_TS1;
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := IN0_TS1_AC_X;
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom31', F741576B_55917314,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom31');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom31', F741576B_55917314,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917324 ); (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_10,
                       TIMING_10 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917324 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917334 ); (* LU *)
          Datalog('comment=''TDL NAME: LU''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917334 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917344 ); (* hzv (Vout) *)
          Datalog('comment=''TDL NAME: hzv (Vout)''',chr(10));

          SetupSelect( SLOW_NOM_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917344 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom34');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargnom34', F741576B_55917344,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom34');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom34', F741576B_55917344,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_NOM_55917354 ); (* tgl (Vout) *)
          Datalog('comment=''TDL NAME: tgl (Vout)''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917354 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom35');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargnom35', F741576B_55917354,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom35');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom35', F741576B_55917354,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    end;  (* Datalog_In_Production *)


    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917014 ); (* Scanchk *)
          Datalog('comment=''TDL NAME: Scanchk''',chr(10));

          Datalog('VCC=1.65V',chr(10));
{rev04e
          SET_POWER( VMN1V, 6A, {rev03h Was 2A}
                     VMN3V, 6A, {rev03h Was 2A}
                     VMN1Va, 6A, {rev03h Was 2A}
                     VMN1Vb, 6A, {rev03h Was 2A}
                     2mS );
}
{rev04e  Required for NBTI}
          SET_POWER( FVMN1V, 6A, {rev03h Was 2A}
                     VMN3V, 6A, {rev03h Was 2A}
                     FVMN1V, 6A, {rev03h Was 2A}
                     VMN1Vb, 6A, {rev03h Was 2A}
                     2mS );


          SetupSelect( SLOW_MIN_DC, FORMAT_1,
                       TIMING_1 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917014 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917014, F741576B_55917014,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin01');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := IO1_TS1;
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := OUT1_TS1;
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := IN0_TS1_AC_X;
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin01', F741576B_55917014,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin01');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin01', F741576B_55917014,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917024 ); (* hzv *)
          Datalog('comment=''TDL NAME: hzv''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917024 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917024, F741576B_55917024,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin02');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmin02', F741576B_55917024,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin02');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin02', F741576B_55917024,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917034 ); (* tgl *)
          Datalog('comment=''TDL NAME: tgl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917034 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917034, F741576B_55917034,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin03');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmin03', F741576B_55917034,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin03');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin03', F741576B_55917034,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917044 ); (* thr *)
          Datalog('comment=''TDL NAME: thr''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917044 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917044, F741576B_55917044,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin04');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmin04', F741576B_55917044,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin04');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin04', F741576B_55917044,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917064 ); (* DLP53_1 *)
          Datalog('comment=''TDL NAME: DLP53_1''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_3,
                       TIMING_3 );

PatternMaskVector( F741576B_55917064, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917064 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917064, F741576B_55917064,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin06');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin06', F741576B_55917064,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin06');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin06', F741576B_55917064,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917074 ); (* DLP53_11 *)
          Datalog('comment=''TDL NAME: DLP53_11''',chr(10));

PatternMaskVector( F741576B_55917074, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917074 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917074, F741576B_55917074,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin07');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin07', F741576B_55917074,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin07');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin07', F741576B_55917074,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917084 ); (* DLP53_12 *)
          Datalog('comment=''TDL NAME: DLP53_12''',chr(10));

PatternMaskVector( F741576B_55917084, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917084 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917084, F741576B_55917084,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin08');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin08', F741576B_55917084,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin08');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin08', F741576B_55917084,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917094 ); (* DLP53_13 *)
          Datalog('comment=''TDL NAME: DLP53_13''',chr(10));

PatternMaskVector( F741576B_55917094, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917094 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917094, F741576B_55917094,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin09');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin09', F741576B_55917094,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin09');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin09', F741576B_55917094,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917104 ); (* DLP53_14 *)
          Datalog('comment=''TDL NAME: DLP53_14''',chr(10));

PatternMaskVector( F741576B_55917104, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917104 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917104, F741576B_55917104,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin10');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin10', F741576B_55917104,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin10');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin10', F741576B_55917104,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917114 ); (* DLP53_16 *)
          Datalog('comment=''TDL NAME: DLP53_16''',chr(10));

PatternMaskVector( F741576B_55917114, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917114 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917114, F741576B_55917114,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin11');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin11', F741576B_55917114,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin11');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin11', F741576B_55917114,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917124 ); (* DLP53_17 *)
          Datalog('comment=''TDL NAME: DLP53_17''',chr(10));

PatternMaskVector( F741576B_55917124, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917124 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917124, F741576B_55917124,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin12');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin12', F741576B_55917124,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin12');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin12', F741576B_55917124,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917134 ); (* DLP53_18 *)
          Datalog('comment=''TDL NAME: DLP53_18''',chr(10));

PatternMaskVector( F741576B_55917134, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917134 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917134, F741576B_55917134,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin13');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin13', F741576B_55917134,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin13');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin13', F741576B_55917134,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917144 ); (* DLP53_19 *)
          Datalog('comment=''TDL NAME: DLP53_19''',chr(10));

PatternMaskVector( F741576B_55917144, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917144 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917144, F741576B_55917144,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin14');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin14', F741576B_55917144,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin14');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin14', F741576B_55917144,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917154 ); (* DLP53_2 *)
          Datalog('comment=''TDL NAME: DLP53_2''',chr(10));

PatternMaskVector( F741576B_55917154, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917154 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917154, F741576B_55917154,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin15');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin15', F741576B_55917154,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin15');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin15', F741576B_55917154,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917164 ); (* DLP53_3 *)
          Datalog('comment=''TDL NAME: DLP53_3''',chr(10));

PatternMaskVector( F741576B_55917164, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917164 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917164, F741576B_55917164,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin16');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin16', F741576B_55917164,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin16');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin16', F741576B_55917164,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917174 ); (* DLP53_4 *)
          Datalog('comment=''TDL NAME: DLP53_4''',chr(10));

PatternMaskVector( F741576B_55917174, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917174 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917174, F741576B_55917174,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin17');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin17', F741576B_55917174,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin17');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin17', F741576B_55917174,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917184 ); (* DLP53_6 *)
          Datalog('comment=''TDL NAME: DLP53_6''',chr(10));

PatternMaskVector( F741576B_55917184, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917184 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917184, F741576B_55917184,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin18');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin18', F741576B_55917184,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin18');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin18', F741576B_55917184,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917194 ); (* DLP53_7 *)
          Datalog('comment=''TDL NAME: DLP53_7''',chr(10));

PatternMaskVector( F741576B_55917194, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917194 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917194, F741576B_55917194,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin19');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin19', F741576B_55917194,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin19');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin19', F741576B_55917194,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917204 ); (* DLP53_8 *)
          Datalog('comment=''TDL NAME: DLP53_8''',chr(10));

PatternMaskVector( F741576B_55917204, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917204 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917204, F741576B_55917204,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin20');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin20', F741576B_55917204,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin20');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin20', F741576B_55917204,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917214 ); (* DLP53_9 *)
          Datalog('comment=''TDL NAME: DLP53_9''',chr(10));

PatternMaskVector( F741576B_55917214, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917214 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917214, F741576B_55917214,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin21');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin21', F741576B_55917214,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin21');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin21', F741576B_55917214,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917224 ); (* RX_SLOW *)
          Datalog('comment=''TDL NAME: RX_SLOW''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_4,
                       TIMING_4 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917224 );

{rev00g}
   Datalog('comment=''************ MISR TEST ************''',chr(10));
   Datalog('comment=''EXPECTED: 3621922 ''',chr(10));

   V_ScanOutReverseBitOrder := TRUE;
   V_ScanOutStrobeAfterClk := FALSE;

    DummyB[1]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[2]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[1]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[3]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[2]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[4]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[3]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[5]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[4]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[6]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[7]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[8]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[9]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[10]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[5]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[11]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[6]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[12]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[7]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[13]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[8]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[14]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );

    Datalog('comment=''MISR MATCH1'' = ', MISR_DATA[1], '<',
       MISR_DATA[1]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH2'' = ', MISR_DATA[2], '<',
       MISR_DATA[2]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH3'' = ', MISR_DATA[3], '<',
       MISR_DATA[3]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH4'' = ', MISR_DATA[4], '<',
       MISR_DATA[4]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH5'' = ', MISR_DATA[5], '<',
       MISR_DATA[5]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH6'' = ', MISR_DATA[6], '<',
       MISR_DATA[6]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH7'' = ', MISR_DATA[7], '<',
       MISR_DATA[7]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH8'' = ', MISR_DATA[8], '<',
       MISR_DATA[8]:s_BINARY, '>', chr(10));
if     
	(((MISR_DATA[1] <> 3621922) 
    	OR (MISR_DATA[2] <> 3621922)
    	OR (MISR_DATA[3] <> 3621922)
    	OR (MISR_DATA[4] <> 3621922)     
	OR (MISR_DATA[5] <> 3621922) 
    	OR (MISR_DATA[6] <> 3621922)
    	OR (MISR_DATA[7] <> 3621922)
    	OR (MISR_DATA[8] <> 3621922)))    

        then
	begin 
        TEST_RESULT := FAIL;
	end;
{rev00g End Add }

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917224, F741576B_55917224,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin22');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := IN0_TS4_AC_X;
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := IO1_TS4;
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS4;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin22', F741576B_55917224,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin22');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin22', F741576B_55917224,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917234 ); (* TC_PLL *)
          Datalog('comment=''TDL NAME: TC_PLL''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_5,
                       TIMING_5 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917234 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917234, F741576B_55917234,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin23');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := IN0_TS5_AC_X;
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := IO1_TS5;
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS5;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin23', F741576B_55917234,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin23');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin23', F741576B_55917234,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917244 ); (* TX_2 *)
          Datalog('comment=''TDL NAME: TX_2''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_6,
                       TIMING_6 );

PatternMaskVector( F741576B_55917244, s_CYCLES, 4, 16 ); {rev03j}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917244 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917244, F741576B_55917244,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin24');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := IN0_TS6_AC_X;
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := IO1_TS6;
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS6;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin24', F741576B_55917244,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin24');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin24', F741576B_55917244,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917254 ); (* clv *)
          Datalog('comment=''TDL NAME: clv''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917254 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917254, F741576B_55917254,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin25');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmin25', F741576B_55917254,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin25');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin25', F741576B_55917254,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917264 ); (* dch *)
          Datalog('comment=''TDL NAME: dch''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_7,
                       TIMING_7 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917264 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917264, F741576B_55917264,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin26');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := IN0_TS7_AC_X;
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := IO1_TS7;
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS7;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin26', F741576B_55917264,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin26');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin26', F741576B_55917264,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917274 ); (* DCH_ALL *)
          Datalog('comment=''TDL NAME: DCH_ALL''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917274 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917274, F741576B_55917274,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin27');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := IN0_TS7_AC_X;
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := IO1_TS7;
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS7;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin27', F741576B_55917274,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin27');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin27', F741576B_55917274,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917284 ); (* die *)
          Datalog('comment=''TDL NAME: die''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_8,
                       TIMING_8 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917284 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917284, F741576B_55917284,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin28');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := IN0_TS8_AC_X;
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := IO1_TS8;
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := OUT1_TS8;
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin28', F741576B_55917284,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin28');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin28', F741576B_55917284,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917294 ); (* tdv *)
          Datalog('comment=''TDL NAME: tdv''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917294 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917294, F741576B_55917294,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin29');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmin29', F741576B_55917294,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin29');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin29', F741576B_55917294,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;
{rev03g
    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917304 ); (* BURNIN *)
          Datalog('comment=''TDL NAME: BURNIN''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_9,
                       TIMING_9 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917304 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917304, F741576B_55917304,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin30');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := IN0_TS9_AC_X;
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := IO1_TS9;
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := OUT1_TS9;
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin30', F741576B_55917304,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin30');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin30', F741576B_55917304,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;
 rev03g}
    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917314 ); (* VBOX_ALL *)
          Datalog('comment=''TDL NAME: VBOX_ALL''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_1,
                       TIMING_1 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917314 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917314, F741576B_55917314,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin31');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := IO1_TS1;
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := OUT1_TS1;
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := IN0_TS1_AC_X;
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin31', F741576B_55917314,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin31');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin31', F741576B_55917314,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917324 ); (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_10,
                       TIMING_10 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917324 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917324, F741576B_55917324,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917334 ); (* LU *)
          Datalog('comment=''TDL NAME: LU''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917334 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917334, F741576B_55917334,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917344 ); (* hzv (Vout) *)
          Datalog('comment=''TDL NAME: hzv (Vout)''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917344 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917344, F741576B_55917344,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin34');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmin34', F741576B_55917344,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin34');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin34', F741576B_55917344,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MIN_55917354 ); (* tgl (Vout) *)
          Datalog('comment=''TDL NAME: tgl (Vout)''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917354 );

          ResultRecord( TEST_RESULT );


          if vddshmoo then {char}
            ShmooAll('SLOW_MIN_DC', ' ',
                     F741576B_55917354, F741576B_55917354,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');


          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin35');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmin35', F741576B_55917354,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin35');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin35', F741576B_55917354,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

      Power_down;

  end;  (* SLOW_FUNCTIONAL_MIN_TEST *)


procedure SLOW_FUNCTIONAL_MAX_TEST;
(*
**********************************************************************
****            SLOW FUNCTIONAL MAX VCC                           ****
**********************************************************************
*)
  var
    TEST_RESULT    : boolean;
    STATUS         : integer;

  begin


    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917014 ); (* Scanchk *)
          Datalog('comment=''TDL NAME: Scanchk''',chr(10));

          Datalog('VCC=1.95V',chr(10));

          SET_POWER( VMX1V, 6A, {rev03h Was 2A}
                     VMX3V, 6A, {rev03h Was 2A}
                     VMX1Va, 6A, {rev03h Was 2A}
                     VMX1Vb, 6A, {rev03h Was 2A}
                     2mS );


          SetupSelect( SLOW_MAX_DC, FORMAT_1,
                       TIMING_1 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917014 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax01');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := IO1_TS1;
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := OUT1_TS1;
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := IN0_TS1_AC_X;
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax01', F741576B_55917014,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax01');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax01', F741576B_55917014,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917024 ); (* hzv *)
          Datalog('comment=''TDL NAME: hzv''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917024 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax02');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmax02', F741576B_55917024,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax02');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax02', F741576B_55917024,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917034 ); (* tgl *)
          Datalog('comment=''TDL NAME: tgl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917034 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax03');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmax03', F741576B_55917034,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax03');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax03', F741576B_55917034,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917044 ); (* thr *)
          Datalog('comment=''TDL NAME: thr''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917044 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax04');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmax04', F741576B_55917044,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax04');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax04', F741576B_55917044,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917064 ); (* DLP53_1 *)
          Datalog('comment=''TDL NAME: DLP53_1''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_3,
                       TIMING_3 );

PatternMaskVector( F741576B_55917064, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917064 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax06');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax06', F741576B_55917064,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax06');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax06', F741576B_55917064,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917074 ); (* DLP53_11 *)
          Datalog('comment=''TDL NAME: DLP53_11''',chr(10));

PatternMaskVector( F741576B_55917074, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917074 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax07');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax07', F741576B_55917074,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax07');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax07', F741576B_55917074,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917084 ); (* DLP53_12 *)
          Datalog('comment=''TDL NAME: DLP53_12''',chr(10));

PatternMaskVector( F741576B_55917084, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917084 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax08');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax08', F741576B_55917084,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax08');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax08', F741576B_55917084,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917094 ); (* DLP53_13 *)
          Datalog('comment=''TDL NAME: DLP53_13''',chr(10));

PatternMaskVector( F741576B_55917094, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917094 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax09');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax09', F741576B_55917094,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax09');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax09', F741576B_55917094,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917104 ); (* DLP53_14 *)
          Datalog('comment=''TDL NAME: DLP53_14''',chr(10));

PatternMaskVector( F741576B_55917104, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917104 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax10');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax10', F741576B_55917104,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax10');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax10', F741576B_55917104,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917114 ); (* DLP53_16 *)
          Datalog('comment=''TDL NAME: DLP53_16''',chr(10));

PatternMaskVector( F741576B_55917114, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917114 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax11');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax11', F741576B_55917114,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax11');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax11', F741576B_55917114,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917124 ); (* DLP53_17 *)
          Datalog('comment=''TDL NAME: DLP53_17''',chr(10));

PatternMaskVector( F741576B_55917124, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917124 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax12');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax12', F741576B_55917124,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax12');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax12', F741576B_55917124,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917134 ); (* DLP53_18 *)
          Datalog('comment=''TDL NAME: DLP53_18''',chr(10));

PatternMaskVector( F741576B_55917134, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917134 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax13');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax13', F741576B_55917134,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax13');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax13', F741576B_55917134,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917144 ); (* DLP53_19 *)
          Datalog('comment=''TDL NAME: DLP53_19''',chr(10));

PatternMaskVector( F741576B_55917144, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917144 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax14');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax14', F741576B_55917144,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax14');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax14', F741576B_55917144,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917154 ); (* DLP53_2 *)
          Datalog('comment=''TDL NAME: DLP53_2''',chr(10));

PatternMaskVector( F741576B_55917154, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917154 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax15');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax15', F741576B_55917154,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax15');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax15', F741576B_55917154,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917164 ); (* DLP53_3 *)
          Datalog('comment=''TDL NAME: DLP53_3''',chr(10));

PatternMaskVector( F741576B_55917164, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917164 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax16');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax16', F741576B_55917164,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax16');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax16', F741576B_55917164,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917174 ); (* DLP53_4 *)
          Datalog('comment=''TDL NAME: DLP53_4''',chr(10));

PatternMaskVector( F741576B_55917174, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917174 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax17');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax17', F741576B_55917174,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax17');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax17', F741576B_55917174,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917184 ); (* DLP53_6 *)
          Datalog('comment=''TDL NAME: DLP53_6''',chr(10));

PatternMaskVector( F741576B_55917184, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917184 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax18');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax18', F741576B_55917184,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax18');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax18', F741576B_55917184,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917194 ); (* DLP53_7 *)
          Datalog('comment=''TDL NAME: DLP53_7''',chr(10));

PatternMaskVector( F741576B_55917194, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917194 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax19');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax19', F741576B_55917194,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax19');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax19', F741576B_55917194,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917204 ); (* DLP53_8 *)
          Datalog('comment=''TDL NAME: DLP53_8''',chr(10));

PatternMaskVector( F741576B_55917204, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917204 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax20');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax20', F741576B_55917204,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax20');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax20', F741576B_55917204,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917214 ); (* DLP53_9 *)
          Datalog('comment=''TDL NAME: DLP53_9''',chr(10));

PatternMaskVector( F741576B_55917214, s_CYCLES, 65, 75 ); {rev04h}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917214 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax21');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := IN0_TS3_AC_X;
ACMARG_PINS[2] := D622_INP5; {Single pin group}
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := IO1_TS3;
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := OUT1_TS3;
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax21', F741576B_55917214,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax21');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax21', F741576B_55917214,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917224 ); (* RX_SLOW *)
          Datalog('comment=''TDL NAME: RX_SLOW''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_4,
                       TIMING_4 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917224 );

{rev00g}
   Datalog('comment=''************ MISR TEST ************''',chr(10));
   Datalog('comment=''EXPECTED: 3621922 ''',chr(10));

   V_ScanOutReverseBitOrder := TRUE;
   V_ScanOutStrobeAfterClk := FALSE;

    DummyB[1]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[2]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[1]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[3]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[2]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[4]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[3]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[5]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[4]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[6]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[7]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[8]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[9]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[10]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[5]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[11]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[6]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[12]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[7]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[13]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[8]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[14]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );

    Datalog('comment=''MISR MATCH1'' = ', MISR_DATA[1], '<',
       MISR_DATA[1]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH2'' = ', MISR_DATA[2], '<',
       MISR_DATA[2]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH3'' = ', MISR_DATA[3], '<',
       MISR_DATA[3]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH4'' = ', MISR_DATA[4], '<',
       MISR_DATA[4]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH5'' = ', MISR_DATA[5], '<',
       MISR_DATA[5]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH6'' = ', MISR_DATA[6], '<',
       MISR_DATA[6]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH7'' = ', MISR_DATA[7], '<',
       MISR_DATA[7]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH8'' = ', MISR_DATA[8], '<',
       MISR_DATA[8]:s_BINARY, '>', chr(10));
if     
	(((MISR_DATA[1] <> 3621922) 
    	OR (MISR_DATA[2] <> 3621922)
    	OR (MISR_DATA[3] <> 3621922)
    	OR (MISR_DATA[4] <> 3621922)     
	OR (MISR_DATA[5] <> 3621922) 
    	OR (MISR_DATA[6] <> 3621922)
    	OR (MISR_DATA[7] <> 3621922)
    	OR (MISR_DATA[8] <> 3621922)))    

        then
	begin 
        TEST_RESULT := FAIL;
	end;
{rev00g End Add }

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax22');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := IN0_TS4_AC_X;
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := IO1_TS4;
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS4;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax22', F741576B_55917224,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax22');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax22', F741576B_55917224,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917234 ); (* TC_PLL *)
          Datalog('comment=''TDL NAME: TC_PLL''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_5,
                       TIMING_5 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917234 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax23');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := IN0_TS5_AC_X;
ACMARG_PINS[3] := D622_INN9; {Single pin group}
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := IO1_TS5;
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS5;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax23', F741576B_55917234,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax23');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax23', F741576B_55917234,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917244 ); (* TX_2 *)
          Datalog('comment=''TDL NAME: TX_2''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_6,
                       TIMING_6 );

PatternMaskVector( F741576B_55917244, s_CYCLES, 4, 16 ); {rev03j}
          TEST_RESULT := PatternExecute( STATUS, F741576B_55917244 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax24');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := IN0_TS6_AC_X;
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := IO1_TS6;
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS6;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax24', F741576B_55917244,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax24');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax24', F741576B_55917244,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917254 ); (* clv *)
          Datalog('comment=''TDL NAME: clv''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917254 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax25');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmax25', F741576B_55917254,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax25');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax25', F741576B_55917254,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917264 ); (* dch *)
          Datalog('comment=''TDL NAME: dch''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_7,
                       TIMING_7 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917264 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax26');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := IN0_TS7_AC_X;
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := IO1_TS7;
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS7;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax26', F741576B_55917264,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax26');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax26', F741576B_55917264,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917274 ); (* DCH_ALL *)
          Datalog('comment=''TDL NAME: DCH_ALL''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917274 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax27');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := IN0_TS7_AC_X;
ACMARG_PINS[4] := T_CLK0; {Single pin group}
ACMARG_PINS[5] := D622_INP9; {Single pin group}
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := IO1_TS7;
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := OUT1_TS7;
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax27', F741576B_55917274,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax27');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax27', F741576B_55917274,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917284 ); (* die *)
          Datalog('comment=''TDL NAME: die''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_8,
                       TIMING_8 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917284 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax28');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := IN0_TS8_AC_X;
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := IO1_TS8;
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := OUT1_TS8;
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax28', F741576B_55917284,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax28');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax28', F741576B_55917284,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917294 ); (* tdv *)
          Datalog('comment=''TDL NAME: tdv''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917294 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax29');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmax29', F741576B_55917294,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax29');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax29', F741576B_55917294,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;
{rev03g
    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917304 ); (* BURNIN *)
          Datalog('comment=''TDL NAME: BURNIN''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_9,
                       TIMING_9 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917304 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax30');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := IN0_TS9_AC_X;
ACMARG_PINS[6] := TC622N; {Single pin group}
ACMARG_PINS[7] := T_CLK4; {Single pin group}
ACMARG_PINS[8] := TC166N; {Single pin group}
ACMARG_PINS[9] := D622_INN10; {Single pin group}
ACMARG_PINS[10] := C155_BPL_I; {Single pin group}
ACMARG_PINS[11] := T_CLK8; {Single pin group}
ACMARG_PINS[12] := D622_INP12; {Single pin group}
ACMARG_PINS[13] := D622_INN14; {Single pin group}
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := IO1_TS9;
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := M_T_CLK3; {Single pin group}
ACMARG_PINS[36] := T_CLK11; {Single pin group}
ACMARG_PINS[37] := C155_CSDNP; {Single pin group}
ACMARG_PINS[38] := D622_INN3; {Single pin group}
ACMARG_PINS[39] := D622_INP3; {Single pin group}
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := OUT1_TS9;
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := T_CLK12; {Single pin group}
ACMARG_PINS[53] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[54] := D622_INN0; {Single pin group}
ACMARG_PINS[55] := D622_INP0; {Single pin group}
ACMARG_PINS[56] := D622_INN4; {Single pin group}
ACMARG_PINS[57] := D622_INP4; {Single pin group}
ACMARG_PINS[58] := D622_INN8; {Single pin group}
ACMARG_PINS[59] := D622_INP8; {Single pin group}
ACMARG_PINS[60] := T_CLK3; {Single pin group}
ACMARG_PINS[61] := C666_EXTN; {Single pin group}
ACMARG_PINS[62] := T_CLK7; {Single pin group}
ACMARG_PINS[63] := D622_INP11; {Single pin group}
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := CICLK; {Single pin group}
ACMARG_PINS[66] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax30', F741576B_55917304,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax30');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax30', F741576B_55917304,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;
 rev03g}
    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917314 ); (* VBOX_ALL *)
          Datalog('comment=''TDL NAME: VBOX_ALL''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_1,
                       TIMING_1 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917314 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax31');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := IO1_TS1;
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := OUT1_TS1;
ACMARG_PINS[40] := D622_INN7; {Single pin group}
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := IN0_TS1_AC_X;
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax31', F741576B_55917314,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax31');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax31', F741576B_55917314,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917324 ); (* IDQ *)
          Datalog('comment=''TDL NAME: IDQ''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_10,
                       TIMING_10 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917324 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax32');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax32', F741576B_55917324,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax32');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax32', F741576B_55917324,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917334 ); (* LU *)
          Datalog('comment=''TDL NAME: LU''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917334 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax33');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := IO1_TS10;
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := IN0_TS10_AC_X;
ACMARG_PINS[64] := D622_INN13; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := OUT1_TS10;
ACMARG_PINS[67] := D622_INP15; {Single pin group}
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax33', F741576B_55917334,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax33');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax33', F741576B_55917334,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917344 ); (* hzv (Vout) *)
          Datalog('comment=''TDL NAME: hzv (Vout)''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917344 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax34');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmax34', F741576B_55917344,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax34');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax34', F741576B_55917344,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( SLOW_MAX_55917354 ); (* tgl (Vout) *)
          Datalog('comment=''TDL NAME: tgl (Vout)''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917354 );

          ResultRecord( TEST_RESULT );


          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax35');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := IO1_TS2;
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := OUT1_TS2;
ACMARG_PINS[41] := D622_INP7; {Single pin group}
ACMARG_PINS[42] := T_CLK2; {Single pin group}
ACMARG_PINS[43] := TC622P; {Single pin group}
ACMARG_PINS[44] := T_CLK6; {Single pin group}
ACMARG_PINS[45] := TC166P; {Single pin group}
ACMARG_PINS[46] := D622_INP10; {Single pin group}
ACMARG_PINS[47] := D622_INN12; {Single pin group}
ACMARG_PINS[48] := RSTN; {Single pin group}
ACMARG_PINS[49] := D622_INP14; {Single pin group}
ACMARG_PINS[50] := DATA_VALID; {Single pin group}
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := D622_INN1; {Single pin group}
ACMARG_PINS[71] := ONCKI; {Single pin group}
ACMARG_PINS[72] := D622_INP1; {Single pin group}
ACMARG_PINS[73] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[74] := D622_INN5; {Single pin group}
ACMARG_PINS[75] := IN0_TS2_AC_X;
(* End Margin Additions *)
            T_timing_search('tmargmax35', F741576B_55917354,
                           NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'SLOW_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax35');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax35', F741576B_55917354,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'SLOW_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

      Power_down;

  end;  (* SLOW_FUNCTIONAL_MAX_TEST *)

procedure VIH_VIL_TEST;
(*
**********************************************************************
****            VIH/VIL FUNCTIONAL                                ****
**********************************************************************
*)
  var
    STATUS            : integer;
    TEST_RESULT       : boolean;
    VID_RESULT         : boolean;
    LVDSa_RESULT          : boolean;
    LVDSa1V_VID          : boolean;
    CML_RESULT          : boolean;
    CML1V_VID          : boolean;
    CMOSa_RESULT          : boolean;
    TESTINA_RESULT          : boolean;

  begin

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( VIHL_MIN_55917044 ); 

          Datalog('VCC=1.65V',chr(10));

          SET_POWER( VMN1V, 6A, {rev03h Was 2A}
                     VMN3V, 6A, {rev03h Was 2A}
                     VMN1Va, 6A, {rev03h Was 2A}
                     VMN1Vb, 6A, {rev03h Was 2A}
                     2mS );


          SetupSelect( SLOW_MIN_DC, FORMAT_2,
                       TIMING_2 );

          (* TEST CMOSa VIH *)
          Datalog('comment=''TEST CMOSa VIH''',chr(10));
          DCSetLDOFF( VIHCMOSa3V_VMIN, 0V,CP,
                      VMN3V*0.75, VMN3V*0.25, CMOSa3V_INS );
          DCSetDyn( VIHCMOSa3V_VMIN, 0V,CP,
                    VMN3V*0.75, VMN3V*0.25, VMN3V*0.65,
                    -2.0mA, 2.0mA, CMOSa3V_IOS );
          wait( 2mS );

          Datalog('comment=''TDL NAME: thr''',chr(10));
          CMOSa_RESULT := PatternExecute( STATUS, F741576B_55917044 );

          (* TEST CMOSa VIL *)
          if ( CMOSa_RESULT = PASS ) then
          begin
            Datalog('comment=''TEST CMOSa VIL''',chr(10));
            DCSetLDOFF( VMN3V, VILCMOSa3V_VMIN,CP,
                        VMN3V*0.75, VMN3V*0.25, CMOSa3V_INS );
            DCSetDyn( VMN3V, VILCMOSa3V_VMIN,CP,
                      VMN3V*0.75, VMN3V*0.25, VMN3V*0.65,
                      -2.0mA, 2.0mA, CMOSa3V_IOS );
            wait( 2mS );

            Datalog('comment=''TDL NAME: thr''',chr(10));
            CMOSa_RESULT := PatternExecute( STATUS, F741576B_55917044 );
          end;

          SetupSelect( SLOW_MIN_DC, FORMAT_2,
                       TIMING_2 );

          (* TEST TESTINA VIH *)
          Datalog('comment=''TEST TESTINA VIH''',chr(10));
          DCSetLDOFF( VIHTESTINA1V_VMIN, 0V,CP,
                      VMN1V*0.75, VMN1V*0.25, TESTINA1V_INS );
          wait( 2mS );

          Datalog('comment=''TDL NAME: thr''',chr(10));
          TESTINA_RESULT := PatternExecute( STATUS, F741576B_55917044 );

          (* TEST TESTINA VIL *)
          if ( TESTINA_RESULT = PASS ) then
          begin
            Datalog('comment=''TEST TESTINA VIL''',chr(10));
            DCSetLDOFF( VMN1V, VILTESTINA1V_VMIN,CP,
                        VMN1V*0.75, VMN1V*0.25, TESTINA1V_INS );
            wait( 2mS );

            Datalog('comment=''TDL NAME: thr''',chr(10));
            TESTINA_RESULT := PatternExecute( STATUS, F741576B_55917044 );
          end;

          SetupSelect( SLOW_MIN_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PASS;




          IF (CMOSa_RESULT = FAIL) THEN TEST_RESULT := FAIL;

          IF (TESTINA_RESULT = FAIL) THEN TEST_RESULT := FAIL;


          ResultRecord( TEST_RESULT );

          (* Set Drvup,Drvdown to VIH,VIL limits for T_voltage_search.  *)


          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VMN3V*0.7, VMN3V*0.2,CP, VMN3V*0.75, VMN3V*0.25, CMOSa3V_INS );
  DCSetDyn( VMN3V*0.7, VMN3V*0.2,CP, VMN3V*0.75, VMN3V*0.25, VMN3V*0.65,
              -2.0mA, 2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VMN3V*0.7, VMN3V*0.2,CP, VMN3V*0.75, VMN3V*0.25, VMN3V*0.65,
              -2.0mA, 2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( 1.155V, 0.330V,CP, 1.238V, 0.413V, TESTINA1V_INS );
  DCSetDyn( 1.155V, 0.330V,CP, 1.238V, 0.413V, 1.073V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );


          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin04');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin04', F741576B_55917044,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'f',
                             1.5V, 1.0V, 10mV, 'VIHL_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( VIHL_MIN_55917054 ); {rev03a}

          Datalog('comment=''55917044 IS A VID TEST''',chr(10)); {rev03a}
          Datalog('comment=''VID MIN FOR LVDSa1V IS ',VIDLVDSa1V,' ''',chr(10));
          Datalog('comment=''VID MIN FOR CML1V IS ',VIDCML1V,' ''',chr(10));

          LVDSa1V_VID := PASS;
          CML1V_VID := PASS;

          (* COMBINED VID TEST ON ALL DIFFERENTIAL INPUTS *)

          SetupSelect( VDFF_MIN_DC21, FORMAT_21,
                       TIMING_21 );

          Datalog('comment=''COMBINED VID TEST''',chr(10));
          Datalog('comment=''TDL NAME: thr''',chr(10));
{rev03a   VID_RESULT := PatternExecute( STATUS, F741576B_55917054 );}
          VID_RESULT := PatternExecute( STATUS, F741576B_55917044 );

          If (Datalog_In_Production) then
          Begin

          (* VID TEST ON LVDSa1V DIFFERENTIAL INPUTS *)

          Datalog('comment=''VID TEST ON LVDSa1V DIFF INPUTS''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_21,
                       TIMING_21 );

          DCSetLDOFF( 1.5V-VIDLVDSa1V, 0.9V+VIDLVDSa1V, CP,
                      1.2V, 1.2V, LVDSa1V_INSAZ );

          Datalog('comment=''TDL NAME: thr''',chr(10));
{rev03a   LVDSa1V_VID := PatternExecute( STATUS, F741576B_55917054 );}
          LVDSa1V_VID := PatternExecute( STATUS, F741576B_55917044 );

          (* VID TEST ON CML1V DIFFERENTIAL INPUTS *)

          Datalog('comment=''VID TEST ON CML1V DIFF INPUTS''',chr(10));

          SetupSelect( SLOW_MIN_DC, FORMAT_21,
                       TIMING_21 );

          DCSetLDOFF( VMNC1V-VIDCML1V, VMNC1V-0.4V+VIDCML1V, CP,
                      VMNC1V-0.1V, VMNC1V-0.25V, CML1V_INSAZ );

          Datalog('comment=''TDL NAME: thr''',chr(10));
{rev03a   CML1V_VID := PatternExecute( STATUS, F741576B_55917054 );}
          CML1V_VID := PatternExecute( STATUS, F741576B_55917044 );

          End;  (* If (Datalog_In_Production)  *)

          TEST_RESULT := PASS;
          IF (VID_RESULT = FAIL)  THEN TEST_RESULT := FAIL;
          IF (LVDSa1V_VID = FAIL)   THEN TEST_RESULT := FAIL;
          IF (CML1V_VID = FAIL)   THEN TEST_RESULT := FAIL;

          ResultRecord( TEST_RESULT );

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;
      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( VIHL_MAX_55917044 );

          Datalog('VCC=1.95V',chr(10));

          SET_POWER( VMX1V, 6A, {rev03h Was 2A}
                     VMX3V, 6A, {rev03h Was 2A}
                     VMX1Va, 6A, {rev03h Was 2A}
                     VMX1Vb, 6A, {rev03h Was 2A}
                     2mS );


          SetupSelect( SLOW_MAX_DC, FORMAT_2,
                       TIMING_2 );

          (* TEST CMOSa VIH *)
          Datalog('comment=''TEST CMOSa VIH''',chr(10));
          DCSetLDOFF( VIHCMOSa3V_VMAX, 0V,CP,
                      VMX3V*0.75, VMX3V*0.25, CMOSa3V_INS );
          DCSetDyn( VIHCMOSa3V_VMAX, 0V,CP,
                    VMX3V*0.75, VMX3V*0.25, VMX3V*0.65,
                    -2.0mA, 2.0mA, CMOSa3V_IOS );
          wait( 2mS );

          Datalog('comment=''TDL NAME: thr''',chr(10));
          CMOSa_RESULT := PatternExecute( STATUS, F741576B_55917044 );

          (* TEST CMOSa VIL *)
          if ( CMOSa_RESULT = PASS ) then
          begin
            Datalog('comment=''TEST CMOSa VIL''',chr(10));
            DCSetLDOFF( VMX3V, VILCMOSa3V_VMAX,CP,
                        VMX3V*0.75, VMX3V*0.25, CMOSa3V_INS );
            DCSetDyn( VMX3V, VILCMOSa3V_VMAX,CP,
                      VMX3V*0.75, VMX3V*0.25, VMX3V*0.65,
                      -2.0mA, 2.0mA, CMOSa3V_IOS );
            wait( 2mS );

            Datalog('comment=''TDL NAME: thr''',chr(10));
            CMOSa_RESULT := PatternExecute( STATUS, F741576B_55917044 );
          end;

          SetupSelect( SLOW_MAX_DC, FORMAT_2,
                       TIMING_2 );

          (* TEST TESTINA VIH *)
          Datalog('comment=''TEST TESTINA VIH''',chr(10));
          DCSetLDOFF( VIHTESTINA1V_VMAX, 0V,CP,
                      VMX1V*0.75, VMX1V*0.25, TESTINA1V_INS );
          wait( 2mS );

          Datalog('comment=''TDL NAME: thr''',chr(10));
          TESTINA_RESULT := PatternExecute( STATUS, F741576B_55917044 );

          (* TEST TESTINA VIL *)
          if ( TESTINA_RESULT = PASS ) then
          begin
            Datalog('comment=''TEST TESTINA VIL''',chr(10));
            DCSetLDOFF( VMX1V, VILTESTINA1V_VMAX,CP,
                        VMX1V*0.75, VMX1V*0.25, TESTINA1V_INS );
            wait( 2mS );

            Datalog('comment=''TDL NAME: thr''',chr(10));
            TESTINA_RESULT := PatternExecute( STATUS, F741576B_55917044 );
          end;

          SetupSelect( SLOW_MAX_DC, FORMAT_2,
                       TIMING_2 );

          TEST_RESULT := PASS;




          IF (CMOSa_RESULT = FAIL) THEN TEST_RESULT := FAIL;

          IF (TESTINA_RESULT = FAIL) THEN TEST_RESULT := FAIL;


          ResultRecord( TEST_RESULT );

          (* Set Drvup,Drvdown to VIH,VIL limits for T_voltage_search.  *)


          {DCSetPMU( 6V, -1V, 0.0V,
                    -250uA, 250uA, LVDSb1V_REFS );}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 0.0V, -1.0mA, 1.0mA, LVDS_IREFS_OUT ); {added,rev00e} 
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_IN ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT ); {added,rev00e}
  DCSetPMU( 6V, -1V, 1.5V, -10mA, 10mA, VDDTXBIAS ); {added,rev00h}

  DCSetLDOFF( VMX3V*0.7, VMX3V*0.2,CP, VMX3V*0.75, VMX3V*0.25, CMOSa3V_INS );
  DCSetDyn( VMX3V*0.7, VMX3V*0.2,CP, VMX3V*0.75, VMX3V*0.25, VMX3V*0.65,
              -2.0mA, 2.0mA, CMOSa3V_OUTS );
  DCSetDyn( VMX3V*0.7, VMX3V*0.2,CP, VMX3V*0.75, VMX3V*0.25, VMX3V*0.65,
              -2.0mA, 2.0mA, CMOSa3V_IOS );
  DCSetLDOFF( 1.365V, 0.390V,CP, 1.462V, 0.488V, TESTINA1V_INS );
  DCSetDyn( 1.365V, 0.390V,CP, 1.462V, 0.488V, 1.268V, -2.0mA, 2.0mA,
              AOUT1V_OUTS );


          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax04');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax04', F741576B_55917044,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'f',
                             1.5V, 1.0V, 10mV, 'VIHL_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( VIHL_MAX_55917044 ); {rev03a}

          Datalog('comment=''55917044 IS A VID TEST''',chr(10)); {rev03a}
          Datalog('comment=''VID MIN FOR LVDSa1V IS ',VIDLVDSa1V,' ''',chr(10));
          Datalog('comment=''VID MIN FOR CML1V IS ',VIDCML1V,' ''',chr(10));

          LVDSa1V_VID := PASS;
          CML1V_VID := PASS;

          (* COMBINED VID TEST ON ALL DIFFERENTIAL INPUTS *)

          SetupSelect( VDFF_MAX_DC21, FORMAT_21,
                       TIMING_21 );

          Datalog('comment=''COMBINED VID TEST''',chr(10));
          Datalog('comment=''TDL NAME: thr''',chr(10));
{rev03a   VID_RESULT := PatternExecute( STATUS, F741576B_55917054 );}
          VID_RESULT := PatternExecute( STATUS, F741576B_55917044 );

          If (Datalog_In_Production) then
          Begin

          (* VID TEST ON LVDSa1V DIFFERENTIAL INPUTS *)

          Datalog('comment=''VID TEST ON LVDSa1V DIFF INPUTS''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_21,
                       TIMING_21 );

          DCSetLDOFF( 1.5V-VIDLVDSa1V, 0.9V+VIDLVDSa1V, CP,
                      1.2V, 1.2V, LVDSa1V_INSAZ );

          Datalog('comment=''TDL NAME: thr''',chr(10));
{rev03a   LVDSa1V_VID := PatternExecute( STATUS, F741576B_55917054 );}
          LVDSa1V_VID := PatternExecute( STATUS, F741576B_55917044 );

          (* VID TEST ON CML1V DIFFERENTIAL INPUTS *)

          Datalog('comment=''VID TEST ON CML1V DIFF INPUTS''',chr(10));

          SetupSelect( SLOW_MAX_DC, FORMAT_21,
                       TIMING_21 );

          DCSetLDOFF( VMXC1V-VIDCML1V, VMXC1V-0.4V+VIDCML1V, CP,
                      VMXC1V-0.1V, VMXC1V-0.25V, CML1V_INSAZ );

          Datalog('comment=''TDL NAME: thr''',chr(10));
          CML1V_VID := PatternExecute( STATUS, F741576B_55917044 );
{rev03a   CML1V_VID := PatternExecute( STATUS, F741576B_55917054 );}

          End;  (* If (Datalog_In_Production)  *)

          TEST_RESULT := PASS;
          IF (VID_RESULT = FAIL)  THEN TEST_RESULT := FAIL;
          IF (LVDSa1V_VID = FAIL)   THEN TEST_RESULT := FAIL;
          IF (CML1V_VID = FAIL)   THEN TEST_RESULT := FAIL;

          ResultRecord( TEST_RESULT );

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;
      end;

      Power_down;

  end;  (* VIH_VIL_TEST *)

(***************************************************************************
 * This routine doesn't do anything but must exist for the differential
 * clock adjustment routines.  !!!!    rev05a
 ***************************************************************************)
FUNCTION MISR_Result(Patt: PATTERN): BOOLEAN; EXPORT;
BEGIN
END;
 
(***************************************************************************
 * This routine runs the Frequency Counter test on an output pin, returning
 * TRUE if the test passes. If the test fails, it searches Vref in case it is
 * not centered on the output, which could cause the TMU reading to fail (not
 * AC coupled).          rev05a
 *
 * PARAMETERS:
 *   OutPin: Pin to be measured.
 *   Patt: Pattern set to be executed for this pin.
 *   DatalogResult: Flag, if TRUE datalog the measured frequency reading.
 ***************************************************************************)
FUNCTION FreqCntr_Result(OutPin: PINLIST; Patt: PATTERN;
                         DatalogResult: BOOLEAN): BOOLEAN; EXPORT;
VAR
   Drvup, Drvdn, Vref, Vrefup, Vrefdn, Vth, Ioh, Iol, SavedValue: TREAL;
   Value, Expect : TREAL;
   CalPct : REAL;
   Status : INTEGER;
   Passed : BOOLEAN;
BEGIN
   Expect := 333MGHz;                  {expecting 333MHz reading}
   TMUSetPin(S_TMU_START, OutPin, S_POSUP);
   TMUSetPin(S_TMU_STOP, OutPin, S_POSUP);
   TMUSetDelayCycle(S_CYCLES, 65000);  {enable TMU on this cycle}
   TMUSetCounter(S_FREQ, 100uS);       {100uS frequency counting window}
   Enable(S_TMU, S_IGNORE_FUNC_FAIL, S_TMU_SHORT_DELAY);
   Discard(PatternExecute(Status, Patt));
   (* Set to pass if within 1MHz of the expected reading. *)
   Passed := TMURead(Status, Value, Expect - 1MGHz, Expect + 1MGHz);
   IF NOT(Passed) THEN                 {test if failing, try shifting Vref}
   BEGIN
      SavedValue := Value;             {save current reading}
      (* If it fails, try shifting Vref up/down in case it is not centered
       * on the output signal for the TMU measurement. *)
      Discard(DCGet(Drvup, Drvdn, CalPct, Vrefup, Vrefdn, Vth,Ioh,Iol,OutPin));
      Vref := Vrefup - 50mV;           {search -50mV->50mV from current value}
      WHILE (Vref < Vrefup + 51mV) AND NOT(Passed) DO
      BEGIN
         Vref := Vref + 20mV;
         DCSet(S_VREFUP, Vref, OutPin);
         DCSet(S_VREFDN, Vref, OutPin);
         Wait(40uS);
         Discard(PatternExecute(Status, Patt));
         Passed := TMURead(Status, Value, Expect - 1MGHz, Expect + 1MGHz);
      END;
      DCSet(S_VREFUP, Vrefup, OutPin); {restore to original value}
      DCSet(S_VREFDN, Vrefup, OutPin);
      IF NOT(Passed) THEN              {if couldn't find a passing location}
         Value := SavedValue;          {restore original reading}
   END;
   Disable(S_TMU, S_IGNORE_FUNC_FAIL, S_TMU_SHORT_DELAY);
   IF (DatalogResult) THEN
   BEGIN
      Datalog('comment=The test pin is: ', OutPin, chr(10));
      Datalog('---->> TMU Frequency Calculation is ', Value, chr(10));
   END;
   FreqCntr_Result := Passed;          {return pass/fail result}
END;
 
(***************************************************************************
 * If this is the first time called within the test program, this routine
 * measures the duty cycle error of the differential TC622 clock. It only
 * needs to be called once for this lot of devices since this is tester error
 * that pertains to all devices being tested. This test is run at MIN DC, which
 * is where we have the most fall-out. The TC622 clock is only clock signal 
 * used during the >600MHz frequency count output tests.    rev05a
 ***************************************************************************)
PROCEDURE DutyCycleMeasure;
BEGIN
   IF NOT(g_AllClocksMeasured) THEN
   BEGIN
      (* Use Min Supply levels since this is where we are most likely to fail *)
      SET_POWER(VMN1V, 6A, VMN3V, 6A, VMN1Va, 6A, VMN1Vb, 6A, 10mS);
      (* Measure TC622 uinsg frequency counter test. *)
      SetupSelect(FAST_MIN_DC, FORMAT_15, TIMING_15);
      g_ExecMethod := E_FREQ_CNTR;            {use frequency counter}
      g_FreqPin := C167_15UTP;                {measure this output pin}
      (* Go measure the duty cycle on TC622 clock and mark the clock as being
       * compensated if a reasonable compensation value can be located. *)
      IF (DutyCycleCheck(TC622N, TC622P, F741576B_55917414)) THEN
         g_AllClocksMeasured := TRUE;         {flag clocks now measured}
   END;
END;

procedure FAST_FUNCTIONAL_TEST;
(*
************************************************************************
****            FAST FUNCTIONAL                                     ****
************************************************************************
*)
  var
    TEST_RESULT    : boolean;
    STATUS         : integer;

  begin
    (* Max-out LVDS input driver slopes for best possible signal swing. *)
    MaxOutVpSlope(LVDSa1V_INSA);        {rev05a}
    MaxOutVpSlope(LVDSa1V_INSAZ);       {rev05a}
    ClockStartFreeRun(INPUT_CLOCKS);    {rev05a}
    (* Measure duty cycle error on high speed clocks so we can compenstate in
     * case any high speed functional tests fail due to clock quality. *)
    DutyCycleMeasure;                   {rev05a}
    (* Disable free-running for these slower tests that follow. *)
    ClockStopFreeRun(INPUT_CLOCKS);     {rev05a}

          Datalog('VCC=1.65V',chr(10));
{rev04e
          SET_POWER( VMN1V, 6A, {rev03h Was 2A}
                     VMN3V, 6A, {rev03h Was 2A}
                     VMN1Va, 6A, {rev03h Was 2A}
                     VMN1Vb, 6A, {rev03h Was 2A}
                     2mS );
}
{rev04e  Required for NBTI}
          SET_POWER( FVMN1V, 6A, {rev03h Was 2A}
                     VMN3V, 6A, {rev03h Was 2A}
                     FVMN1V, 6A, {rev03h Was 2A}
                     VMN1Vb, 6A, {rev03h Was 2A}
                     2mS );{}

{rev06c Removed for probe}
  CASE TIDeviceType OF
    FT_1 :
      BEGIN

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917364 ); (* RX_1_1 *)
          Datalog('comment=''TDL NAME: RX_1_1''',chr(10));


{VPLUS_FIX_TIMING}{ begin



          SetupSelect( FAST_MIN_DC, FORMAT_11,
                       TIMING_11 );
          wait( 2mS );
{VPLUS_FIX_TIMING} end}
{}        SetupSelect( FAST_MIN_DC, FORMAT_11,
{}                     TIMING_11 );
{}        wait( 2mS );

{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
 MeasureFrequency(F741576B_55917364,myCMOSa3V_OUTS,42070,100uS,83.3MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917364 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917364, F741576B_55917364,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin36');
ACMARG_CNT := 76; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := OUT2_TS11;
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := D622_INP7; {Single pin group}
ACMARG_PINS[41] := T_CLK2; {Single pin group}
ACMARG_PINS[42] := TC622P; {Single pin group}
ACMARG_PINS[43] := T_CLK6; {Single pin group}
ACMARG_PINS[44] := TC166P; {Single pin group}
ACMARG_PINS[45] := D622_INP10; {Single pin group}
ACMARG_PINS[46] := D622_INN12; {Single pin group}
ACMARG_PINS[47] := RSTN; {Single pin group}
ACMARG_PINS[48] := D622_INP14; {Single pin group}
ACMARG_PINS[49] := DATA_VALID; {Single pin group}
ACMARG_PINS[50] := IO1_TS11;
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := IN0_TS11_AC_X;
ACMARG_PINS[67] := OUT1_TS11;
ACMARG_PINS[68] := D622_INP15; {Single pin group}
ACMARG_PINS[69] := ES_SPILLP; {Single pin group}
ACMARG_PINS[70] := M_T_CLK5; {Single pin group}
ACMARG_PINS[71] := T_CLK13; {Single pin group}
ACMARG_PINS[72] := D622_INN1; {Single pin group}
ACMARG_PINS[73] := ONCKI; {Single pin group}
ACMARG_PINS[74] := D622_INP1; {Single pin group}
ACMARG_PINS[75] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[76] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin36', F741576B_55917364,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin36');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin36', F741576B_55917364,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917374 ); (* RX_622_3305 *)
          Datalog('comment=''TDL NAME: RX_622_3305''',chr(10));
{VPLUS_FIX_TIMING}{ begin


          SetupSelect( FAST_MIN_DC, FORMAT_12,
                       TIMING_12 );
          wait( 2mS );
{VPLUS_FIX_TIMING} end}
{}        SetupSelect( FAST_MIN_DC, FORMAT_12,
{}                     TIMING_12 );
{}        wait( 2mS );


          TEST_RESULT := PatternExecute( STATUS, F741576B_55917374 );

{rev00g begin Add }
   Datalog('comment=''************ MISR TEST ************''',chr(10));
   Datalog('comment=''EXPECTED: 15434227 or ''',chr(10));
   Datalog('comment=''EXPECTED: 10270594 or''',chr(10));
   Datalog('comment=''EXPECTED: 16105716 or''',chr(10));
   Datalog('comment=''EXPECTED: 8582789''',chr(10));
   V_ScanOutReverseBitOrder := TRUE;
   V_ScanOutStrobeAfterClk := FALSE;

    DummyB[1]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[2]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[1]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[3]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[2]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[4]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[3]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[5]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[4]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[6]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[7]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[8]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[9]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[10]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[5]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[11]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[6]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[12]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[7]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[13]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[8]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[14]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );

    Datalog('comment=''MISR MATCH1'' = ', MISR_DATA[1], '<',
       MISR_DATA[1]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH2'' = ', MISR_DATA[2], '<',
       MISR_DATA[2]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH3'' = ', MISR_DATA[3], '<',
       MISR_DATA[3]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH4'' = ', MISR_DATA[4], '<',
       MISR_DATA[4]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH5'' = ', MISR_DATA[5], '<',
       MISR_DATA[5]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH6'' = ', MISR_DATA[6], '<',
       MISR_DATA[6]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH7'' = ', MISR_DATA[7], '<',
       MISR_DATA[7]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH8'' = ', MISR_DATA[8], '<',
       MISR_DATA[8]:s_BINARY, '>', chr(10));

if      (((MISR_DATA[1] <> 15434227) 
    	AND (MISR_DATA[1] <> 10270594)
    	AND (MISR_DATA[1] <> 16105716)
    	AND (MISR_DATA[1] <> 8582789))
    	
OR     
	((MISR_DATA[2] <> 15434227) 
    	AND (MISR_DATA[2] <> 10270594)
    	AND (MISR_DATA[2] <> 16105716)
    	AND (MISR_DATA[2] <> 8582789))
OR     
	((MISR_DATA[3] <> 15434227) 
    	AND (MISR_DATA[3] <> 10270594)
    	AND (MISR_DATA[3] <> 16105716)
    	AND (MISR_DATA[3] <> 8582789))
OR     
	((MISR_DATA[4] <> 15434227) 
    	AND (MISR_DATA[4] <> 10270594)
    	AND (MISR_DATA[4] <> 16105716)
    	AND (MISR_DATA[4] <> 8582789)))
        then
	begin 
        TEST_RESULT := FAIL;
	end;

   	if (TEST_RESULT) then
    	begin
	if
	(((MISR_DATA[5] <> 15434227) 
    	AND (MISR_DATA[5] <> 10270594)
    	AND (MISR_DATA[5] <> 16105716)
    	AND (MISR_DATA[5] <> 8582789))
OR     
	((MISR_DATA[6] <> 15434227) 
    	AND (MISR_DATA[6] <> 10270594)
    	AND (MISR_DATA[6] <> 16105716)
    	AND (MISR_DATA[6] <> 8582789))
OR     
	((MISR_DATA[7] <> 15434227) 
    	AND (MISR_DATA[7] <> 10270594)
    	AND (MISR_DATA[7] <> 16105716)
    	AND (MISR_DATA[7] <> 8582789))
OR     
	((MISR_DATA[8] <> 15434227) 
    	AND (MISR_DATA[8] <> 10270594)
    	AND (MISR_DATA[8] <> 16105716)
    	AND (MISR_DATA[8] <> 8582789)))
	then 
	begin
        TEST_RESULT := FAIL;
     	end;
	end;
{rev00g End Add }

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917374, F741576B_55917374,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin37');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS12;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := IN0_TS12_AC_X;
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := OUT1_TS12;
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin37', F741576B_55917374,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin37');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin37', F741576B_55917374,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917384 ); (* RX_622_6610 *)
          Datalog('comment=''TDL NAME: RX_622_6610''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917384 );

{rev00g Begin Add}
   Datalog('comment=''************ MISR TEST ************''',chr(10));
   Datalog('comment=''EXPECTED: 12977594 or ''',chr(10));
   Datalog('comment=''EXPECTED: 3706162 or''',chr(10));
   Datalog('comment=''EXPECTED: 10324565 or''',chr(10));
   Datalog('comment=''EXPECTED: 6488797''',chr(10));
   V_ScanOutReverseBitOrder := TRUE;
   V_ScanOutStrobeAfterClk := FALSE;

    DummyB[1]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[2]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[1]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[3]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[2]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[4]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[3]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[5]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[4]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[6]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[7]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[8]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[9]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[10]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[5]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[11]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[6]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[12]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[7]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[13]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[8]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[14]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );

    Datalog('comment=''MISR MATCH1'' = ', MISR_DATA[1], '<',
       MISR_DATA[1]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH2'' = ', MISR_DATA[2], '<',
       MISR_DATA[2]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH3'' = ', MISR_DATA[3], '<',
       MISR_DATA[3]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH4'' = ', MISR_DATA[4], '<',
       MISR_DATA[4]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH5'' = ', MISR_DATA[5], '<',
       MISR_DATA[5]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH6'' = ', MISR_DATA[6], '<',
       MISR_DATA[6]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH7'' = ', MISR_DATA[7], '<',
       MISR_DATA[7]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH8'' = ', MISR_DATA[8], '<',
       MISR_DATA[8]:s_BINARY, '>', chr(10));

if      (((MISR_DATA[1] <> 12977594) 
    	AND (MISR_DATA[1] <> 3706162)
    	AND (MISR_DATA[1] <> 10324565)
    	AND (MISR_DATA[1] <> 6488797))
    	
OR     
	((MISR_DATA[2] <> 12977594) 
    	AND (MISR_DATA[2] <> 3706162)
    	AND (MISR_DATA[2] <> 10324565)
    	AND (MISR_DATA[2] <> 6488797))
OR     
	((MISR_DATA[3] <> 12977594) 
    	AND (MISR_DATA[3] <> 3706162)
    	AND (MISR_DATA[3] <> 10324565)
    	AND (MISR_DATA[3] <> 6488797))
OR     
	((MISR_DATA[4] <> 12977594) 
    	AND (MISR_DATA[4] <> 3706162)
    	AND (MISR_DATA[4] <> 10324565)
    	AND (MISR_DATA[4] <> 6488797)))
        then
	begin 
        TEST_RESULT := FAIL;
	end;

   	if (TEST_RESULT) then
    	begin
	if
	(((MISR_DATA[5] <> 12977594) 
    	AND (MISR_DATA[5] <> 3706162)
    	AND (MISR_DATA[5] <> 10324565)
    	AND (MISR_DATA[5] <> 6488797))
OR     
	((MISR_DATA[6] <> 12977594) 
    	AND (MISR_DATA[6] <> 3706162)
    	AND (MISR_DATA[6] <> 10324565)
    	AND (MISR_DATA[6] <> 6488797))
OR     
	((MISR_DATA[7] <> 12977594) 
    	AND (MISR_DATA[7] <> 3706162)
    	AND (MISR_DATA[7] <> 10324565)
    	AND (MISR_DATA[7] <> 6488797))
OR     
	((MISR_DATA[8] <> 12977594) 
    	AND (MISR_DATA[8] <> 3706162)
    	AND (MISR_DATA[8] <> 10324565)
    	AND (MISR_DATA[8] <> 6488797)))
	then 
	begin
        TEST_RESULT := FAIL;
     	end;
	end;
{rev00g End Add }

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917384, F741576B_55917384,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin38');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS12;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := IN0_TS12_AC_X;
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := OUT1_TS12;
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin38', F741576B_55917384,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin38');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin38', F741576B_55917384,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

       END;
  END; {case of TIDevideType}
{rev06c End of remove at probe}

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917394 ); (* TC_PLL50 *)
          Datalog('comment=''TDL NAME: TC_PLL50''',chr(10));

          SetupSelect( FAST_MIN_DC, FORMAT_13,
                       TIMING_13 );
          wait( 2mS );

{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
 MeasureFrequency(F741576B_55917394,my2LVDSa1V_OUTS,55000,100uS,25MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917394 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917394, F741576B_55917394,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin39');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS13;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := IN0_TS13_AC_X;
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := OUT1_TS13;
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin39', F741576B_55917394,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin39');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin39', F741576B_55917394,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917404 ); (* TC_PLL83 *)
          Datalog('comment=''TDL NAME: TC_PLL83''',chr(10));
{VPLUS_FIX_TIMING}{ begin


          SetupSelect( FAST_MIN_DC, FORMAT_14,
                       TIMING_14 );
          wait( 2mS );
{VPLUS_FIX_TIMING} end}
{}        SetupSelect( FAST_MIN_DC, FORMAT_14,
{}                     TIMING_14 );
{}        wait( 2mS );


{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
 MeasureFrequency(F741576B_55917404,my2LVDSa1V_OUTS,65000,100uS,82.5MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917404 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917404, F741576B_55917404,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin40');
ACMARG_CNT := 76; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := OUT2_TS14;
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := D622_INP7; {Single pin group}
ACMARG_PINS[41] := T_CLK2; {Single pin group}
ACMARG_PINS[42] := TC622P; {Single pin group}
ACMARG_PINS[43] := T_CLK6; {Single pin group}
ACMARG_PINS[44] := TC166P; {Single pin group}
ACMARG_PINS[45] := D622_INP10; {Single pin group}
ACMARG_PINS[46] := D622_INN12; {Single pin group}
ACMARG_PINS[47] := RSTN; {Single pin group}
ACMARG_PINS[48] := D622_INP14; {Single pin group}
ACMARG_PINS[49] := DATA_VALID; {Single pin group}
ACMARG_PINS[50] := IO1_TS14;
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := IN0_TS14_AC_X;
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := OUT1_TS14;
ACMARG_PINS[70] := M_T_CLK5; {Single pin group}
ACMARG_PINS[71] := T_CLK13; {Single pin group}
ACMARG_PINS[72] := D622_INN1; {Single pin group}
ACMARG_PINS[73] := ONCKI; {Single pin group}
ACMARG_PINS[74] := D622_INP1; {Single pin group}
ACMARG_PINS[75] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[76] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin40', F741576B_55917404,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin40');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin40', F741576B_55917404,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    (* Restart free-running clocks for >600MHz Frequency Counter tests. *)
    ClockStartFreeRun(INPUT_CLOCKS);     {rev05a}

{rev06c Removed for probe}
  CASE TIDeviceType OF
    FT_1 :
      BEGIN

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917414 ); (* TX_1_1 *)
          Datalog('comment=''TDL NAME: TX_1_1''',chr(10));

          SetupSelect( FAST_MIN_DC, FORMAT_15, TIMING_15 );
          (* Apply any differential clock adjustments. rev05a *)
          ApplyDiffClkAdjustment(TC622N, TC622P);
{rev01d..begin} 
          DCSetPMU(6V, -1V, 1.6V, -60mA, 60mA, LVDS_VREFS_OUT); 
          DCSetLDOFF(1.6V, 800mV,CP, 1.2V, 1.2V, INPUT_CLOCKS); {rev05a}
          (* Check 666MHz outputs - return pass/fail result. *)
          TEST_RESULT := MeasureFrequency(F741576B_55917414, my3LVDSa1V_OUTS,
                                          65000, 100uS, 666MGHZ, 1MGHz);
          { writeln('MeasFreq = ',TEST_RESULT);}
          DCSetPMU(6V, -1V, 1.2V, -60mA, 60mA, LVDS_VREFS_OUT); 

{rev01d..end}
          ResultRecord( TEST_RESULT );

{TA}      if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}        FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}        TestClose;
{TA}        TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}        if(FAIL_OPT = s_FAIL) then begin
{TA}          FAILED_FIRST := TRUE;
{TA}        end;
{TA}      end else
            TestClose;
      end;


       END;
  END; {case of pin_maps}
{rev06c End of remove at probe}


{rev05b Begin Remove 18 tdls}
    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin
        TestOpen( FAST_MIN_55917424 ); (* TX_1_10 *)
          Datalog('comment=''TDL NAME: TX_1_10''',chr(10));
{rev06c}  SetupSelect( FAST_MIN_DC, FORMAT_15, TIMING_15 );

          (* Removed separate pattern sets for each 333MHz output test - all
           * pattern sets are exactly the same. MeasureFrequency processes all
           * output pins directly.  Removed all timing/voltage margins - no
           * strobes in pattern sets.  rev05a. *)
          TEST_RESULT := MeasureFrequency(F741576B_55917414, myLVDSa1V_OUTS,
                                          65000, 100uS, 333MGHZ, 1MGHz);
          { writeln('MeasFreq = ',TEST_RESULT);}
{rev01d..end}
          ResultRecord( TEST_RESULT );

{TA}      if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}       FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}       TestClose;
{TA}       TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}       if(FAIL_OPT = s_FAIL) then begin
{TA}         FAILED_FIRST := TRUE;
{TA}       end;
{TA}     end else
           TestClose;
      end;

    (* Disable free-running for these slower tests that follow. *)
    ClockStopFreeRun(INPUT_CLOCKS);     {rev05a}
{rev05b End Remove 18 tdls}

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917604 ); (* TX_3 *)
          Datalog('comment=''TDL NAME: TX_3''',chr(10));

          SetupSelect( FAST_MIN_DC, FORMAT_16,
                       TIMING_16 );
          wait( 2mS );

{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
  MeasureFrequency(F741576B_55917604,TOUT0,5000,100uS,83MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917604 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917604, F741576B_55917604,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin60');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS16;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS16_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS16;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin60', F741576B_55917604,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin60');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin60', F741576B_55917604,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917614 ); (* Scan_AC1 *)
          Datalog('comment=''TDL NAME: Scan_AC1''',chr(10));

          SetupSelect( FAST_MIN_DC, FORMAT_17,
                       TIMING_17 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917614 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917614, F741576B_55917614,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin61');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin61', F741576B_55917614,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin61');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin61', F741576B_55917614,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917624 ); (* Scan_AC2 *)
          Datalog('comment=''TDL NAME: Scan_AC2''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917624 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917624, F741576B_55917624,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin62');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin62', F741576B_55917624,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin62');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin62', F741576B_55917624,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917634 ); (* Scan_AC3 *)
          Datalog('comment=''TDL NAME: Scan_AC3''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917634 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917634, F741576B_55917634,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin63');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin63', F741576B_55917634,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin63');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin63', F741576B_55917634,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917644 ); (* Scan_AC4 *)
          Datalog('comment=''TDL NAME: Scan_AC4''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917644 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917644, F741576B_55917644,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin64');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin64', F741576B_55917644,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin64');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin64', F741576B_55917644,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

{rev01c Begin only execute at probe }

  CASE TIDeviceType OF
    PB_2 :
      BEGIN

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917654 ); (* pat_1_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_1_tclk3_tdl''',chr(10));

          SetupSelect( FAST_MIN_DC, FORMAT_18,
                       TIMING_18 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917654 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917654, F741576B_55917654,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin65');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin65', F741576B_55917654,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin65');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin65', F741576B_55917654,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917664 ); (* pat_1_tclk5_tdl *)
          Datalog('comment=''TDL NAME: pat_1_tclk5_tdl''',chr(10));

          SetupSelect( FAST_MIN_DC, FORMAT_19,
                       TIMING_19 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917664 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917664, F741576B_55917664,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin66');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS19_AC_X;
ACMARG_PINS[68] := T_CLK13; {Single pin group}
ACMARG_PINS[69] := OUT1_TS19;
ACMARG_PINS[70] := IO2_TS19;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin66', F741576B_55917664,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin66');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin66', F741576B_55917664,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917674 ); (* pat_2_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_2_tclk3_tdl''',chr(10));

          SetupSelect( FAST_MIN_DC, FORMAT_18,
                       TIMING_18 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917674 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917674, F741576B_55917674,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin67');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin67', F741576B_55917674,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin67');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin67', F741576B_55917674,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917684 ); (* pat_3_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_3_tclk3_tdl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917684 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917684, F741576B_55917684,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin68');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin68', F741576B_55917684,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin68');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin68', F741576B_55917684,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917694 ); (* pat_4_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_4_tclk3_tdl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917694 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917694, F741576B_55917694,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin69');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin69', F741576B_55917694,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin69');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin69', F741576B_55917694,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917704 ); (* pat_5_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_5_tclk3_tdl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917704 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917704, F741576B_55917704,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin70');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin70', F741576B_55917704,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin70');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin70', F741576B_55917704,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

       END;
  END; {case of pin_maps}

{rev01c End only execute at probe }

   if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MIN_55917714 ); (* BIST *)
          Datalog('comment=''TDL NAME: BIST''',chr(10));

          SetupSelect( FAST_MIN_DC, FORMAT_20,
                       TIMING_20 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917714 );

          ResultRecord( TEST_RESULT );

          if vddshmoo then {char}
            ShmooAll('FAST_MIN_DC', ' ',
                     F741576B_55917714, F741576B_55917714,
                     VMINF, VMAXF, VSTEPF, 0, 0, 0,
                     'n', 'c', 'vddshmoo');

          if (AC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmin71');
ACMARG_CNT := 77; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := IN0_TS20_AC_X;
ACMARG_PINS[14] := OUT1_TS20;
ACMARG_PINS[15] := T_CLK10; {Single pin group}
ACMARG_PINS[16] := D622_INN2; {Single pin group}
ACMARG_PINS[17] := DATA_V_INP; {Single pin group}
ACMARG_PINS[18] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[19] := D622_INP2; {Single pin group}
ACMARG_PINS[20] := D622_INN6; {Single pin group}
ACMARG_PINS[21] := C155_BPLNP; {Single pin group}
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := OUT2_TS20;
ACMARG_PINS[36] := M_T_CLK3; {Single pin group}
ACMARG_PINS[37] := T_CLK11; {Single pin group}
ACMARG_PINS[38] := C155_CSDNP; {Single pin group}
ACMARG_PINS[39] := D622_INN3; {Single pin group}
ACMARG_PINS[40] := D622_INP3; {Single pin group}
ACMARG_PINS[41] := D622_INN7; {Single pin group}
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := OUT3_TS20;
ACMARG_PINS[53] := T_CLK12; {Single pin group}
ACMARG_PINS[54] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[55] := D622_INN0; {Single pin group}
ACMARG_PINS[56] := D622_INP0; {Single pin group}
ACMARG_PINS[57] := D622_INN4; {Single pin group}
ACMARG_PINS[58] := D622_INP4; {Single pin group}
ACMARG_PINS[59] := D622_INN8; {Single pin group}
ACMARG_PINS[60] := D622_INP8; {Single pin group}
ACMARG_PINS[61] := T_CLK3; {Single pin group}
ACMARG_PINS[62] := C666_EXTN; {Single pin group}
ACMARG_PINS[63] := T_CLK7; {Single pin group}
ACMARG_PINS[64] := D622_INP11; {Single pin group}
ACMARG_PINS[65] := D622_INN13; {Single pin group}
ACMARG_PINS[66] := CICLK; {Single pin group}
ACMARG_PINS[67] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[68] := IO1_TS20;
ACMARG_PINS[69] := D622_INP15; {Single pin group}
ACMARG_PINS[70] := ES_SPILLP; {Single pin group}
ACMARG_PINS[71] := M_T_CLK5; {Single pin group}
ACMARG_PINS[72] := T_CLK13; {Single pin group}
ACMARG_PINS[73] := D622_INN1; {Single pin group}
ACMARG_PINS[74] := ONCKI; {Single pin group}
ACMARG_PINS[75] := D622_INP1; {Single pin group}
ACMARG_PINS[76] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[77] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmin71', F741576B_55917714,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MIN');
end; {margins}

          if (DC_marg_min AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmin71');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmin71', F741576B_55917714,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MIN');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if Datalog_In_Production then
    begin

          Datalog('VCC=1.8V',chr(10));

          SET_POWER( VNM1V, 6A, {rev03h Was 2A}
                     VNM3V, 6A, {rev03h Was 2A}
                     VNM1Va, 6A, {rev03h Was 2A}
                     VNM1Vb, 6A, {rev03h Was 2A}
                     2mS );

{rev06c Removed for probe}
  CASE TIDeviceType OF
    FT_1 :
      BEGIN

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917364 ); (* RX_1_1 *)
          Datalog('comment=''TDL NAME: RX_1_1''',chr(10));


{VPLUS_FIX_TIMING}{ begin

          SetupSelect( FAST_NOM_DC, FORMAT_11,
                       TIMING_11 );
          wait( 2mS );
{VPLUS_FIX_TIMING} end}
{}        SetupSelect( FAST_NOM_DC, FORMAT_11,
{}                     TIMING_11 );
{}        wait( 2mS );


{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
 MeasureFrequency(F741576B_55917364,myCMOSa3V_OUTS,42070,100uS,83.3MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917364 );}
{rev01d..end}


          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom36');
ACMARG_CNT := 76; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := OUT2_TS11;
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := D622_INP7; {Single pin group}
ACMARG_PINS[41] := T_CLK2; {Single pin group}
ACMARG_PINS[42] := TC622P; {Single pin group}
ACMARG_PINS[43] := T_CLK6; {Single pin group}
ACMARG_PINS[44] := TC166P; {Single pin group}
ACMARG_PINS[45] := D622_INP10; {Single pin group}
ACMARG_PINS[46] := D622_INN12; {Single pin group}
ACMARG_PINS[47] := RSTN; {Single pin group}
ACMARG_PINS[48] := D622_INP14; {Single pin group}
ACMARG_PINS[49] := DATA_VALID; {Single pin group}
ACMARG_PINS[50] := IO1_TS11;
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := IN0_TS11_AC_X;
ACMARG_PINS[67] := OUT1_TS11;
ACMARG_PINS[68] := D622_INP15; {Single pin group}
ACMARG_PINS[69] := ES_SPILLP; {Single pin group}
ACMARG_PINS[70] := M_T_CLK5; {Single pin group}
ACMARG_PINS[71] := T_CLK13; {Single pin group}
ACMARG_PINS[72] := D622_INN1; {Single pin group}
ACMARG_PINS[73] := ONCKI; {Single pin group}
ACMARG_PINS[74] := D622_INP1; {Single pin group}
ACMARG_PINS[75] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[76] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom36', F741576B_55917364,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom36');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom36', F741576B_55917364,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917374 ); (* RX_622_3305 *)
          Datalog('comment=''TDL NAME: RX_622_3305''',chr(10));
{VPLUS_FIX_TIMING}{ begin


          SetupSelect( FAST_NOM_DC, FORMAT_12,
                       TIMING_12 );
          wait( 2mS );
{VPLUS_FIX_TIMING} end}
{}        SetupSelect( FAST_NOM_DC, FORMAT_12,
{}                     TIMING_12 );
{}        wait( 2mS );


          TEST_RESULT := PatternExecute( STATUS, F741576B_55917374 );

{rev00g begin Add }
   Datalog('comment=''************ MISR TEST ************''',chr(10));
   Datalog('comment=''EXPECTED: 15434227 or ''',chr(10));
   Datalog('comment=''EXPECTED: 10270594 or''',chr(10));
   Datalog('comment=''EXPECTED: 16105716 or''',chr(10));
   Datalog('comment=''EXPECTED: 8582789''',chr(10));
   V_ScanOutReverseBitOrder := TRUE;
   V_ScanOutStrobeAfterClk := FALSE;

    DummyB[1]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[2]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[1]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[3]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[2]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[4]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[3]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[5]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[4]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[6]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[7]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[8]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[9]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[10]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[5]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[11]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[6]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[12]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[7]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[13]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[8]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[14]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );

    Datalog('comment=''MISR MATCH1'' = ', MISR_DATA[1], '<',
       MISR_DATA[1]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH2'' = ', MISR_DATA[2], '<',
       MISR_DATA[2]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH3'' = ', MISR_DATA[3], '<',
       MISR_DATA[3]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH4'' = ', MISR_DATA[4], '<',
       MISR_DATA[4]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH5'' = ', MISR_DATA[5], '<',
       MISR_DATA[5]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH6'' = ', MISR_DATA[6], '<',
       MISR_DATA[6]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH7'' = ', MISR_DATA[7], '<',
       MISR_DATA[7]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH8'' = ', MISR_DATA[8], '<',
       MISR_DATA[8]:s_BINARY, '>', chr(10));

if      (((MISR_DATA[1] <> 15434227) 
    	AND (MISR_DATA[1] <> 10270594)
    	AND (MISR_DATA[1] <> 16105716)
    	AND (MISR_DATA[1] <> 8582789))
    	
OR     
	((MISR_DATA[2] <> 15434227) 
    	AND (MISR_DATA[2] <> 10270594)
    	AND (MISR_DATA[2] <> 16105716)
    	AND (MISR_DATA[2] <> 8582789))
OR     
	((MISR_DATA[3] <> 15434227) 
    	AND (MISR_DATA[3] <> 10270594)
    	AND (MISR_DATA[3] <> 16105716)
    	AND (MISR_DATA[3] <> 8582789))
OR     
	((MISR_DATA[4] <> 15434227) 
    	AND (MISR_DATA[4] <> 10270594)
    	AND (MISR_DATA[4] <> 16105716)
    	AND (MISR_DATA[4] <> 8582789)))
        then
	begin 
        TEST_RESULT := FAIL;
	end;

   	if (TEST_RESULT) then
    	begin
	if
	(((MISR_DATA[5] <> 15434227) 
    	AND (MISR_DATA[5] <> 10270594)
    	AND (MISR_DATA[5] <> 16105716)
    	AND (MISR_DATA[5] <> 8582789))
OR     
	((MISR_DATA[6] <> 15434227) 
    	AND (MISR_DATA[6] <> 10270594)
    	AND (MISR_DATA[6] <> 16105716)
    	AND (MISR_DATA[6] <> 8582789))
OR     
	((MISR_DATA[7] <> 15434227) 
    	AND (MISR_DATA[7] <> 10270594)
    	AND (MISR_DATA[7] <> 16105716)
    	AND (MISR_DATA[7] <> 8582789))
OR     
	((MISR_DATA[8] <> 15434227) 
    	AND (MISR_DATA[8] <> 10270594)
    	AND (MISR_DATA[8] <> 16105716)
    	AND (MISR_DATA[8] <> 8582789)))
	then 
	begin
        TEST_RESULT := FAIL;
     	end;
	end;
{rev00g End Add }

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom37');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS12;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := IN0_TS12_AC_X;
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := OUT1_TS12;
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom37', F741576B_55917374,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom37');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom37', F741576B_55917374,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917384 ); (* RX_622_6610 *)
          Datalog('comment=''TDL NAME: RX_622_6610''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917384 );

{rev00g Begin Add}
   Datalog('comment=''************ MISR TEST ************''',chr(10));
   Datalog('comment=''EXPECTED: 12977594 or ''',chr(10));
   Datalog('comment=''EXPECTED: 3706162 or''',chr(10));
   Datalog('comment=''EXPECTED: 10324565 or''',chr(10));
   Datalog('comment=''EXPECTED: 6488797''',chr(10));
   V_ScanOutReverseBitOrder := TRUE;
   V_ScanOutStrobeAfterClk := FALSE;

    DummyB[1]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[2]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[1]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[3]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[2]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[4]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[3]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[5]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[4]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[6]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[7]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[8]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[9]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[10]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[5]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[11]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[6]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[12]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[7]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[13]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[8]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[14]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );

    Datalog('comment=''MISR MATCH1'' = ', MISR_DATA[1], '<',
       MISR_DATA[1]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH2'' = ', MISR_DATA[2], '<',
       MISR_DATA[2]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH3'' = ', MISR_DATA[3], '<',
       MISR_DATA[3]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH4'' = ', MISR_DATA[4], '<',
       MISR_DATA[4]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH5'' = ', MISR_DATA[5], '<',
       MISR_DATA[5]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH6'' = ', MISR_DATA[6], '<',
       MISR_DATA[6]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH7'' = ', MISR_DATA[7], '<',
       MISR_DATA[7]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH8'' = ', MISR_DATA[8], '<',
       MISR_DATA[8]:s_BINARY, '>', chr(10));

if      (((MISR_DATA[1] <> 12977594) 
    	AND (MISR_DATA[1] <> 3706162)
    	AND (MISR_DATA[1] <> 10324565)
    	AND (MISR_DATA[1] <> 6488797))
    	
OR     
	((MISR_DATA[2] <> 12977594) 
    	AND (MISR_DATA[2] <> 3706162)
    	AND (MISR_DATA[2] <> 10324565)
    	AND (MISR_DATA[2] <> 6488797))
OR     
	((MISR_DATA[3] <> 12977594) 
    	AND (MISR_DATA[3] <> 3706162)
    	AND (MISR_DATA[3] <> 10324565)
    	AND (MISR_DATA[3] <> 6488797))
OR     
	((MISR_DATA[4] <> 12977594) 
    	AND (MISR_DATA[4] <> 3706162)
    	AND (MISR_DATA[4] <> 10324565)
    	AND (MISR_DATA[4] <> 6488797)))
        then
	begin 
        TEST_RESULT := FAIL;
	end;

   	if (TEST_RESULT) then
    	begin
	if
	(((MISR_DATA[5] <> 12977594) 
    	AND (MISR_DATA[5] <> 3706162)
    	AND (MISR_DATA[5] <> 10324565)
    	AND (MISR_DATA[5] <> 6488797))
OR     
	((MISR_DATA[6] <> 12977594) 
    	AND (MISR_DATA[6] <> 3706162)
    	AND (MISR_DATA[6] <> 10324565)
    	AND (MISR_DATA[6] <> 6488797))
OR     
	((MISR_DATA[7] <> 12977594) 
    	AND (MISR_DATA[7] <> 3706162)
    	AND (MISR_DATA[7] <> 10324565)
    	AND (MISR_DATA[7] <> 6488797))
OR     
	((MISR_DATA[8] <> 12977594) 
    	AND (MISR_DATA[8] <> 3706162)
    	AND (MISR_DATA[8] <> 10324565)
    	AND (MISR_DATA[8] <> 6488797)))
	then 
	begin
        TEST_RESULT := FAIL;
     	end;
	end;
{rev00g End Add }

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom38');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS12;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := IN0_TS12_AC_X;
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := OUT1_TS12;
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom38', F741576B_55917384,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom38');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom38', F741576B_55917384,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

       END;
  END; {case of pin_maps}
{rev06c End of remove at probe}


    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917394 ); (* TC_PLL50 *)
          Datalog('comment=''TDL NAME: TC_PLL50''',chr(10));

          SetupSelect( FAST_NOM_DC, FORMAT_13,
                       TIMING_13 );
          wait( 2mS );

{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
 MeasureFrequency(F741576B_55917394,my2LVDSa1V_OUTS,55000,100uS,25MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917394 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom39');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS13;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := IN0_TS13_AC_X;
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := OUT1_TS13;
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom39', F741576B_55917394,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom39');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom39', F741576B_55917394,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917404 ); (* TC_PLL83 *)
          Datalog('comment=''TDL NAME: TC_PLL83''',chr(10));
{VPLUS_FIX_TIMING}{ begin


          SetupSelect( FAST_NOM_DC, FORMAT_14,
                       TIMING_14 );
          wait( 2mS );
{VPLUS_FIX_TIMING} end}
{}        SetupSelect( FAST_NOM_DC, FORMAT_14,
{}                     TIMING_14 );
{}        wait( 2mS );


{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
 MeasureFrequency(F741576B_55917404,my2LVDSa1V_OUTS,65000,100uS,82.5MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917404 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom40');
ACMARG_CNT := 76; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := OUT2_TS14;
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := D622_INP7; {Single pin group}
ACMARG_PINS[41] := T_CLK2; {Single pin group}
ACMARG_PINS[42] := TC622P; {Single pin group}
ACMARG_PINS[43] := T_CLK6; {Single pin group}
ACMARG_PINS[44] := TC166P; {Single pin group}
ACMARG_PINS[45] := D622_INP10; {Single pin group}
ACMARG_PINS[46] := D622_INN12; {Single pin group}
ACMARG_PINS[47] := RSTN; {Single pin group}
ACMARG_PINS[48] := D622_INP14; {Single pin group}
ACMARG_PINS[49] := DATA_VALID; {Single pin group}
ACMARG_PINS[50] := IO1_TS14;
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := IN0_TS14_AC_X;
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := OUT1_TS14;
ACMARG_PINS[70] := M_T_CLK5; {Single pin group}
ACMARG_PINS[71] := T_CLK13; {Single pin group}
ACMARG_PINS[72] := D622_INN1; {Single pin group}
ACMARG_PINS[73] := ONCKI; {Single pin group}
ACMARG_PINS[74] := D622_INP1; {Single pin group}
ACMARG_PINS[75] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[76] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom40', F741576B_55917404,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom40');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom40', F741576B_55917404,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    (* Restart free-running clocks for >600MHz Frequency Counter tests. *)
    ClockStartFreeRun(INPUT_CLOCKS);     {rev05a}

{rev06c Removed for probe}
  CASE TIDeviceType OF
    FT_1 :
      BEGIN

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin
        TestOpen( FAST_NOM_55917414 ); (* TX_1_1 *)
          Datalog('comment=''TDL NAME: TX_1_1''',chr(10));

          SetupSelect( FAST_NOM_DC, FORMAT_15, TIMING_15 );
          (* Apply any differential clock adjustments. rev05a *)
          ApplyDiffClkAdjustment(TC622N, TC622P);
{rev01d..begin} 
          DCSetLDOFF(1.6V, 800mV,CP, 1.2V, 1.2V, INPUT_CLOCKS); {rev05a}
          wait(1mS );  
          (* Check 666MHz outputs - return pass/fail result. *)
          TEST_RESULT := MeasureFrequency(F741576B_55917414, my3LVDSa1V_OUTS,
                                          65000, 100uS, 666MGHZ, 1MGHz);
          { writeln('MeasFreq = ',TEST_RESULT);}
{rev01d..end}
          ResultRecord( TEST_RESULT );

{TA}      if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}        FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}        TestClose;
{TA}        TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}        if(FAIL_OPT = s_FAIL) then begin
{TA}          FAILED_FIRST := TRUE;
{TA}        end;
{TA}      end else
            TestClose;
      end;

       END;
  END; {case of pin_maps}
{rev06c End of remove at probe}


{rev05b Begin Remove 18 tdls}
    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin
        TestOpen( FAST_NOM_55917424 ); (* TX_1_10 *)
          Datalog('comment=''TDL NAME: TX_1_10''',chr(10));
{rev06c}  SetupSelect( FAST_NOM_DC, FORMAT_15, TIMING_15 );
{rev01d..begin} 
          (* Removed separate pattern sets for each 333MHz output test - all
           * pattern sets are exactly the same. MeasureFrequency processes all
           * output pins directly.  Removed all timing/voltage margins - no
           * strobes in pattern sets.  rev05a. *)
          TEST_RESULT := MeasureFrequency(F741576B_55917414, myLVDSa1V_OUTS,
                                          65000, 100uS, 333MGHZ, 1MGHz);
           { writeln('MeasFreq = ',TEST_RESULT);}
{rev01d..end}
          ResultRecord( TEST_RESULT );

{TA}      if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}        FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}        TestClose;
{TA}        TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}        if(FAIL_OPT = s_FAIL) then begin
{TA}          FAILED_FIRST := TRUE;
{TA}        end;
{TA}      end else
            TestClose;
      end;

    (* Disable free-running for these slower tests that follow. *)
    ClockStopFreeRun(INPUT_CLOCKS);     {rev05a}
{rev05b End Remove 18 tdls}

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917604 ); (* TX_3 *)
          Datalog('comment=''TDL NAME: TX_3''',chr(10));

          SetupSelect( FAST_NOM_DC, FORMAT_16,
                       TIMING_16 );
          wait( 2mS );

{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
  MeasureFrequency(F741576B_55917604,TOUT0,5000,100uS,83MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917604 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom60');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS16;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS16_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS16;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom60', F741576B_55917604,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom60');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom60', F741576B_55917604,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917614 ); (* Scan_AC1 *)
          Datalog('comment=''TDL NAME: Scan_AC1''',chr(10));

          SetupSelect( FAST_NOM_DC, FORMAT_17,
                       TIMING_17 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917614 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom61');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom61', F741576B_55917614,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom61');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom61', F741576B_55917614,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917624 ); (* Scan_AC2 *)
          Datalog('comment=''TDL NAME: Scan_AC2''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917624 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom62');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom62', F741576B_55917624,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom62');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom62', F741576B_55917624,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917634 ); (* Scan_AC3 *)
          Datalog('comment=''TDL NAME: Scan_AC3''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917634 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom63');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom63', F741576B_55917634,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom63');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom63', F741576B_55917634,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917644 ); (* Scan_AC4 *)
          Datalog('comment=''TDL NAME: Scan_AC4''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917644 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom64');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom64', F741576B_55917644,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom64');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom64', F741576B_55917644,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

{rev01c Begin only execute at probe }

  CASE TIDeviceType OF
    PB_2 :
      BEGIN

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917654 ); (* pat_1_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_1_tclk3_tdl''',chr(10));

          SetupSelect( FAST_NOM_DC, FORMAT_18,
                       TIMING_18 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917654 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom65');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom65', F741576B_55917654,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom65');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom65', F741576B_55917654,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917664 ); (* pat_1_tclk5_tdl *)
          Datalog('comment=''TDL NAME: pat_1_tclk5_tdl''',chr(10));

          SetupSelect( FAST_NOM_DC, FORMAT_19,
                       TIMING_19 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917664 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom66');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS19_AC_X;
ACMARG_PINS[68] := T_CLK13; {Single pin group}
ACMARG_PINS[69] := OUT1_TS19;
ACMARG_PINS[70] := IO2_TS19;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom66', F741576B_55917664,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom66');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom66', F741576B_55917664,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917674 ); (* pat_2_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_2_tclk3_tdl''',chr(10));

          SetupSelect( FAST_NOM_DC, FORMAT_18,
                       TIMING_18 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917674 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom67');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom67', F741576B_55917674,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom67');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom67', F741576B_55917674,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917684 ); (* pat_3_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_3_tclk3_tdl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917684 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom68');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom68', F741576B_55917684,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom68');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom68', F741576B_55917684,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917694 ); (* pat_4_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_4_tclk3_tdl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917694 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom69');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom69', F741576B_55917694,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom69');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom69', F741576B_55917694,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917704 ); (* pat_5_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_5_tclk3_tdl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917704 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom70');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom70', F741576B_55917704,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom70');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom70', F741576B_55917704,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

      END;
  END; {case of pin_maps}

{rev01c End only execute at probe }

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_NOM_55917714 ); (* BIST *)
          Datalog('comment=''TDL NAME: BIST''',chr(10));

          SetupSelect( FAST_NOM_DC, FORMAT_20,
                       TIMING_20 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917714 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargnom71');
ACMARG_CNT := 77; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := IN0_TS20_AC_X;
ACMARG_PINS[14] := OUT1_TS20;
ACMARG_PINS[15] := T_CLK10; {Single pin group}
ACMARG_PINS[16] := D622_INN2; {Single pin group}
ACMARG_PINS[17] := DATA_V_INP; {Single pin group}
ACMARG_PINS[18] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[19] := D622_INP2; {Single pin group}
ACMARG_PINS[20] := D622_INN6; {Single pin group}
ACMARG_PINS[21] := C155_BPLNP; {Single pin group}
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := OUT2_TS20;
ACMARG_PINS[36] := M_T_CLK3; {Single pin group}
ACMARG_PINS[37] := T_CLK11; {Single pin group}
ACMARG_PINS[38] := C155_CSDNP; {Single pin group}
ACMARG_PINS[39] := D622_INN3; {Single pin group}
ACMARG_PINS[40] := D622_INP3; {Single pin group}
ACMARG_PINS[41] := D622_INN7; {Single pin group}
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := OUT3_TS20;
ACMARG_PINS[53] := T_CLK12; {Single pin group}
ACMARG_PINS[54] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[55] := D622_INN0; {Single pin group}
ACMARG_PINS[56] := D622_INP0; {Single pin group}
ACMARG_PINS[57] := D622_INN4; {Single pin group}
ACMARG_PINS[58] := D622_INP4; {Single pin group}
ACMARG_PINS[59] := D622_INN8; {Single pin group}
ACMARG_PINS[60] := D622_INP8; {Single pin group}
ACMARG_PINS[61] := T_CLK3; {Single pin group}
ACMARG_PINS[62] := C666_EXTN; {Single pin group}
ACMARG_PINS[63] := T_CLK7; {Single pin group}
ACMARG_PINS[64] := D622_INP11; {Single pin group}
ACMARG_PINS[65] := D622_INN13; {Single pin group}
ACMARG_PINS[66] := CICLK; {Single pin group}
ACMARG_PINS[67] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[68] := IO1_TS20;
ACMARG_PINS[69] := D622_INP15; {Single pin group}
ACMARG_PINS[70] := ES_SPILLP; {Single pin group}
ACMARG_PINS[71] := M_T_CLK5; {Single pin group}
ACMARG_PINS[72] := T_CLK13; {Single pin group}
ACMARG_PINS[73] := D622_INN1; {Single pin group}
ACMARG_PINS[74] := ONCKI; {Single pin group}
ACMARG_PINS[75] := D622_INP1; {Single pin group}
ACMARG_PINS[76] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[77] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargnom71', F741576B_55917714,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_NOM');
end; {margins}

          if (DC_marg_nom AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargnom71');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargnom71', F741576B_55917714,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_NOM');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    end;  (* Datalog_In_Production *)


    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917364 ); (* RX_1_1 *)
          Datalog('comment=''TDL NAME: RX_1_1''',chr(10));

          Datalog('VCC=1.95V',chr(10));

          SET_POWER( VMX1V, 6A, {rev03h Was 2A}
                     VMX3V, 6A, {rev03h Was 2A}
                     VMX1Va, 6A, {rev03h Was 2A}
                     VMX1Vb, 6A, {rev03h Was 2A}
                     2mS );
{VPLUS_FIX_TIMING}{ begin



          SetupSelect( FAST_MAX_DC, FORMAT_11,
                       TIMING_11 );
          wait( 2mS );
{VPLUS_FIX_TIMING} end}
{}        SetupSelect( FAST_MAX_DC, FORMAT_11,
{}                     TIMING_11 );
{}        wait( 2mS );


{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
 MeasureFrequency(F741576B_55917364,myCMOSa3V_OUTS,42070,100uS,83.3MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917364 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax36');
ACMARG_CNT := 76; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := OUT2_TS11;
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := D622_INP7; {Single pin group}
ACMARG_PINS[41] := T_CLK2; {Single pin group}
ACMARG_PINS[42] := TC622P; {Single pin group}
ACMARG_PINS[43] := T_CLK6; {Single pin group}
ACMARG_PINS[44] := TC166P; {Single pin group}
ACMARG_PINS[45] := D622_INP10; {Single pin group}
ACMARG_PINS[46] := D622_INN12; {Single pin group}
ACMARG_PINS[47] := RSTN; {Single pin group}
ACMARG_PINS[48] := D622_INP14; {Single pin group}
ACMARG_PINS[49] := DATA_VALID; {Single pin group}
ACMARG_PINS[50] := IO1_TS11;
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := IN0_TS11_AC_X;
ACMARG_PINS[67] := OUT1_TS11;
ACMARG_PINS[68] := D622_INP15; {Single pin group}
ACMARG_PINS[69] := ES_SPILLP; {Single pin group}
ACMARG_PINS[70] := M_T_CLK5; {Single pin group}
ACMARG_PINS[71] := T_CLK13; {Single pin group}
ACMARG_PINS[72] := D622_INN1; {Single pin group}
ACMARG_PINS[73] := ONCKI; {Single pin group}
ACMARG_PINS[74] := D622_INP1; {Single pin group}
ACMARG_PINS[75] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[76] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax36', F741576B_55917364,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax36');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax36', F741576B_55917364,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917374 ); (* RX_622_3305 *)
          Datalog('comment=''TDL NAME: RX_622_3305''',chr(10));
{VPLUS_FIX_TIMING}{ begin


          SetupSelect( FAST_MAX_DC, FORMAT_12,
                       TIMING_12 );
          wait( 2mS );
{VPLUS_FIX_TIMING} end}
{}        SetupSelect( FAST_MAX_DC, FORMAT_12,
{}                     TIMING_12 );
{}        wait( 2mS );


          TEST_RESULT := PatternExecute( STATUS, F741576B_55917374 );

{rev00g begin Add }
   Datalog('comment=''************ MISR TEST ************''',chr(10));
   Datalog('comment=''EXPECTED: 15434227 or ''',chr(10));
   Datalog('comment=''EXPECTED: 10270594 or''',chr(10));
   Datalog('comment=''EXPECTED: 16105716 or''',chr(10));
   Datalog('comment=''EXPECTED: 8582789''',chr(10));
   V_ScanOutReverseBitOrder := TRUE;
   V_ScanOutStrobeAfterClk := FALSE;

    DummyB[1]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[2]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[1]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[3]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[2]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[4]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[3]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[5]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[4]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[6]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[7]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[8]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[9]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[10]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[5]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[11]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[6]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[12]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[7]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[13]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[8]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[14]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );

    Datalog('comment=''MISR MATCH1'' = ', MISR_DATA[1], '<',
       MISR_DATA[1]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH2'' = ', MISR_DATA[2], '<',
       MISR_DATA[2]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH3'' = ', MISR_DATA[3], '<',
       MISR_DATA[3]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH4'' = ', MISR_DATA[4], '<',
       MISR_DATA[4]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH5'' = ', MISR_DATA[5], '<',
       MISR_DATA[5]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH6'' = ', MISR_DATA[6], '<',
       MISR_DATA[6]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH7'' = ', MISR_DATA[7], '<',
       MISR_DATA[7]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH8'' = ', MISR_DATA[8], '<',
       MISR_DATA[8]:s_BINARY, '>', chr(10));

if      (((MISR_DATA[1] <> 15434227) 
    	AND (MISR_DATA[1] <> 10270594)
    	AND (MISR_DATA[1] <> 16105716)
    	AND (MISR_DATA[1] <> 8582789))
    	
OR     
	((MISR_DATA[2] <> 15434227) 
    	AND (MISR_DATA[2] <> 10270594)
    	AND (MISR_DATA[2] <> 16105716)
    	AND (MISR_DATA[2] <> 8582789))
OR     
	((MISR_DATA[3] <> 15434227) 
    	AND (MISR_DATA[3] <> 10270594)
    	AND (MISR_DATA[3] <> 16105716)
    	AND (MISR_DATA[3] <> 8582789))
OR     
	((MISR_DATA[4] <> 15434227) 
    	AND (MISR_DATA[4] <> 10270594)
    	AND (MISR_DATA[4] <> 16105716)
    	AND (MISR_DATA[4] <> 8582789)))
        then
	begin 
        TEST_RESULT := FAIL;
	end;

   	if (TEST_RESULT) then
    	begin
	if
	(((MISR_DATA[5] <> 15434227) 
    	AND (MISR_DATA[5] <> 10270594)
    	AND (MISR_DATA[5] <> 16105716)
    	AND (MISR_DATA[5] <> 8582789))
OR     
	((MISR_DATA[6] <> 15434227) 
    	AND (MISR_DATA[6] <> 10270594)
    	AND (MISR_DATA[6] <> 16105716)
    	AND (MISR_DATA[6] <> 8582789))
OR     
	((MISR_DATA[7] <> 15434227) 
    	AND (MISR_DATA[7] <> 10270594)
    	AND (MISR_DATA[7] <> 16105716)
    	AND (MISR_DATA[7] <> 8582789))
OR     
	((MISR_DATA[8] <> 15434227) 
    	AND (MISR_DATA[8] <> 10270594)
    	AND (MISR_DATA[8] <> 16105716)
    	AND (MISR_DATA[8] <> 8582789)))
	then 
	begin
        TEST_RESULT := FAIL;
     	end;
	end;
{rev00g End Add }

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax37');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS12;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := IN0_TS12_AC_X;
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := OUT1_TS12;
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax37', F741576B_55917374,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax37');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax37', F741576B_55917374,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917384 ); (* RX_622_6610 *)
          Datalog('comment=''TDL NAME: RX_622_6610''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917384 );

{rev00g Begin Add}
   Datalog('comment=''************ MISR TEST ************''',chr(10));
   Datalog('comment=''EXPECTED: 12977594 or ''',chr(10));
   Datalog('comment=''EXPECTED: 3706162 or''',chr(10));
   Datalog('comment=''EXPECTED: 10324565 or''',chr(10));
   Datalog('comment=''EXPECTED: 6488797''',chr(10));
   V_ScanOutReverseBitOrder := TRUE;
   V_ScanOutStrobeAfterClk := FALSE;

    DummyB[1]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[2]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[1]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[3]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[2]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[4]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[3]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[5]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[4]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[6]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[7]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[8]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    DummyB[9]         := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[10]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[5]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[11]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[6]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[12]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[7]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[13]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );
    MISR_DATA[8]  := ScanOutDataBits( TOUT1, T_CLK0, 24 );
    DummyB[14]         := ScanOutDataBits( TOUT1, T_CLK0, 2 );

    Datalog('comment=''MISR MATCH1'' = ', MISR_DATA[1], '<',
       MISR_DATA[1]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH2'' = ', MISR_DATA[2], '<',
       MISR_DATA[2]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH3'' = ', MISR_DATA[3], '<',
       MISR_DATA[3]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH4'' = ', MISR_DATA[4], '<',
       MISR_DATA[4]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH5'' = ', MISR_DATA[5], '<',
       MISR_DATA[5]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH6'' = ', MISR_DATA[6], '<',
       MISR_DATA[6]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH7'' = ', MISR_DATA[7], '<',
       MISR_DATA[7]:s_BINARY, '>', chr(10));
    Datalog('comment=''MISR MATCH8'' = ', MISR_DATA[8], '<',
       MISR_DATA[8]:s_BINARY, '>', chr(10));

if      (((MISR_DATA[1] <> 12977594) 
    	AND (MISR_DATA[1] <> 3706162)
    	AND (MISR_DATA[1] <> 10324565)
    	AND (MISR_DATA[1] <> 6488797))
    	
OR     
	((MISR_DATA[2] <> 12977594) 
    	AND (MISR_DATA[2] <> 3706162)
    	AND (MISR_DATA[2] <> 10324565)
    	AND (MISR_DATA[2] <> 6488797))
OR     
	((MISR_DATA[3] <> 12977594) 
    	AND (MISR_DATA[3] <> 3706162)
    	AND (MISR_DATA[3] <> 10324565)
    	AND (MISR_DATA[3] <> 6488797))
OR     
	((MISR_DATA[4] <> 12977594) 
    	AND (MISR_DATA[4] <> 3706162)
    	AND (MISR_DATA[4] <> 10324565)
    	AND (MISR_DATA[4] <> 6488797)))
        then
	begin 
        TEST_RESULT := FAIL;
	end;

   	if (TEST_RESULT) then
    	begin
	if
	(((MISR_DATA[5] <> 12977594) 
    	AND (MISR_DATA[5] <> 3706162)
    	AND (MISR_DATA[5] <> 10324565)
    	AND (MISR_DATA[5] <> 6488797))
OR     
	((MISR_DATA[6] <> 12977594) 
    	AND (MISR_DATA[6] <> 3706162)
    	AND (MISR_DATA[6] <> 10324565)
    	AND (MISR_DATA[6] <> 6488797))
OR     
	((MISR_DATA[7] <> 12977594) 
    	AND (MISR_DATA[7] <> 3706162)
    	AND (MISR_DATA[7] <> 10324565)
    	AND (MISR_DATA[7] <> 6488797))
OR     
	((MISR_DATA[8] <> 12977594) 
    	AND (MISR_DATA[8] <> 3706162)
    	AND (MISR_DATA[8] <> 10324565)
    	AND (MISR_DATA[8] <> 6488797)))
	then 
	begin
        TEST_RESULT := FAIL;
     	end;
	end;
{rev00g End Add }

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax38');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS12;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := IN0_TS12_AC_X;
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := OUT1_TS12;
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax38', F741576B_55917384,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax38');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax38', F741576B_55917384,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917394 ); (* TC_PLL50 *)
          Datalog('comment=''TDL NAME: TC_PLL50''',chr(10));

          SetupSelect( FAST_MAX_DC, FORMAT_13,
                       TIMING_13 );
          wait( 2mS );

{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
 MeasureFrequency(F741576B_55917394,my2LVDSa1V_OUTS,55000,100uS,25MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917394 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax39');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS13;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := IN0_TS13_AC_X;
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := ES_SPILLP; {Single pin group}
ACMARG_PINS[68] := OUT1_TS13;
ACMARG_PINS[69] := M_T_CLK5; {Single pin group}
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax39', F741576B_55917394,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax39');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax39', F741576B_55917394,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917404 ); (* TC_PLL83 *)
          Datalog('comment=''TDL NAME: TC_PLL83''',chr(10));
{VPLUS_FIX_TIMING}{ begin


          SetupSelect( FAST_MAX_DC, FORMAT_14,
                       TIMING_14 );
          wait( 2mS );
{VPLUS_FIX_TIMING} end}
{}        SetupSelect( FAST_MAX_DC, FORMAT_14,
{}                     TIMING_14 );
{}        wait( 2mS );


{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
 MeasureFrequency(F741576B_55917404,my2LVDSa1V_OUTS,65000,100uS,82.5MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917404 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax40');
ACMARG_CNT := 76; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := OUT2_TS14;
ACMARG_PINS[14] := T_CLK10; {Single pin group}
ACMARG_PINS[15] := D622_INN2; {Single pin group}
ACMARG_PINS[16] := DATA_V_INP; {Single pin group}
ACMARG_PINS[17] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[18] := D622_INP2; {Single pin group}
ACMARG_PINS[19] := D622_INN6; {Single pin group}
ACMARG_PINS[20] := C155_BPLNP; {Single pin group}
ACMARG_PINS[21] := D622_INP6; {Single pin group}
ACMARG_PINS[22] := T_CLK1; {Single pin group}
ACMARG_PINS[23] := C155_CSD_I; {Single pin group}
ACMARG_PINS[24] := T_CLK5; {Single pin group}
ACMARG_PINS[25] := DATVAL_INP; {Single pin group}
ACMARG_PINS[26] := TCK; {Single pin group}
ACMARG_PINS[27] := D622_INN11; {Single pin group}
ACMARG_PINS[28] := C666_EXTP; {Single pin group}
ACMARG_PINS[29] := T_CLK9; {Single pin group}
ACMARG_PINS[30] := D622_INP13; {Single pin group}
ACMARG_PINS[31] := D622_INN15; {Single pin group}
ACMARG_PINS[32] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[33] := ES_SPILLN; {Single pin group}
ACMARG_PINS[34] := M_T_CLK3; {Single pin group}
ACMARG_PINS[35] := T_CLK11; {Single pin group}
ACMARG_PINS[36] := C155_CSDNP; {Single pin group}
ACMARG_PINS[37] := D622_INN3; {Single pin group}
ACMARG_PINS[38] := D622_INP3; {Single pin group}
ACMARG_PINS[39] := D622_INN7; {Single pin group}
ACMARG_PINS[40] := D622_INP7; {Single pin group}
ACMARG_PINS[41] := T_CLK2; {Single pin group}
ACMARG_PINS[42] := TC622P; {Single pin group}
ACMARG_PINS[43] := T_CLK6; {Single pin group}
ACMARG_PINS[44] := TC166P; {Single pin group}
ACMARG_PINS[45] := D622_INP10; {Single pin group}
ACMARG_PINS[46] := D622_INN12; {Single pin group}
ACMARG_PINS[47] := RSTN; {Single pin group}
ACMARG_PINS[48] := D622_INP14; {Single pin group}
ACMARG_PINS[49] := DATA_VALID; {Single pin group}
ACMARG_PINS[50] := IO1_TS14;
ACMARG_PINS[51] := T_CLK12; {Single pin group}
ACMARG_PINS[52] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[53] := D622_INN0; {Single pin group}
ACMARG_PINS[54] := D622_INP0; {Single pin group}
ACMARG_PINS[55] := D622_INN4; {Single pin group}
ACMARG_PINS[56] := D622_INP4; {Single pin group}
ACMARG_PINS[57] := D622_INN8; {Single pin group}
ACMARG_PINS[58] := D622_INP8; {Single pin group}
ACMARG_PINS[59] := T_CLK3; {Single pin group}
ACMARG_PINS[60] := C666_EXTN; {Single pin group}
ACMARG_PINS[61] := T_CLK7; {Single pin group}
ACMARG_PINS[62] := D622_INP11; {Single pin group}
ACMARG_PINS[63] := D622_INN13; {Single pin group}
ACMARG_PINS[64] := CICLK; {Single pin group}
ACMARG_PINS[65] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[66] := D622_INP15; {Single pin group}
ACMARG_PINS[67] := IN0_TS14_AC_X;
ACMARG_PINS[68] := ES_SPILLP; {Single pin group}
ACMARG_PINS[69] := OUT1_TS14;
ACMARG_PINS[70] := M_T_CLK5; {Single pin group}
ACMARG_PINS[71] := T_CLK13; {Single pin group}
ACMARG_PINS[72] := D622_INN1; {Single pin group}
ACMARG_PINS[73] := ONCKI; {Single pin group}
ACMARG_PINS[74] := D622_INP1; {Single pin group}
ACMARG_PINS[75] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[76] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax40', F741576B_55917404,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax40');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax40', F741576B_55917404,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    (* Restart free-running clocks for >600MHz Frequency Counter tests. *)
    ClockStartFreeRun(INPUT_CLOCKS);     {rev05a}

{rev06c Removed for probe}
  CASE TIDeviceType OF
    FT_1 :
      BEGIN
 
    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin
        TestOpen( FAST_MAX_55917414 ); (* TX_1_1 *)
          Datalog('comment=''TDL NAME: TX_1_1''',chr(10));

          SetupSelect( FAST_MAX_DC, FORMAT_15, TIMING_15 );
          (* Apply any differential clock adjustments. rev05a *)
          ApplyDiffClkAdjustment(TC622N, TC622P);

{rev01d..begin} 
          DCSetLDOFF(1.6V, 800mV,CP, 1.2V, 1.2V, INPUT_CLOCKS); {rev05a}
          wait(1mS);  
          (* Check 666MHz outputs - return pass/fail result. *)
          TEST_RESULT := MeasureFrequency(F741576B_55917414, my3LVDSa1V_OUTS,
                                          65000, 100uS, 666MGHZ, 1MGHz);
          { writeln('MeasFreq = ',TEST_RESULT);}
{rev01d..end}
          ResultRecord( TEST_RESULT );

{TA}      if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}        FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}        TestClose;
{TA}        TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}        if(FAIL_OPT = s_FAIL) then begin
{TA}          FAILED_FIRST := TRUE;
{TA}        end;
{TA}      end else
            TestClose;
      end;

       END;
  END; {case of TIDeviceType}
{rev06c End of remove at probe}


{rev05b Begin Remove 18 tdls}
    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin
        TestOpen( FAST_MAX_55917424 ); (* TX_1_10 *)
          Datalog('comment=''TDL NAME: TX_1_10''',chr(10));
{rev06c}  SetupSelect( FAST_MAX_DC, FORMAT_15, TIMING_15 );
{rev01d..begin} 
          (* Removed separate pattern sets for each 333MHz output test - all
           * pattern sets are exactly the same. MeasureFrequency processes all
           * output pins directly.  Removed all timing/voltage margins - no
           * strobes in pattern sets.  rev05a. *)
          TEST_RESULT := MeasureFrequency(F741576B_55917414, myLVDSa1V_OUTS,
                                          65000, 100uS, 333MGHZ, 1MGHz);
          { writeln('MeasFreq = ',TEST_RESULT);}
{rev01d..end}
          ResultRecord( TEST_RESULT );

{TA}      if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}        FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}        TestClose;
{TA}        TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}        if(FAIL_OPT = s_FAIL) then begin
{TA}          FAILED_FIRST := TRUE;
{TA}        end;
{TA}      end else
            TestClose;
      end;

    (* Disable free-running for these slower tests that follow. *)
    ClockStopFreeRun(INPUT_CLOCKS);     {rev05a}
{rev05b End Remove 18 tdls}

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917604 ); (* TX_3 *)
          Datalog('comment=''TDL NAME: TX_3''',chr(10));

          SetupSelect( FAST_MAX_DC, FORMAT_16,
                       TIMING_16 );
          wait( 2mS );

{rev01d..begin} 
          wait(10mS);  {100mS wait is too big, changed to 10mS - rev05a}

     TEST_RESULT := 
  MeasureFrequency(F741576B_55917604,TOUT0,5000,100uS,83MGHZ,1MGHz);
    { writeln('MeasFreq = ',TEST_RESULT);}
{          TEST_RESULT := PatternExecute( STATUS, F741576B_55917604 );}
{rev01d..end}

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax60');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS16;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS16_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS16;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax60', F741576B_55917604,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax60');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax60', F741576B_55917604,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917614 ); (* Scan_AC1 *)
          Datalog('comment=''TDL NAME: Scan_AC1''',chr(10));

          SetupSelect( FAST_MAX_DC, FORMAT_17,
                       TIMING_17 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917614 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax61');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax61', F741576B_55917614,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax61');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax61', F741576B_55917614,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917624 ); (* Scan_AC2 *)
          Datalog('comment=''TDL NAME: Scan_AC2''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917624 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax62');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax62', F741576B_55917624,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax62');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax62', F741576B_55917624,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917634 ); (* Scan_AC3 *)
          Datalog('comment=''TDL NAME: Scan_AC3''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917634 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax63');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax63', F741576B_55917634,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax63');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax63', F741576B_55917634,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917644 ); (* Scan_AC4 *)
          Datalog('comment=''TDL NAME: Scan_AC4''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917644 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax64');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := IO1_TS17;
ACMARG_PINS[50] := T_CLK12; {Single pin group}
ACMARG_PINS[51] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[52] := D622_INN0; {Single pin group}
ACMARG_PINS[53] := D622_INP0; {Single pin group}
ACMARG_PINS[54] := D622_INN4; {Single pin group}
ACMARG_PINS[55] := D622_INP4; {Single pin group}
ACMARG_PINS[56] := D622_INN8; {Single pin group}
ACMARG_PINS[57] := D622_INP8; {Single pin group}
ACMARG_PINS[58] := T_CLK3; {Single pin group}
ACMARG_PINS[59] := C666_EXTN; {Single pin group}
ACMARG_PINS[60] := T_CLK7; {Single pin group}
ACMARG_PINS[61] := D622_INP11; {Single pin group}
ACMARG_PINS[62] := D622_INN13; {Single pin group}
ACMARG_PINS[63] := CICLK; {Single pin group}
ACMARG_PINS[64] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[65] := D622_INP15; {Single pin group}
ACMARG_PINS[66] := ES_SPILLP; {Single pin group}
ACMARG_PINS[67] := IN0_TS17_AC_X;
ACMARG_PINS[68] := M_T_CLK5; {Single pin group}
ACMARG_PINS[69] := OUT1_TS17;
ACMARG_PINS[70] := T_CLK13; {Single pin group}
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax64', F741576B_55917644,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax64');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax64', F741576B_55917644,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

{rev01c Begin only execute at probe }

  CASE TIDeviceType OF
    PB_2 :
      BEGIN

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917654 ); (* pat_1_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_1_tclk3_tdl''',chr(10));

          SetupSelect( FAST_MAX_DC, FORMAT_18,
                       TIMING_18 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917654 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax65');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax65', F741576B_55917654,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax65');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax65', F741576B_55917654,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917664 ); (* pat_1_tclk5_tdl *)
          Datalog('comment=''TDL NAME: pat_1_tclk5_tdl''',chr(10));

          SetupSelect( FAST_MAX_DC, FORMAT_19,
                       TIMING_19 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917664 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax66');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS19_AC_X;
ACMARG_PINS[68] := T_CLK13; {Single pin group}
ACMARG_PINS[69] := OUT1_TS19;
ACMARG_PINS[70] := IO2_TS19;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax66', F741576B_55917664,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax66');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax66', F741576B_55917664,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917674 ); (* pat_2_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_2_tclk3_tdl''',chr(10));

          SetupSelect( FAST_MAX_DC, FORMAT_18,
                       TIMING_18 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917674 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax67');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax67', F741576B_55917674,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax67');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax67', F741576B_55917674,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917684 ); (* pat_3_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_3_tclk3_tdl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917684 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax68');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax68', F741576B_55917684,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax68');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax68', F741576B_55917684,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917694 ); (* pat_4_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_4_tclk3_tdl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917694 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax69');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax69', F741576B_55917694,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax69');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax69', F741576B_55917694,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917704 ); (* pat_5_tclk3_tdl *)
          Datalog('comment=''TDL NAME: pat_5_tclk3_tdl''',chr(10));

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917704 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax70');
ACMARG_CNT := 75; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := T_CLK10; {Single pin group}
ACMARG_PINS[14] := D622_INN2; {Single pin group}
ACMARG_PINS[15] := DATA_V_INP; {Single pin group}
ACMARG_PINS[16] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[17] := D622_INP2; {Single pin group}
ACMARG_PINS[18] := D622_INN6; {Single pin group}
ACMARG_PINS[19] := C155_BPLNP; {Single pin group}
ACMARG_PINS[20] := D622_INP6; {Single pin group}
ACMARG_PINS[21] := T_CLK1; {Single pin group}
ACMARG_PINS[22] := C155_CSD_I; {Single pin group}
ACMARG_PINS[23] := T_CLK5; {Single pin group}
ACMARG_PINS[24] := DATVAL_INP; {Single pin group}
ACMARG_PINS[25] := TCK; {Single pin group}
ACMARG_PINS[26] := D622_INN11; {Single pin group}
ACMARG_PINS[27] := C666_EXTP; {Single pin group}
ACMARG_PINS[28] := T_CLK9; {Single pin group}
ACMARG_PINS[29] := D622_INP13; {Single pin group}
ACMARG_PINS[30] := D622_INN15; {Single pin group}
ACMARG_PINS[31] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[32] := ES_SPILLN; {Single pin group}
ACMARG_PINS[33] := M_T_CLK3; {Single pin group}
ACMARG_PINS[34] := T_CLK11; {Single pin group}
ACMARG_PINS[35] := C155_CSDNP; {Single pin group}
ACMARG_PINS[36] := D622_INN3; {Single pin group}
ACMARG_PINS[37] := D622_INP3; {Single pin group}
ACMARG_PINS[38] := D622_INN7; {Single pin group}
ACMARG_PINS[39] := D622_INP7; {Single pin group}
ACMARG_PINS[40] := T_CLK2; {Single pin group}
ACMARG_PINS[41] := TC622P; {Single pin group}
ACMARG_PINS[42] := T_CLK6; {Single pin group}
ACMARG_PINS[43] := TC166P; {Single pin group}
ACMARG_PINS[44] := D622_INP10; {Single pin group}
ACMARG_PINS[45] := D622_INN12; {Single pin group}
ACMARG_PINS[46] := RSTN; {Single pin group}
ACMARG_PINS[47] := D622_INP14; {Single pin group}
ACMARG_PINS[48] := DATA_VALID; {Single pin group}
ACMARG_PINS[49] := T_CLK12; {Single pin group}
ACMARG_PINS[50] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[51] := D622_INN0; {Single pin group}
ACMARG_PINS[52] := D622_INP0; {Single pin group}
ACMARG_PINS[53] := D622_INN4; {Single pin group}
ACMARG_PINS[54] := D622_INP4; {Single pin group}
ACMARG_PINS[55] := D622_INN8; {Single pin group}
ACMARG_PINS[56] := D622_INP8; {Single pin group}
ACMARG_PINS[57] := T_CLK3; {Single pin group}
ACMARG_PINS[58] := C666_EXTN; {Single pin group}
ACMARG_PINS[59] := T_CLK7; {Single pin group}
ACMARG_PINS[60] := D622_INP11; {Single pin group}
ACMARG_PINS[61] := D622_INN13; {Single pin group}
ACMARG_PINS[62] := CICLK; {Single pin group}
ACMARG_PINS[63] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[64] := D622_INP15; {Single pin group}
ACMARG_PINS[65] := ES_SPILLP; {Single pin group}
ACMARG_PINS[66] := M_T_CLK5; {Single pin group}
ACMARG_PINS[67] := IN0_TS18_AC_X;
ACMARG_PINS[68] := OUT1_TS18;
ACMARG_PINS[69] := T_CLK13; {Single pin group}
ACMARG_PINS[70] := IO2_TS18;
ACMARG_PINS[71] := D622_INN1; {Single pin group}
ACMARG_PINS[72] := ONCKI; {Single pin group}
ACMARG_PINS[73] := D622_INP1; {Single pin group}
ACMARG_PINS[74] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[75] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax70', F741576B_55917704,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax70');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax70', F741576B_55917704,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

      END;
  END; {case of pin_maps}

{rev01c End only execute at probe }

    if (( V_DeviceStatus = PASS)OR(TEST_ALL){TA} ) then
      begin

        TestOpen( FAST_MAX_55917714 ); (* BIST *)
          Datalog('comment=''TDL NAME: BIST''',chr(10));

          SetupSelect( FAST_MAX_DC, FORMAT_20,
                       TIMING_20 );
          wait( 2mS );

          TEST_RESULT := PatternExecute( STATUS, F741576B_55917714 );

          ResultRecord( TEST_RESULT );

          if (AC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('tmargmax71');
ACMARG_CNT := 77; {margins}
ACMARG_PINS[1] := D622_INP5; {Single pin group}
ACMARG_PINS[2] := D622_INN9; {Single pin group}
ACMARG_PINS[3] := T_CLK0; {Single pin group}
ACMARG_PINS[4] := D622_INP9; {Single pin group}
ACMARG_PINS[5] := TC622N; {Single pin group}
ACMARG_PINS[6] := T_CLK4; {Single pin group}
ACMARG_PINS[7] := TC166N; {Single pin group}
ACMARG_PINS[8] := D622_INN10; {Single pin group}
ACMARG_PINS[9] := C155_BPL_I; {Single pin group}
ACMARG_PINS[10] := T_CLK8; {Single pin group}
ACMARG_PINS[11] := D622_INP12; {Single pin group}
ACMARG_PINS[12] := D622_INN14; {Single pin group}
ACMARG_PINS[13] := IN0_TS20_AC_X;
ACMARG_PINS[14] := OUT1_TS20;
ACMARG_PINS[15] := T_CLK10; {Single pin group}
ACMARG_PINS[16] := D622_INN2; {Single pin group}
ACMARG_PINS[17] := DATA_V_INP; {Single pin group}
ACMARG_PINS[18] := CTLID_RSTN; {Single pin group}
ACMARG_PINS[19] := D622_INP2; {Single pin group}
ACMARG_PINS[20] := D622_INN6; {Single pin group}
ACMARG_PINS[21] := C155_BPLNP; {Single pin group}
ACMARG_PINS[22] := D622_INP6; {Single pin group}
ACMARG_PINS[23] := T_CLK1; {Single pin group}
ACMARG_PINS[24] := C155_CSD_I; {Single pin group}
ACMARG_PINS[25] := T_CLK5; {Single pin group}
ACMARG_PINS[26] := DATVAL_INP; {Single pin group}
ACMARG_PINS[27] := TCK; {Single pin group}
ACMARG_PINS[28] := D622_INN11; {Single pin group}
ACMARG_PINS[29] := C666_EXTP; {Single pin group}
ACMARG_PINS[30] := T_CLK9; {Single pin group}
ACMARG_PINS[31] := D622_INP13; {Single pin group}
ACMARG_PINS[32] := D622_INN15; {Single pin group}
ACMARG_PINS[33] := C6XX_EXTP; {Single pin group}
ACMARG_PINS[34] := ES_SPILLN; {Single pin group}
ACMARG_PINS[35] := OUT2_TS20;
ACMARG_PINS[36] := M_T_CLK3; {Single pin group}
ACMARG_PINS[37] := T_CLK11; {Single pin group}
ACMARG_PINS[38] := C155_CSDNP; {Single pin group}
ACMARG_PINS[39] := D622_INN3; {Single pin group}
ACMARG_PINS[40] := D622_INP3; {Single pin group}
ACMARG_PINS[41] := D622_INN7; {Single pin group}
ACMARG_PINS[42] := D622_INP7; {Single pin group}
ACMARG_PINS[43] := T_CLK2; {Single pin group}
ACMARG_PINS[44] := TC622P; {Single pin group}
ACMARG_PINS[45] := T_CLK6; {Single pin group}
ACMARG_PINS[46] := TC166P; {Single pin group}
ACMARG_PINS[47] := D622_INP10; {Single pin group}
ACMARG_PINS[48] := D622_INN12; {Single pin group}
ACMARG_PINS[49] := RSTN; {Single pin group}
ACMARG_PINS[50] := D622_INP14; {Single pin group}
ACMARG_PINS[51] := DATA_VALID; {Single pin group}
ACMARG_PINS[52] := OUT3_TS20;
ACMARG_PINS[53] := T_CLK12; {Single pin group}
ACMARG_PINS[54] := DATVAL_ES_; {Single pin group}
ACMARG_PINS[55] := D622_INN0; {Single pin group}
ACMARG_PINS[56] := D622_INP0; {Single pin group}
ACMARG_PINS[57] := D622_INN4; {Single pin group}
ACMARG_PINS[58] := D622_INP4; {Single pin group}
ACMARG_PINS[59] := D622_INN8; {Single pin group}
ACMARG_PINS[60] := D622_INP8; {Single pin group}
ACMARG_PINS[61] := T_CLK3; {Single pin group}
ACMARG_PINS[62] := C666_EXTN; {Single pin group}
ACMARG_PINS[63] := T_CLK7; {Single pin group}
ACMARG_PINS[64] := D622_INP11; {Single pin group}
ACMARG_PINS[65] := D622_INN13; {Single pin group}
ACMARG_PINS[66] := CICLK; {Single pin group}
ACMARG_PINS[67] := C6XX_EXTN; {Single pin group}
ACMARG_PINS[68] := IO1_TS20;
ACMARG_PINS[69] := D622_INP15; {Single pin group}
ACMARG_PINS[70] := ES_SPILLP; {Single pin group}
ACMARG_PINS[71] := M_T_CLK5; {Single pin group}
ACMARG_PINS[72] := T_CLK13; {Single pin group}
ACMARG_PINS[73] := D622_INN1; {Single pin group}
ACMARG_PINS[74] := ONCKI; {Single pin group}
ACMARG_PINS[75] := D622_INP1; {Single pin group}
ACMARG_PINS[76] := RSTZ_HSI; {Single pin group}
ACMARG_PINS[77] := D622_INN5; {Single pin group}
(* End Margin Additions *)
            T_timing_search('tmargmax71', F741576B_55917714,
                            NORMAL, ACMARG_CNT, ACMARG_PINS, 31, 'b', 'l',
                            t_range, 5ns, 500ps, 'FAST_MAX');
end; {margins}

          if (DC_marg_max AND DatalogGetCurrentTest) then
(* Begin Margin Additions *)
begin
writeln('vmargmax71');
DCMARG_CNT := 86; {margins}
DCMARG_PINS[1] := THSI_OUTA; {Single pin group}
DCMARG_PINS[2] := C155_BPLNP; {Single pin group}
DCMARG_PINS[3] := C155_BPL_I; {Single pin group}
DCMARG_PINS[4] := C155_CSDNP; {Single pin group}
DCMARG_PINS[5] := C155_CSD_I; {Single pin group}
DCMARG_PINS[6] := C666_EXTN; {Single pin group}
DCMARG_PINS[7] := C666_EXTP; {Single pin group}
DCMARG_PINS[8] := C6XX_EXTN; {Single pin group}
DCMARG_PINS[9] := C6XX_EXTP; {Single pin group}
DCMARG_PINS[10] := CICLK; {Single pin group}
DCMARG_PINS[11] := C1G35_INP; {Single pin group}
DCMARG_PINS[12] := C1G35_INN; {Single pin group}
DCMARG_PINS[13] := CML1V_OUTSY;
DCMARG_PINS[14] := CML1V_OUTSYZ;
DCMARG_PINS[15] := CMOSa3V_INS_DC_X;
DCMARG_PINS[16] := CMOSa3V_IOS;
DCMARG_PINS[17] := CMOSa3V_OUTS;
DCMARG_PINS[18] := CTLID_RSTN; {Single pin group}
DCMARG_PINS[19] := D622_INN0; {Single pin group}
DCMARG_PINS[20] := D622_INN10; {Single pin group}
DCMARG_PINS[21] := D622_INN11; {Single pin group}
DCMARG_PINS[22] := D622_INN12; {Single pin group}
DCMARG_PINS[23] := D622_INN13; {Single pin group}
DCMARG_PINS[24] := D622_INN14; {Single pin group}
DCMARG_PINS[25] := D622_INN15; {Single pin group}
DCMARG_PINS[26] := D622_INN1; {Single pin group}
DCMARG_PINS[27] := D622_INN2; {Single pin group}
DCMARG_PINS[28] := D622_INN3; {Single pin group}
DCMARG_PINS[29] := D622_INN4; {Single pin group}
DCMARG_PINS[30] := D622_INN5; {Single pin group}
DCMARG_PINS[31] := D622_INN6; {Single pin group}
DCMARG_PINS[32] := D622_INN7; {Single pin group}
DCMARG_PINS[33] := D622_INN8; {Single pin group}
DCMARG_PINS[34] := D622_INN9; {Single pin group}
DCMARG_PINS[35] := D622_INP0; {Single pin group}
DCMARG_PINS[36] := D622_INP10; {Single pin group}
DCMARG_PINS[37] := D622_INP11; {Single pin group}
DCMARG_PINS[38] := D622_INP12; {Single pin group}
DCMARG_PINS[39] := D622_INP13; {Single pin group}
DCMARG_PINS[40] := D622_INP14; {Single pin group}
DCMARG_PINS[41] := D622_INP15; {Single pin group}
DCMARG_PINS[42] := D622_INP1; {Single pin group}
DCMARG_PINS[43] := D622_INP2; {Single pin group}
DCMARG_PINS[44] := D622_INP3; {Single pin group}
DCMARG_PINS[45] := D622_INP4; {Single pin group}
DCMARG_PINS[46] := D622_INP5; {Single pin group}
DCMARG_PINS[47] := D622_INP6; {Single pin group}
DCMARG_PINS[48] := D622_INP7; {Single pin group}
DCMARG_PINS[49] := D622_INP8; {Single pin group}
DCMARG_PINS[50] := D622_INP9; {Single pin group}
DCMARG_PINS[51] := DATA_VALID; {Single pin group}
DCMARG_PINS[52] := DATA_V_INP; {Single pin group}
DCMARG_PINS[53] := DATVAL_ES_; {Single pin group}
DCMARG_PINS[54] := DATVAL_INP; {Single pin group}
DCMARG_PINS[55] := ES_SPILLN; {Single pin group}
DCMARG_PINS[56] := ES_SPILLP; {Single pin group}
DCMARG_PINS[57] := LVDSa1V_INSA_DC_X;
DCMARG_PINS[58] := LVDSa1V_INSAZ_DC_X;
DCMARG_PINS[59] := LVDSa1V_OUTSY;
DCMARG_PINS[60] := LVDSa1V_OUTSYZ;
{ DCMARG_PINS[61] := LVDSb1V_REFS; rev04b}
DCMARG_PINS[62] := M_T_CLK3; {Single pin group}
DCMARG_PINS[63] := M_T_CLK5; {Single pin group}
DCMARG_PINS[64] := ONCKI; {Single pin group}
DCMARG_PINS[65] := RSTN; {Single pin group}
DCMARG_PINS[66] := RSTZ_HSI; {Single pin group}
DCMARG_PINS[67] := TC166N; {Single pin group}
DCMARG_PINS[68] := TC166P; {Single pin group}
DCMARG_PINS[69] := TC622N; {Single pin group}
DCMARG_PINS[70] := TC622P; {Single pin group}
DCMARG_PINS[71] := TCK; {Single pin group}
DCMARG_PINS[72] := THSI_INA; {Single pin group}
DCMARG_PINS[73] := T_CLK0; {Single pin group}
DCMARG_PINS[74] := T_CLK10; {Single pin group}
DCMARG_PINS[75] := T_CLK11; {Single pin group}
DCMARG_PINS[76] := T_CLK12; {Single pin group}
DCMARG_PINS[77] := T_CLK13; {Single pin group}
DCMARG_PINS[78] := T_CLK1; {Single pin group}
DCMARG_PINS[79] := T_CLK2; {Single pin group}
DCMARG_PINS[80] := T_CLK3; {Single pin group}
DCMARG_PINS[81] := T_CLK4; {Single pin group}
DCMARG_PINS[82] := T_CLK5; {Single pin group}
DCMARG_PINS[83] := T_CLK6; {Single pin group}
DCMARG_PINS[84] := T_CLK7; {Single pin group}
DCMARG_PINS[85] := T_CLK8; {Single pin group}
DCMARG_PINS[86] := T_CLK9; {Single pin group}
(* End Margin Additions *)
            T_voltage_search('vmargmax71', F741576B_55917714,
                             DCMARG_CNT, DCMARG_PINS, 7, 'b', 'l',
                             v_range, 1.0V, 10mV, 'FAST_MAX');
end; {margins}

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
        TestClose;

      end;

      Power_down;

      (* Restore driver slopes and turn off free-running clocks. *)
      DriverSlopeRestore;                 {rev05a}
      ClockStopFreeRun(INPUT_CLOCKS);     {rev05a}

  end;  (* FAST_FUNCTIONAL_TEST *)


procedure IIH_IIL_TEST;

(*
********************************************************************
****            IIH/IIL TEST  (INPUTS)                          ****
********************************************************************
*)
  var
    TEST_RESULT    : boolean;
    RESULT         : boolean;
    STATUS         : integer;

  begin

    TestOpen( IIH_IIL );

      Datalog('VCC=1.95V',chr(10));


      if ( V_DatalogEnabled ) then
        begin
          DatalogResetPinList( ALL_PINS_PLUS );
          DatalogSetPinList( ALL_PINS );
        end;

      SET_POWER( VTMX1V, 2A,
                 VTMX3V, 2A,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                 2mS );

      (* LINE CHARGE *)
      SetupSelect( LC_ODD_EVEN, FORMAT_1, TIMING_1 );
      wait( 1mS );

      (* TEST IIH ON ODD INPUTS, IIL ON EVEN INPUTS *)
      SetupSelect( II_ODD_EVEN, FORMAT_1, TIMING_1 );
      wait( 10mS );

      TEST_RESULT := PMUConvertPF;

      (* LINE CHARGE *)
      SetupSelect( LC_EVEN_ODD, FORMAT_1, TIMING_1 );
      wait( 1mS );

      (* TEST IIH ON EVEN INPUTS, IIL ON ODD INPUTS *)
      SetupSelect( II_EVEN_ODD, FORMAT_1, TIMING_1 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

{rev00k  Remove the old test
      (* TEST IIH ON 'A' DIFF INPUTS *)
      SetupSelect( II_DIFFA_HI, FORMAT_DIFFAHI, TIMING_1 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      (* TEST IIH ON 'B' DIFF INPUTS *)
      SetupSelect( II_DIFFB_HI, FORMAT_DIFFBHI, TIMING_1 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      (* TEST IIL ON 'A' DIFF INPUTS *)
      SetupSelect( II_DIFFA_LO, FORMAT_DIFFALO, TIMING_1 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      (* TEST IIL ON 'B' DIFF INPUTS *)
      SetupSelect( II_DIFFB_LO, FORMAT_DIFFBLO, TIMING_1 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

rev00k}
{rev00k Begin add of new test}

      (* TEST IIH ON 'A' DIFF INPUTS, IIL ON 'AZ' *)
      SetupSelect( II_DIFFA_HI_AZ_LOW, FORMAT_DIFFAHI, TIMING_1 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      (* TEST IIH ON 'AZ' DIFF INPUTS, IIL ON 'A' *)
      SetupSelect( II_DIFFAZ_HI_A_LOW, FORMAT_DIFFBHI, TIMING_1 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;
{rev00k End add of new test}


      SetupSelect( LEAKAGE_PIN_DC, FORMAT_2, TIMING_2 );

      PMExSetDelay( s_PFLAGS, 1 );

      (* hzv *)
      Datalog('comment=''TDL NAME: hzv  PM: 1',
              '  VECTOR: 2''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917024 );
(*
      MEASURE ENABLED PULLUPS AT 0V
*)
      SetupSelect( IILP_ON_PM1_DC,FORMAT_2,TIMING_2 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      SetupSelect( LEAKAGE_PIN_DC, FORMAT_2, TIMING_2 );

      PMExSetDelay( s_PFLAGS, 2 );

      (* hzv *)
      Datalog('comment=''TDL NAME: hzv  PM: 2',
              '  VECTOR: 15''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917024 );
(*
      MEASURE ENABLED PULLUPS AT 0V
*)
      SetupSelect( IILP_ON_PM2_DC,FORMAT_2,TIMING_2 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      SetupSelect( LEAKAGE_PIN_DC, FORMAT_2, TIMING_2 );

      PMExSetDelay( s_PFLAGS, 1 );

      (* tgl *)
      Datalog('comment=''TDL NAME: tgl  PM: 6',
              '  VECTOR: 520''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917034 );
(*
      MEASURE ENABLED PULLUPS AT 0V
*)
      SetupSelect( IILP_ON_PM6_DC,FORMAT_2,TIMING_2 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      SetupSelect( LEAKAGE_PIN_DC, FORMAT_2, TIMING_2 );

      PMExSetDelay( s_PFLAGS, 2 );

      (* tgl *)
      Datalog('comment=''TDL NAME: tgl  PM: 7',
              '  VECTOR: 524''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917034 );
(*
      MEASURE ENABLED PULLUPS AT 0V
*)
      SetupSelect( IILP_ON_PM7_DC,FORMAT_2,TIMING_2 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      ResultRecord( TEST_RESULT );

      Power_down;

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end;  (* IIH_IIL_TEST *)

procedure VOUT_TEST;
(*
********************************************************************
****            VOUT TESTS                                      ****
********************************************************************
*)
  var
    TEST_RESULT    : boolean;
    TEMP_RESULT    : boolean;
    RESULT         : boolean;
    STATUS         : integer;
    TREAD          : treal;

  begin

    TestOpen( VOUT );

      TEST_RESULT := PASS;

      Datalog('VCC=1.650V',chr(10));
      Datalog('BIDI=O',chr(10));

      if ( V_DatalogEnabled ) then
        DatalogResetPinList( ALL_PINS_PLUS );
      if ( V_DatalogEnabled ) then
        begin
{rev00f Not needed
          DatalogSetPinList( VOHLVDSa1V1_PM8 );
          DatalogSetPinList( VOHLVDSa1V1_PM9 );
          DatalogSetPinList( VOLLVDSa1V1_PM8 );
          DatalogSetPinList( VOLLVDSa1V1_PM9 );}
          DatalogSetPinList( VOHCMOSa3V1_PM3 );
          DatalogSetPinList( VOHCMOSa3V1_PM8 );
          DatalogSetPinList( VOHCMOSa3V2_PM8 );
          DatalogSetPinList( VOHCMOSa3V3_PM8 );
          DatalogSetPinList( VOHCMOSa3V4_PM8 );
          DatalogSetPinList( VOLCMOSa3V1_PM4 );
          DatalogSetPinList( VOLCMOSa3V1_PM9 );
          DatalogSetPinList( VOLCMOSa3V2_PM9 );
          DatalogSetPinList( VOLCMOSa3V3_PM9 );
          DatalogSetPinList( VOLCMOSa3V4_PM9 );
          DatalogSetPinList( VOHLVDSa1VY_PM8 );
          DatalogSetPinList( VOLLVDSa1VYZ_PM8 );
          DatalogSetPinList( VOLLVDSa1VY_PM9 );
          DatalogSetPinList( VOHLVDSa1VYZ_PM9 );
          DatalogSetPinList( VOHLVDSY_PM8 );
          DatalogSetPinList( VOLLVDSY_PM9 );
        end;

      SET_POWER( VTMN1V, 2A,
                 VTMN3V, 2A,
                 VMN1Va, 2A,
                 VMN1Vb, 2A,
                 2mS );

(*
      VOUT FUNCTIONAL TEST
*)

      SetupSelect( VOUT_FUNC_DC, FORMAT_2,
                   TIMING_2 );
      wait( 2mS );

      (* hzv *)
      Datalog('comment=''TDL NAME: hzv  (Voutfunc)''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917344 );
      if RESULT = FAIL then
        TEST_RESULT := FAIL;

      (* tgl *)
      Datalog('comment=''TDL NAME: tgl  (Voutfunc)''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917354 );
      if RESULT = FAIL then
        TEST_RESULT := FAIL;

(*
      TEST PIN-BY-PIN IF FAIL
*)
      if ( TEST_RESULT = FAIL ) or ( Datalog_In_Production ) then
        begin

          TEST_RESULT := PASS;
          Enable( s_Ignore_Func_Fail, s_PMExit );

        end;  (* TEST_RESULT or Datalog_In_Production *)

(*
          TEST VOUT FOR LVDSa PINS
*)

          Datalog('comment=''LVDSa VOUT''',chr(10));

          if V_DatalogEnabled then        { datalogger off }
            datalogresettype(s_pmuv,s_pmui,s_fail_memory);

          Enable( s_Ignore_Func_Fail, s_PMExit );


          SetupSelect( VOUT_PIN_DC, FORMAT_2, TIMING_2 );

          PMExSetDelay( s_PFLAGS, 3 );

           (* tgl *)
          Datalog('comment=''TDL NAME: tgl  PM: 8',
                  '  VECTOR: 1992''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917034 );

          if LVDS_VOD(VOHLVDSa1VY_PM8,
                      DiffArray,
                      R50,
                      VOHLVDSa1V_FORCEV,
                      VOHLVDSa1V_MIN,
                      VOHLVDSa1V_MAX,
                      VOLLVDSa1V_MIN,
                      VOLLVDSa1V_MAX,
                      VODLVDSa1V_MIN,
                      27 ) = FAIL
          then
            TEST_RESULT := FAIL;

          SetupSelect( VOUT_PIN_DC, FORMAT_2, TIMING_2 );

          PMExSetDelay( s_PFLAGS, 4 );

           (* tgl *)
          Datalog('comment=''TDL NAME: tgl  PM: 9',
                  '  VECTOR: 2483''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917034 );

          if LVDS_VOD(VOHLVDSa1VYZ_PM9,
                      DiffArray,
                      R50,
                      VOHLVDSa1V_FORCEV,
                      VOHLVDSa1V_MIN,
                      VOHLVDSa1V_MAX,
                      VOLLVDSa1V_MIN,
                      VOLLVDSa1V_MAX,
                      VODLVDSa1V_MIN,
                      27 ) = FAIL
          then
            TEST_RESULT := FAIL;

      if V_DatalogEnabled then
        datalogsettype(s_pmuv,s_pmui,s_fail_memory);

(*
          TEST VOUT FOR CML PINS
*)

          Datalog('comment=''CML VOUT''',chr(10));

          if V_DatalogEnabled then        { datalogger off }
            datalogresettype(s_pmuv,s_pmui,s_fail_memory);

          Enable( s_Ignore_Func_Fail, s_PMExit );


      if V_DatalogEnabled then
        datalogsettype(s_pmuv,s_pmui,s_fail_memory);

(*
          TEST VOUT FOR CMOSa PINS
*)

          Enable( s_Ignore_Func_Fail, s_PMExit );


          SetupSelect( VOUT_PIN_DC, FORMAT_2, TIMING_2 );

          PMExSetDelay( s_PFLAGS, 3 );

           (* hzv *)
          Datalog('comment=''TDL NAME: hzv  PM: 3',
                  '  VECTOR: 21''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917024 );

          SetupSelect( VOUTCMOSa_PM3_DC, FORMAT_2,
                       TIMING_2 );
          wait( 5mS );

          if PMUConvertPF = FAIL then
            TEST_RESULT := FAIL;

          SetupSelect( VOUT_PIN_DC, FORMAT_2, TIMING_2 );

          PMExSetDelay( s_PFLAGS, 4 );

           (* hzv *)
          Datalog('comment=''TDL NAME: hzv  PM: 4',
                  '  VECTOR: 23''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917024 );

          SetupSelect( VOUTCMOSa_PM4_DC, FORMAT_2,
                       TIMING_2 );
          wait( 5mS );

          if PMUConvertPF = FAIL then
            TEST_RESULT := FAIL;

          SetupSelect( VOUT_PIN_DC, FORMAT_2, TIMING_2 );

          PMExSetDelay( s_PFLAGS, 3 );

           (* tgl *)
          Datalog('comment=''TDL NAME: tgl  PM: 8',
                  '  VECTOR: 1992''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917034 );

          SetupSelect( VOUTCMOSa_PM8_DC, FORMAT_2,
                       TIMING_2 );
          wait( 5mS );

          if PMUConvertPF = FAIL then
            TEST_RESULT := FAIL;

          SetupSelect( VOUT_PIN_DC, FORMAT_2, TIMING_2 );

          PMExSetDelay( s_PFLAGS, 4 );

           (* tgl *)
          Datalog('comment=''TDL NAME: tgl  PM: 9',
                  '  VECTOR: 2483''',chr(10));
          RESULT := PatternExecute( STATUS, F741576B_55917034 );

          SetupSelect( VOUTCMOSa_PM9_DC, FORMAT_2,
                       TIMING_2 );
          wait( 5mS );

          if PMUConvertPF = FAIL then
            TEST_RESULT := FAIL;
(*
          TEST VOUT FOR AOUT PINS
*)

          Enable( s_Ignore_Func_Fail, s_PMExit );


      if ( V_DatalogEnabled ) then
        DatalogSetPinList( ALL_PINS );

      ResultRecord( TEST_RESULT );

      Power_down;

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end;  (* VOUT_TEST *)


procedure LEAKAGE_TEST;
(*
*********************************************************************
****       PERFORM ALL LEAKAGE TESTS:                            ****
*********************************************************************
*)
  var
    TEST_RESULT    : boolean;
    RESULT         : boolean;
    STATUS         : integer;

  begin

    TestOpen( LEAKAGE );

      Datalog('VCC=1.95V',chr(10));
      Datalog('BIDI=I',chr(10));

      if ( V_DatalogEnabled ) then
        DatalogResetPinList( ALL_PINS_PLUS );
      if ( V_DatalogEnabled ) then
        begin
          DatalogSetPinList( IOZCMOSa3V_PM5 );
          DatalogSetPinList( IOZCMOSa3V_PM5 );
          DatalogSetPinList( IOLP1_ON_PM6 );
          DatalogSetPinList( IOLP1_ON_PM7 );
        end;

      SET_POWER( VTMX1V, 2A,
                 VTMX3V, 2A,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                 2mS );

      Enable( s_Ignore_Func_Fail, s_PMExit );
      wait( 2mS );

      TEST_RESULT := PASS;

      SetupSelect( LEAKAGE_PIN_DC, FORMAT_2, TIMING_2 );

      PMExSetDelay( s_PFLAGS, 5 );

      (* hzv *)
      Datalog('comment=''TDL NAME: hzv  PM: 5',
              '  VECTOR: 39''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917024 );

(*
      MEASURE AT 1.95V
      MEASURE AT 3.6V
*)
      SetupSelect( LKGHI_PM5_DC,FORMAT_2,TIMING_2 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

(*
      MEASURE AT 0V
*)
      SetupSelect( LKGLO_PM5_DC,FORMAT_2,TIMING_2 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      SetupSelect( LEAKAGE_PIN_DC, FORMAT_2, TIMING_2 );

      PMExSetDelay( s_PFLAGS, 1 );

      (* tgl *)
      Datalog('comment=''TDL NAME: tgl  PM: 6',
              '  VECTOR: 520''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917034 );
(*
      MEASURE ENABLED PULLUPS AT 0V
*)
      SetupSelect( LKGLOR_ON_PM6_DC,FORMAT_2,TIMING_2 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      SetupSelect( LEAKAGE_PIN_DC, FORMAT_2, TIMING_2 );

      PMExSetDelay( s_PFLAGS, 2 );

      (* tgl *)
      Datalog('comment=''TDL NAME: tgl  PM: 7',
              '  VECTOR: 524''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917034 );
(*
      MEASURE ENABLED PULLUPS AT 0V
*)
      SetupSelect( LKGLOR_ON_PM7_DC,FORMAT_2,TIMING_2 );
      wait( 10mS );

      if PMUConvertPF = FAIL then
        TEST_RESULT := FAIL;

      ResultRecord( TEST_RESULT );

      if ( V_DatalogEnabled ) then
        DatalogSetPinList( ALL_PINS );

      Power_down;

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end;  (* LEAKAGE_TEST *)


procedure AC_PROP_DELAY_TEST;
(*
*********************************************************************
****          AC PROP DELAY TESTS                                ****
*********************************************************************
*)
  var
    TEST_RESULT    : boolean;
    RESULT         : boolean;
    STATUS         : integer;
    ACMEAS         : treal;

  begin

    TestOpen( ACPROP );

      TEST_RESULT := PASS;

(*
      MEASURE AT 1.65V
      MEASURE AT 3.00V
*)
      Datalog('VCC=1.65V',chr(10));


      SET_POWER( VMN1V, 2A,
                 VMN3V, 2A,
                 VMN1Va, 2A,
                 VMN1Vb, 2A,
                 2mS );

      Enable( s_Ignore_Func_Fail );

      SetupSelect( PROP_MIN_DC, FORMAT_1, TIMING_1 );
      wait( 2mS );

(*
****   AC PROP DELAY   IN=TDI   OUT=TPO   TDL PATT NUM=2
*)

      SetupSelect( PROP_MIN_DC, FORMAT_7,
                   TIMING_7 );

      TMUSetPin( s_TMU_Start, TDI, s_POSDN );
      TMUSetPin( s_TMU_Stop, TPO, s_POSDN );
      TMUSetDelay1( s_CYCLES, 4 );
      Enable( s_TMU );

      TMULBCCompVoltage(s_IN,s_OUT);

      Datalog('comment=''TDL NAME: dch''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917264 );
      RESULT := TMURead( STATUS, ACMEAS, 13NS-1nS, 40NS+1nS );

      ACMEAS := TMULBCCompTime(ACMEAS);

      if ((ACMEAS < 13NS+PROPGB) OR (ACMEAS > 40NS-PROPGB)) then
        begin
          RESULT := FAIL;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',13NS+PROPGB,
          ' MAX = ',40NS-PROPGB,' FAIL''',chr(10));
        end
      else
        begin
          RESULT := PASS;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',13NS+PROPGB,
          ' MAX = ',40NS-PROPGB,' ''',chr(10));
        end;

      if RESULT = FAIL then
        TEST_RESULT := FAIL;

      Disable( s_TMU );

      if delayshmoo then {char}
       begin
        DELAY_MIN := 13NS+PROPGB;
        DELAY_MAX := 40NS-PROPGB;
        COMP_DLY1 := s_IN;
        COMP_DLY2 := s_OUT;
        ShmooDelay('PROP_MIN_DC', F741576B_55917264, VMAXD, VMIND, VSTEPD,
                   4, TDI, s_POSDN, TPO, s_POSDN,
                   'delayshmoo');
       end;


(*
****   AC PROP DELAY   IN=TDI   OUT=TPO   TDL PATT NUM=3
*)

      SetupSelect( PROP_MIN_DC, FORMAT_7,
                   TIMING_7 );

      TMUSetPin( s_TMU_Start, TDI, s_NEGDN );
      TMUSetPin( s_TMU_Stop, TPO, s_NEGDN );
      TMUSetDelay1( s_CYCLES, 5 );
      Enable( s_TMU );

      TMULBCCompVoltage(s_IN,s_OUT);

      Datalog('comment=''TDL NAME: dch''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917264 );
      RESULT := TMURead( STATUS, ACMEAS, 12NS-1nS, 36NS+1nS );

      ACMEAS := TMULBCCompTime(ACMEAS);

      if ((ACMEAS < 12NS+PROPGB) OR (ACMEAS > 36NS-PROPGB)) then
        begin
          RESULT := FAIL;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',12NS+PROPGB,
          ' MAX = ',36NS-PROPGB,' FAIL''',chr(10));
        end
      else
        begin
          RESULT := PASS;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',12NS+PROPGB,
          ' MAX = ',36NS-PROPGB,' ''',chr(10));
        end;

      if RESULT = FAIL then
        TEST_RESULT := FAIL;

      Disable( s_TMU );

      if delayshmoo then {char}
       begin
        DELAY_MIN := 12NS+PROPGB;
        DELAY_MAX := 36NS-PROPGB;
        COMP_DLY1 := s_IN;
        COMP_DLY2 := s_OUT;
        ShmooDelay('PROP_MIN_DC', F741576B_55917264, VMAXD, VMIND, VSTEPD,
                   5, TDI, s_NEGDN, TPO, s_NEGDN,
                   'delayshmoo');
       end;


(*
****   AC PROP DELAY   IN=TDI   OUT=TPO   TDL PATT NUM=24
*)

      SetupSelect( PROP_MIN_DC, FORMAT_7,
                   TIMING_7 );

      TMUSetPin( s_TMU_Start, TDI, s_POSDN );
      TMUSetPin( s_TMU_Stop, TPO, s_POSDN );
      TMUSetDelay1( s_CYCLES, 26 );
      Enable( s_TMU );

      TMULBCCompVoltage(s_IN,s_OUT);

      Datalog('comment=''TDL NAME: DCH_ALL''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917274 );
      RESULT := TMURead( STATUS, ACMEAS, 42NS-1nS, 117NS+1nS );

      ACMEAS := TMULBCCompTime(ACMEAS);

      if ((ACMEAS < 42NS+PROPGB) OR (ACMEAS > 117NS-PROPGB)) then
        begin
          RESULT := FAIL;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',42NS+PROPGB,
          ' MAX = ',117NS-PROPGB,' FAIL''',chr(10));
        end
      else
        begin
          RESULT := PASS;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',42NS+PROPGB,
          ' MAX = ',117NS-PROPGB,' ''',chr(10));
        end;

      if RESULT = FAIL then
        TEST_RESULT := FAIL;

      Disable( s_TMU );

      if delayshmoo then {char}
       begin
        DELAY_MIN := 42NS+PROPGB;
        DELAY_MAX := 117NS-PROPGB;
        COMP_DLY1 := s_IN;
        COMP_DLY2 := s_OUT;
        ShmooDelay('PROP_MIN_DC', F741576B_55917274, VMAXD, VMIND, VSTEPD,
                   26, TDI, s_POSDN, TPO, s_POSDN,
                   'delayshmoo');
       end;


(*
****   AC PROP DELAY   IN=TDI   OUT=TPO   TDL PATT NUM=25
*)

      SetupSelect( PROP_MIN_DC, FORMAT_7,
                   TIMING_7 );

      TMUSetPin( s_TMU_Start, TDI, s_NEGDN );
      TMUSetPin( s_TMU_Stop, TPO, s_NEGDN );
      TMUSetDelay1( s_CYCLES, 27 );
      Enable( s_TMU );

      TMULBCCompVoltage(s_IN,s_OUT);

      Datalog('comment=''TDL NAME: DCH_ALL''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917274 );
      RESULT := TMURead( STATUS, ACMEAS, 43NS-1nS, 114NS+1nS );

      ACMEAS := TMULBCCompTime(ACMEAS);

      if ((ACMEAS < 43NS+PROPGB) OR (ACMEAS > 114NS-PROPGB)) then
        begin
          RESULT := FAIL;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',43NS+PROPGB,
          ' MAX = ',114NS-PROPGB,' FAIL''',chr(10));
        end
      else
        begin
          RESULT := PASS;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',43NS+PROPGB,
          ' MAX = ',114NS-PROPGB,' ''',chr(10));
        end;

      if RESULT = FAIL then
        TEST_RESULT := FAIL;

      Disable( s_TMU );

      if delayshmoo then {char}
       begin
        DELAY_MIN := 43NS+PROPGB;
        DELAY_MAX := 114NS-PROPGB;
        COMP_DLY1 := s_IN;
        COMP_DLY2 := s_OUT;
        ShmooDelay('PROP_MIN_DC', F741576B_55917274, VMAXD, VMIND, VSTEPD,
                   27, TDI, s_NEGDN, TPO, s_NEGDN,
                   'delayshmoo');
       end;

(*
      MEASURE AT 1.95V
      MEASURE AT 3.60V
*)
      Datalog('VCC=1.95V',chr(10));


      SET_POWER( VMX1V, 2A,
                 VMX3V, 2A,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                 2mS );

      SetupSelect( PROP_MAX_DC, FORMAT_1, TIMING_1 );
      wait( 2mS );

(*
****   AC PROP DELAY   IN=TDI   OUT=TPO   TDL PATT NUM=2
*)

      SetupSelect( PROP_MAX_DC, FORMAT_7,
                   TIMING_7 );

      TMUSetPin( s_TMU_Start, TDI, s_POSDN );
      TMUSetPin( s_TMU_Stop, TPO, s_POSDN );
      TMUSetDelay1( s_CYCLES, 4 );
      Enable( s_TMU );

      TMULBCCompVoltage(s_IN,s_OUT);

      Datalog('comment=''TDL NAME: dch''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917264 );
      RESULT := TMURead( STATUS, ACMEAS, 13NS-1nS, 40NS+1nS );

      ACMEAS := TMULBCCompTime(ACMEAS);

      if ((ACMEAS < 13NS+PROPGB) OR (ACMEAS > 40NS-PROPGB)) then
        begin
          RESULT := FAIL;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',13NS+PROPGB,
          ' MAX = ',40NS-PROPGB,' FAIL''',chr(10));
        end
      else
        begin
          RESULT := PASS;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',13NS+PROPGB,
          ' MAX = ',40NS-PROPGB,' ''',chr(10));
        end;

      if RESULT = FAIL then
        TEST_RESULT := FAIL;

      Disable( s_TMU );

      if delayshmoo then {char}
       begin
        DELAY_MIN := 13NS+PROPGB;
        DELAY_MAX := 40NS-PROPGB;
        COMP_DLY1 := s_IN;
        COMP_DLY2 := s_OUT;
        ShmooDelay('PROP_MAX_DC', F741576B_55917264, VMAXD, VMIND, VSTEPD,
                   4, TDI, s_POSDN, TPO, s_POSDN,
                   'delayshmoo');
       end;


(*
****   AC PROP DELAY   IN=TDI   OUT=TPO   TDL PATT NUM=3
*)

      SetupSelect( PROP_MAX_DC, FORMAT_7,
                   TIMING_7 );

      TMUSetPin( s_TMU_Start, TDI, s_NEGDN );
      TMUSetPin( s_TMU_Stop, TPO, s_NEGDN );
      TMUSetDelay1( s_CYCLES, 5 );
      Enable( s_TMU );

      TMULBCCompVoltage(s_IN,s_OUT);

      Datalog('comment=''TDL NAME: dch''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917264 );
      RESULT := TMURead( STATUS, ACMEAS, 12NS-1nS, 36NS+1nS );

      ACMEAS := TMULBCCompTime(ACMEAS);

      if ((ACMEAS < 12NS+PROPGB) OR (ACMEAS > 36NS-PROPGB)) then
        begin
          RESULT := FAIL;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',12NS+PROPGB,
          ' MAX = ',36NS-PROPGB,' FAIL''',chr(10));
        end
      else
        begin
          RESULT := PASS;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',12NS+PROPGB,
          ' MAX = ',36NS-PROPGB,' ''',chr(10));
        end;

      if RESULT = FAIL then
        TEST_RESULT := FAIL;

      Disable( s_TMU );

      if delayshmoo then {char}
       begin
        DELAY_MIN := 12NS+PROPGB;
        DELAY_MAX := 36NS-PROPGB;
        COMP_DLY1 := s_IN;
        COMP_DLY2 := s_OUT;
        ShmooDelay('PROP_MAX_DC', F741576B_55917264, VMAXD, VMIND, VSTEPD,
                   5, TDI, s_NEGDN, TPO, s_NEGDN,
                   'delayshmoo');
       end;


(*
****   AC PROP DELAY   IN=TDI   OUT=TPO   TDL PATT NUM=24
*)

      SetupSelect( PROP_MAX_DC, FORMAT_7,
                   TIMING_7 );

      TMUSetPin( s_TMU_Start, TDI, s_POSDN );
      TMUSetPin( s_TMU_Stop, TPO, s_POSDN );
      TMUSetDelay1( s_CYCLES, 26 );
      Enable( s_TMU );

      TMULBCCompVoltage(s_IN,s_OUT);

      Datalog('comment=''TDL NAME: DCH_ALL''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917274 );
      RESULT := TMURead( STATUS, ACMEAS, 42NS-1nS, 117NS+1nS );

      ACMEAS := TMULBCCompTime(ACMEAS);

      if ((ACMEAS < 42NS+PROPGB) OR (ACMEAS > 117NS-PROPGB)) then
        begin
          RESULT := FAIL;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',42NS+PROPGB,
          ' MAX = ',117NS-PROPGB,' FAIL''',chr(10));
        end
      else
        begin
          RESULT := PASS;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',42NS+PROPGB,
          ' MAX = ',117NS-PROPGB,' ''',chr(10));
        end;

      if RESULT = FAIL then
        TEST_RESULT := FAIL;

      Disable( s_TMU );

      if delayshmoo then {char}
       begin
        DELAY_MIN := 42NS+PROPGB;
        DELAY_MAX := 117NS-PROPGB;
        COMP_DLY1 := s_IN;
        COMP_DLY2 := s_OUT;
        ShmooDelay('PROP_MAX_DC', F741576B_55917274, VMAXD, VMIND, VSTEPD,
                   26, TDI, s_POSDN, TPO, s_POSDN,
                   'delayshmoo');
       end;


(*
****   AC PROP DELAY   IN=TDI   OUT=TPO   TDL PATT NUM=25
*)

      SetupSelect( PROP_MAX_DC, FORMAT_7,
                   TIMING_7 );

      TMUSetPin( s_TMU_Start, TDI, s_NEGDN );
      TMUSetPin( s_TMU_Stop, TPO, s_NEGDN );
      TMUSetDelay1( s_CYCLES, 27 );
      Enable( s_TMU );

      TMULBCCompVoltage(s_IN,s_OUT);

      Datalog('comment=''TDL NAME: DCH_ALL''',chr(10));
      RESULT := PatternExecute( STATUS, F741576B_55917274 );
      RESULT := TMURead( STATUS, ACMEAS, 43NS-1nS, 114NS+1nS );

      ACMEAS := TMULBCCompTime(ACMEAS);

      if ((ACMEAS < 43NS+PROPGB) OR (ACMEAS > 114NS-PROPGB)) then
        begin
          RESULT := FAIL;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',43NS+PROPGB,
          ' MAX = ',114NS-PROPGB,' FAIL''',chr(10));
        end
      else
        begin
          RESULT := PASS;
          Datalog('comment=''ACMEAS = ',ACMEAS,' MIN = ',43NS+PROPGB,
          ' MAX = ',114NS-PROPGB,' ''',chr(10));
        end;

      if RESULT = FAIL then
        TEST_RESULT := FAIL;

      Disable( s_TMU );

      if delayshmoo then {char}
       begin
        DELAY_MIN := 43NS+PROPGB;
        DELAY_MAX := 114NS-PROPGB;
        COMP_DLY1 := s_IN;
        COMP_DLY2 := s_OUT;
        ShmooDelay('PROP_MAX_DC', F741576B_55917274, VMAXD, VMIND, VSTEPD,
                   27, TDI, s_NEGDN, TPO, s_NEGDN,
                   'delayshmoo');
       end;


      ResultRecord( TEST_RESULT );

      Power_down;

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
    TestClose;

  end;  (* AC_PROP_DELAY_TEST *)




(*******************************************************************************
****       Check High Current Relays FOR LATCHUP TEST                       ****
*******************************************************************************)
Procedure CheckHighCurrentRelays;
var
  I, Pin_Len, FG_enable   : integer;
  Pin_Arr                 : PinListArrayType;
  drvfmt1, drvfmt2        : array[1..8] of integer;

Function LU_UPMU(zpin : PinList) : option;
  begin
    Case PinGetSlice(zpin) of
    1: LU_UPMU := s_UPMU1A;
    2: LU_UPMU := s_UPMU2A;
    3: LU_UPMU := s_UPMU3A;
    4: LU_UPMU := s_UPMU4A;
    end;
  end;

  Procedure HiCurrentPath(pn : PinList);
  var
    thoption                          : option;
    TH, data, cha, chn, ops, adr, sl  : integer;
    mux                               : boolean;
    error_p, MeasI                    : treal;
  begin
        SetupSelect( OPEN_PINS_DC, FORMAT_1, TIMING_1 );
        ConfigGetTH(mux , thoption);
        if thoption = s_tha then TH := 1;
        if thoption = s_thb then TH := 2;
        data := th*4  + 3 ; { select th, enable dps & upmu }
        cha := PinGetChannel(pn);
        sl := PinGetSlice(pn);
        ops := ((cha - 1 - (128 * (sl - 1))) div 8) + 1;
        adr := (0X40000 * ops) + (0x1000000 * sl);
        chn := cha mod 8;
        if chn = 0 then chn := 8;
        FG_enable := 0X880000 + (sl * 0x1000000) + 0x216;
        Hdwset16(FG_enable, data);
        hdwset16(adr | drvfmt1[chn],0x0);
        hdwset16(adr | drvfmt2[chn],0x0);
        formatset(s_off,s_off,s_off,all_pins);
        SupplySet(LU_UPMU(pn), 4v,60ma);
        DCSetDyn(4v, 0v, 0,1v, 3v,2v,30ma, 30ma, pn);
        { CLOSE F3,UPMU A,K2 and Lon open BS}
        if chn < 5 then
          hdwset16(adr | (0x238 | (2*chn-2) ),0xac0f)
        else
          hdwset16(adr | (0x10238 | (2*chn-10) ),0xac0f);
        enable(LU_UPMU(pn));
        wait(2ms);
        MeasI := SupplyRead(LU_UPMU(pn),S_current);
        error_p :=   MeasI-12ma-30ma;
        If (abs(error_p)) > (4ma) then
        begin
          Datalog('Pin ', pn, ' (Channel ', cha,
                  ') expected 42ma measured ', MeasI, '****FAILED****');
          writeln('Pin ', pn, ' (Channel ', cha,
                  ') expected 42ma measured ', MeasI, '****FAILED****');
          writeln('   Check Lead Card Pogo Pins & Load Board Relay jumper.');
          writeln('   Latchup test will be disabled.');
          RelayCheckDone := false;
        end;
        if chn < 5 then
          hdwset16(adr | (0x238 | (2*chn-2) ),0X0000)
        else
          hdwset16(adr | (0x10238 | (2*chn-10) ),0X0000);
        disable(LU_UPMU(pn));
  end; {HiCurrentPath}

begin
  writeln(chr(7)); writeln(chr(7)); writeln(chr(7));
  writeln('HIGH CURRENT RELAY PATH CHECK...');
  writeln('Ensure that no device is in the test socket, then press RETURN');
  PAUSE;
  writeln('Running...');

  RelayCheckDone := true;             {defaults to latchup test enabled ... ddc}

  drvfmt1[1] := (0x280 );
  drvfmt1[2] := (0x284 );
  drvfmt1[3] := (0x290 );
  drvfmt1[4] := (0x294 );
  drvfmt1[5] := (0x10280 );
  drvfmt1[6] := (0x10284 );
  drvfmt1[7] := (0x10290 );
  drvfmt1[8] := (0x10294 );
  drvfmt2[1] := (0x282 );
  drvfmt2[2] := (0x286 );
  drvfmt2[3] := (0x292 );
  drvfmt2[4] := (0x296 );
  drvfmt2[5] := (0x10282 );
  drvfmt2[6] := (0x10286 );
  drvfmt2[7] := (0x10292 );
  drvfmt2[8] := (0x10296 );

  PinListGet (ALL_PINS, Pin_Arr, Pin_Len);
  For I := 1 TO Pin_Len Do
    HiCurrentPath(Pin_Arr[I]);      {check hi current path at each pin ... ddc}

  writeln('Relay Check Done. Press RETURN to continue.');
  Pause;

end;  {CheckHighCurrentRelays}

function LU_READ_ICCQ( name:string80;
                       supply:Option;
                       level:treal) : treal;
(*
************************************************************************
****           MEASURE ICCQ AT ONE PM STOP FOR LATCHUP TEST         ****
************************************************************************
*)
  var
    ICCQ_READ                   : treal;
    TEST_RESULT                 : boolean;
    STATUS                      : integer;
    ICCQ_value                  : treal;

  begin  (* LU_READ_ICCQ *)

    TEST_RESULT:= true;

    SupplySetLimit( supply, level, ICCQ_RANGE, ICCQ_MAX, ICCQ_MIN );
    wait( 30mS );
    if SupplyReadLimit( supply, s_CURRENT, ICCQ_READ ) = FAIL then
         TEST_RESULT := FAIL;

    SET_POWER( VTMX1V, 2A,
               VTMX3V, 2A,
               VMX1Va, 2A,
               VMX1Vb, 2A,
               2mS );
    pin_latch_result := TEST_RESULT;
    LU_READ_ICCQ := ICCQ_READ;
  end;   (* LU_READ_ICCQ *)

(*******************************************************************************
****                             LATCH UP TEST                              ****
*******************************************************************************)
procedure LATCH_UP_TEST; {  250ma }
 var
   RESULT, TEST_RESULT : boolean;
   STATUS, I, Pin_Len  : integer;
   Pin_Arr : PinListArrayType;
   PRE_TRIGGER_ICC_RESULT, POST_TRIGGER_ICC_RESULT, POST_TRIGGER_ICC5_RESULT,
   max_latchup : treal;
   PRE_unload_outs, PRE_TRIGGER_VCC_RESULT, POST_TRIGGER_VCC_RESULT : treal;
   define_vcc : treal;
   UPMU_Name  : OPTION;
   check_ICCQ : treal;
   pre_fail   : boolean;
   pre_fail_V : boolean;


(*******************************************************************************
****              STEP VOLTAGE FOR LATCHUP TEST                             ****
*******************************************************************************)
procedure STEP_VOLTAGE;
 var
   vstep, vtarget, vstop: TREAL;
   ps1V_nom_v, ps1V_nom_i: TREAL;
   ps3V_nom_v, ps3V_nom_i: TREAL;
   i_nom : TREAL;

 begin (*STEP_VOLTAGE*)

   ps1V_nom_v := SupplyRead(PS_VDD, S_VOLTAGE);
   ps1V_nom_i := SupplyRead(PS_VDD, S_CURRENT);
   ps3V_nom_v := SupplyRead(PS_VDDSHV, S_VOLTAGE);
   ps3V_nom_i := SupplyRead(PS_VDDSHV, S_CURRENT);
   i_nom := 300mA;

   (* Step PS_VDD *)
   vstop := VTMX1V * 2.0;
   vtarget := ps1V_nom_v;
   vstep := (vstop - vtarget) / 20;

   while (vtarget < vstop) do
    begin
      vtarget := vtarget + vstep;
      SET_POWER( vtarget, i_nom,
                 ps3V_nom_v, ps3V_nom_i,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                 2mS );
      DCSet(S_DRVUP, vtarget, LU_INS);
    end;

   wait(100mS);

   while (vtarget > ps1V_nom_v) do
    begin
      vtarget := vtarget - vstep;
      SET_POWER( vtarget, i_nom,
                 ps3V_nom_v, ps3V_nom_i,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                 2mS );
      DCSet(S_DRVUP, vtarget, LU_INS);
    end;

   wait(100mS);

   (* Step PS_VDDSHV *)
   vstop := VTMX3V * 2.0;
   vtarget := ps3V_nom_v;
   vstep := (vstop - vtarget) / 20;

   while (vtarget < vstop) do
    begin
      vtarget := vtarget + vstep;
      SET_POWER( ps1V_nom_v, ps1V_nom_i,
                 vtarget, i_nom,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                 2mS );
    end;

  wait(100mS);

  while (vtarget > ps1V_nom_v) do
    begin
      vtarget := vtarget - vstep;
      SET_POWER( ps1V_nom_v, ps1V_nom_i,
                 vtarget, i_nom,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                 2mS );
   end;

end; (* STEP_VOLTAGE *)

(*******************************************************************************
****                          READ LATCHUP ICC                              ****
*******************************************************************************)
procedure READ_LATCHUP_ICC;
 var
   PS_VDD_Current, PS_VDD_Voltage,
   PS_VDDSHV_Current, PS_VDDSHV_Voltage,
   UPMU_Current, UPMU_Voltage : TREAL;

 begin (*READ_LATCHUP_ICC*)
   pre_fail := false;
   pos_fail := false;
   neg_fail := false;


   SupplySetLimit(PS_VDD, VTMX1V, 1A, max_latchup, -1A);
   SupplySetLimit(PS_VDDSHV, VTMX3V, 1A, max_latchup, -1A);

   (*  ICCQ MEASURE STATEMENT IN TDL *)
   ICCQ_MIN := ICCQ10_MIN;
   ICCQ_MAX := ICCQ10_MAX;
   ICCQ_RANGE := ICCQ10_RANGE;

   Enable( s_IGNORE_FUNC_FAIL, s_PMExit );
   PMExSetDelay( s_PFLAGS, 1 );  (* PM 10 *)

   (* Scanchk *)
   Datalog('comment=''TDL NAME: Scanchk  PM: 10',
           '  VECTOR: 44''',chr(10));

   SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );
   SET_POWER( VTMX1V, 2A,
              VTMX3V, 2A,
                     VMX1Va, 2A,
                     VMX1Vb, 2A,
              2mS );
   RESULT := PatternExecute( STATUS, F741576B_55917014 );

   SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM10 );
   DCSetOpen( ICCQ_OPEN_PM10 );
   DCSetForce( VTMX1V, ICCQ_ZPINS_PM10 );
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

   DATALOG ('PRE_PULSE_ICCQ:',chr(10));
   wait(100ms);

   check_ICCQ:= LU_READ_ICCQ( 'ICCQ1V_PM10', PS_VDD, VTMX1V);
   If pin_latch_result then
     check_ICCQ:= LU_READ_ICCQ( 'ICCQ3V_PM10', PS_VDDSHV, VTMX3V);

   DATALOG ('1V Supply Iccq = ',SupplyRead(PS_VDD, s_Current),chr(10));
   DATALOG ('3V Supply Iccq = ',SupplyRead(PS_VDDSHV, s_Current),chr(10));
   DATALOG (chr(10));

   if not pin_latch_result then
     pre_fail := true;

   if not pre_fail then
   begin
      SupplySet(UPMU_Name, 0V, 1ma); wait(5mS);      {reset Trigger V clamp}
      Datalog(Pin_Arr[I], chr(10));         {output pinname to PDL}
      SET_POWER( VTMX1V, 2A,
                 VTMX3V, 2A,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                 2mS );
      DCSetUPMU(UPMU_Name,Pin_Arr[I]);      {connect Vsupply to desired pin}

      SupplySet(UPMU_Name, VTMX1V*2.0, 250mA);  {apply positive stress}
      Enable (UPMU_Name, s_Ignore_Func_Fail, s_PMExit); {enable Vcc}

      wait (5ms);
      UPMU_Current   := SupplyRead(UPMU_Name, S_CURRENT);
      PS_VDD_Current := SupplyRead(PS_VDD, S_CURRENT);
      PS_VDDSHV_Current := SupplyRead(PS_VDDSHV, S_CURRENT);
      UPMU_Voltage   := SupplyRead(UPMU_Name, S_voltage);
      PS_VDD_Voltage := SupplyRead(PS_VDD, S_voltage);
      PS_VDDSHV_Voltage := SupplyRead(PS_VDDSHV, S_voltage);

      wait (100ms);
      Disable(UPMU_Name);
      SupplySet(UPMU_Name, 0v, 1ma);
      SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );
      SET_POWER( VTMX1V, 2A,
                 VTMX3V, 2A,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                 2mS );
      RESULT := PatternExecute( STATUS, F741576B_55917014 );
      SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM10 );
      DCSetOpen( ICCQ_OPEN_PM10 );
      DCSetForce( VTMX1V, ICCQ_ZPINS_PM10 );
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

      wait (100ms);

      check_ICCQ:= LU_READ_ICCQ( 'ICCQ1V_PM10', PS_VDD, VTMX1V);
      If pin_latch_result then
        check_ICCQ:= LU_READ_ICCQ( 'ICCQ3V_PM10', PS_VDDSHV, VTMX3V);

      DATALOG ('POST_PULSE_ICC',chr(10));
      DATALOG ('1V Supply Iccq = ',SupplyRead(PS_VDD, s_Current),chr(10));
      DATALOG ('3V Supply Iccq = ',SupplyRead(PS_VDDSHV, s_Current),chr(10));

      if not pin_latch_result then
      begin
         Datalog(chr(10));
         pos_fail := true;
      end;

      if not pos_fail then
      begin
         SupplySet(UPMU_Name, 0V, 1ma); wait(5mS);      {reset Trigger V clamp}
         Datalog(Pin_Arr[I], chr(10));         {output pinname to PDL}
         SET_POWER( VTMX1V, 2A,
                    VTMX3V, 2A,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                    2mS );
         DCSetUPMU (UPMU_Name,Pin_Arr[I]);      {connect Vsupply to desired pin}
         Enable(UPMU_Name);
         SupplySet(UPMU_Name, -VTMX1V, 250ma);

         wait (5ms);
         UPMU_Current   := SupplyRead(UPMU_Name, S_CURRENT);
         PS_VDD_Current := SupplyRead(PS_VDD, S_CURRENT);
         PS_VDDSHV_Current := SupplyRead(PS_VDDSHV, S_CURRENT);
         UPMU_Voltage   := SupplyRead(UPMU_Name, S_voltage);
         PS_VDD_Voltage := SupplyRead(PS_VDD, S_voltage);
         PS_VDDSHV_Voltage := SupplyRead(PS_VDDSHV, S_voltage);

         wait (100ms); {apply negative stress}
         Disable(UPMU_Name);
         SupplySet(UPMU_Name, 0v, 1ma);
         SetupSelect( ICCQ_DC, FORMAT_10, TIMING_10 );
         SET_POWER( VTMX1V, 2A,
                    VTMX3V, 2A,
                 VMX1Va, 2A,
                 VMX1Vb, 2A,
                    2mS );
         RESULT := PatternExecute( STATUS, F741576B_55917014 );
         SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM10 );
         DCSetOpen( ICCQ_OPEN_PM10 );
         DCSetForce( VTMX1V, ICCQ_ZPINS_PM10 );

{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

         wait (100ms);

         check_ICCQ:= LU_READ_ICCQ( 'ICCQ1V_PM10', PS_VDD, VTMX1V);
         If pin_latch_result then
           check_ICCQ:= LU_READ_ICCQ( 'ICCQ3V_PM10', PS_VDDSHV, VTMX3V);

         DATALOG ('POST_PULSE_ICC');
         DATALOG ('1V Supply Iccq = ',SupplyRead(PS_VDD, s_Current),chr(10));
         DATALOG ('3V Supply Iccq = ',SupplyRead(PS_VDDSHV, s_Current),chr(10));

         if not pin_latch_result then
         begin
            Datalog(chr(10));
            neg_fail := true;
         end;
      end;  { if not pos_fail then }
    end;    { if not pre_fail then }

   Sequence_down( 0.0V, 2A,
                  0.0V, 2A,
                  0.0V, 2A,
                  0.0V, 2A,
                  500uS );
   Disable (UPMU_Name); wait (1ms);    {disable latched pin}
 end; (*READ_LATCHUP_ICC*)

(**************************BEGIN ACTUAL LATCH UP TESTS*************************)

begin  {LATCH_UP_TEST}
  if LU_Enable then begin
    if not RelayCheckDone then CheckHighCurrentRelays;
    if RelayCheckDone then begin

       pin_latch_result := PASS;
       TestOpen( LATCHUP_TEST );
       Test_Limit := QC;
       max_latchup := 250ma;



       (******CURRENT STRESS******)

       Datalog('CURRENT STRESS LATCHUP TESTS', chr(10));
       PinListGet (ALL_PINS, Pin_Arr, Pin_Len);
       I_Fail := false;
       For I := 1 TO Pin_Len Do
        begin
          SupplySetComp(s_DPS1A, 10uF);    {comp. cap for DPS settling time}

          Case PinGetSlice(Pin_Arr[I]) of
           1 : UPMU_Name := s_UPMU1A;
           2 : UPMU_Name := s_UPMU2A;
           3 : UPMU_Name := s_UPMU3A;
           4 : UPMU_Name := s_UPMU4A;
           end;

          writeln('Now testing pin ', Pin_Arr[I]);
          READ_LATCHUP_ICC;            {goto actual LATCHUP procedure}

          {read vars}
          writeln('pre_fail = ', pre_fail);
          writeln('neg_fail - ', neg_fail);
          writeln('pos_fail = ', pos_fail);
          writeln('pin_latch_result = ', pin_latch_result);

          if neg_fail or pos_fail then I_Fail := true;
        end; {enCurrent Stress Latchup test}

                             (******VOLTAGE STRESS******)
       V_Fail := false;
       Datalog('2xVcc(max) Supply Overvoltage Stress',chr(10));
       SupplySetComp(s_DPS1A, 10uF);    {comp. cap for DPS settling time}
       SET_POWER( VTMX1V, 2A,
                  VTMX3V, 2A,
                    VMX1Va, 2A,
                    VMX1Vb, 2A,
                  2mS );
       Enable(s_IGNORE_FUNC_FAIL, s_PMExit);
       PMExSetDelay( s_PFLAGS, 1 );  (* PM 10 *)
       RESULT := PatternExecute( STATUS, F741576B_55917014 );
       SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM10 );
       DCSetOpen( ICCQ_OPEN_PM10 );
       DCSetForce( VTMX1V, ICCQ_ZPINS_PM10 );
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

       check_ICCQ:= LU_READ_ICCQ( 'ICCQ1V_PM10', PS_VDD, VTMX1V);
       If pin_latch_result then
         check_ICCQ:= LU_READ_ICCQ( 'ICCQ3V_PM10', PS_VDDSHV, VTMX3V);

       DATALOG ('PRE_PULSE_ICC ');
       if not pin_latch_result then
         pre_fail_V := true;

       if not pre_fail_V then
       begin
          writeln('Now performing 2xVcc(max) supply stress test');

          STEP_VOLTAGE;

          SetupSelect( GOI_DC, FORMAT_10, TIMING_10 );
          RESULT := PatternExecute( STATUS, F741576B_55917014 );
          SetupSelect( ICCQ_PM_BLEED, FORMAT_10, TIMING_10 );
          DCSetPMU( 6V, 0V, 0V,
                    -50uA, 50uA, ICCQ_OPEN_PM10 );
          wait( 2mS );

          DCSetOpen( ICCQ_OPEN_PM10 );
          DCSetForce( VTMX1V, ICCQ_ZPINS_PM10 );
{ rev04g Added the following }
           DCSetForce( 0.0V, THSI_OPEN ); 
           DCSetForce( 0.0V, THSI_PWRDN ); 
           DCSetForce( 0.0V, THSI_CKGE1 ); 
           DCSetForce( 0.0V, THSI_CKGEN ); 

          check_ICCQ:= LU_READ_ICCQ( 'ICCQ1V_PM10', PS_VDD, VTMX1V);
          If pin_latch_result then
            check_ICCQ:= LU_READ_ICCQ( 'ICCQ3V_PM10', PS_VDDSHV, VTMX3V);

          DATALOG ('POST_PULSE_ICC ');
             if not pin_latch_result then
                post_fail_V := true;
       end;

       if post_fail_V then V_Fail := true;

       {read vars}
       writeln('neg_fail - ', neg_fail);
       writeln('pos_fail = ', pos_fail);

       if I_Fail or V_Fail then
          begin
             ResultRecord(Fail);
             Power_down;
          end;

{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
       TestClose;
     end;   {if RelayCheckDone}
   end      {if LU_Enable is TRUE }
   else
     begin  { LU_Enable is FALSE }
       TestOpen( LATCHUP_TEST );
         ResultRecord(PASS);
{TA}  if((TEST_ALL)AND(V_DeviceStatus = {}PASS))then begin
{TA}    FAILED_TMP := OpenTestGetName(FAILED_TEST);
{TA}    TestClose;
{TA}    TestGetStatus(FAILED_TEST,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT = s_FAIL) then begin
{TA}      FAILED_FIRST := TRUE;
{TA}    end;
{TA}  end else
       TestClose;
     end;
end; {LATCH_UP_TEST}

{ rev00p  ********  DIE_ID ROUTINE DESIGNED FOR ALL TESTERS ****** }

{ The following DIE_ID test is implemented to work on all testers.  The   
  V_ScanOutReverseBitOrder command is not being recognized.  The array was
  filled up in reverse to duplicate this action }

procedure ReadDieID;
(*
*********************************************************************
****                    DieID                                    ****
*********************************************************************
*)

VAR
    status                            : INTEGER;
    CR                                : CHAR;
    wafer_x, wafer_y, wafer_nb        : INTEGER;
    lot_nb, fab, test_code, checksum  : INTEGER;
    mem_repairable, row_repaired      : INTEGER;
    Bit1, bit2                        : Integer;
    col_repaired, StartCycle, bit     : INTEGER;
    calc_checksum                     : INTEGER;
    bit_arr                           : ARRAY[0..63] OF INTEGER;
    TEST_RESULT                       : BOOLEAN;
    fab_char                          : String[2]; {revtw}
    lot_nb_string,
    wafer_nb_string,
    waferid                           : String[30]; {revtw}
BEGIN
    

    TestOpen ( DIE_ID );

    CR               := chr(10);  {carriage return}
    V_ScanOutReverseBitOrder := FALSE; {true = read out MSB first}
 
          SET_POWER( VNM1V, 2A,
                     VNM3V, 2A,
                     VNM1Va, 2A,
                     VNM1Vb, 2A,
                     2mS );


          SetupSelect( SLOW_NOM_DC, FORMAT_8,
                       TIMING_8 );


          wait( 2mS );



    (* Need to enable parametric exit flag in pattern set which marks
     * the beginning of the Die ID location within the pattern set. *)

    Enable(S_IGNORE_FUNC_FAIL, S_PMEXIT);
    PMExSetDelay(S_PFLAGS, 1);         {1st flag in pattern set}
 
    (* For this technique, the pattern set is executed with a PMEX at each
     * bit within the Die ID. The ScanOutDataBits routine is simply used to
     * get the 0/1 bit value of the output pin. This technique avoids
     * changing driver levels which is sometimes a problem on V100 systems. *)

    V_ScanOutStrobeAfterClk := FALSE;  {don't clk device before read}



    StartCycle := 20;                   {1st cycle of Die ID in patten set}
           {...for StartCycle, use whatever cycle number is needed...}
    wafer_x := 0;                      {initialize result variables}
    wafer_y := 0;
    wafer_nb := 0;
    lot_nb := 0;
    fab := 0;
    test_code := 0;
    mem_repairable := 0;
    row_repaired := 0;
    col_repaired := 0;
    checksum := 0;
  


    FOR bit1 := 0 TO 63 DO              {64 total bits in ID}
    
    BEGIN
       (* Insert a PMEX at next cycle. Must breakpoint after ToolPMEXRestore
        * to digitize in Wavetool or will get an error. *)
      ToolPatternSetOption(F741576B_55917284, S_CYCLES,S_PMEXIT,StartCycle+bit1)
;
      Discard(PatternExecute(status, F741576B_55917284)); 
      (* Scan next 0/1 data bit and add it to total bit array. *)
      bit_arr[63-bit1] := ScanOutDataBits(TDO,TCK, 1);
      ToolPMEXRestore(F741576B_55917284);  
    END;



    FOR bit := 0 TO 63 DO              {64 total bits in ID}
    BEGIN
       (* Insert a PMEX at next cycle. Must breakpoint after ToolPMEXRestore
        * to digitize in Wavetool or will get an error. *)
       ToolPatternSetOption(F741576B_55917284, S_CYCLES,S_PMEXIT,StartCycle+bit)
;
       Discard(PatternExecute(status, F741576B_55917284)); 
       (* Scan next 0/1 data bit and add it to total bit array. *)
       bit_arr[63-bit] := ScanOutDataBits(TDO, TCK, 1);
       


      {Above (63-bit) replaces (bit) so array will be in proper order   }

     
 
   CASE bit OF
{8 bits}     0..7: wafer_x := wafer_x     | (bit_arr[bit] << bit);
{8 bits}    8..15: wafer_y := wafer_y     | (bit_arr[bit] << bit - 8);
{6 bits}   16..21: wafer_nb := wafer_nb   | (bit_arr[bit] << bit - 16);
{24 bits}  22..45: lot_nb := lot_nb       | (bit_arr[bit] << bit - 22);
{3 bits}   46..48: fab := fab             | (bit_arr[bit] << bit - 46);
{4 bits}   49..52: test_code := test_code | (bit_arr[bit] << bit - 49);
{1 bit}        53: mem_repairable := bit_arr[bit];
{1 bit}        54: row_repaired   := bit_arr[bit];
{1 bit}        55: col_repaired   := bit_arr[bit];
{8 bits}   56..63: checksum := checksum   | (bit_arr[bit] << bit - 56);
    END; {case}   
    


    ToolPMEXRestore(F741576B_55917284);       {remove PMEX from this cycle}
    ENd;
    
{ added revtw }

#ifdef  $SITE_TESTWARE_FLAG then 
#if     $SITE_TESTWARE_FLAG then 
    case fab of 
      0         : fab_char:='--'; (* open  *) 
      1         : fab_char:='AK'; (* ANAM  *) 
      2         : fab_char:='--'; (* open  *) 
      3         : fab_char:='D-'; (* KFAB  *) 
      4         : fab_char:='E-'; (* DMOS4 *) 
      5         : fab_char:='C-'; (* DMOS5 *) 
      6         : fab_char:='--'; (* open  *) 
      7         : fab_char:='H-'; (* MIHO6 *) 
      otherwise   fab_char:='--'; 
    end; (* case *) 

    WriteString(lot_nb_string,lot_nb:1);
 
    while (len(lot_nb_string) < 7) do  
      lot_nb_string := concat('0',lot_nb_string); 

    if (wafer_nb <= 9) then 
      WriteString(wafer_nb_string, '0', wafer_nb:1) 
    else 
      WriteString(wafer_nb_string, wafer_nb:2); 

    WriteString(waferid,fab_char,lot_nb_string,'-',wafer_nb_string); 

    { The following does not datalog test_code, mem_repairable,
      row_repaired, col_repaired or checksum, but they could be 
      added into the three unused "places" below }

    TWPDLDataLogDieID( lot_nb_string, wafer_nb, wafer_x, wafer_y, 
                       ' ',' ',' ', fab_char, waferid, TWMinimumData); 
#endif 
#endif

{ end add revtw }



    Disable(S_IGNORE_FUNC_FAIL, S_PMEXIT);

{
       writeln('wafer_x         :',wafer_x, chr(10) );
       writeln('wafer_y         :',wafer_y, chr(10) );
       writeln('wafer_nb        :',wafer_nb,chr(10) );
       writeln('lot_nb          :',lot_nb,  chr(10) );;
       writeln('fab             :',fab,     chr(10) );
       writeln('test_code       :',test_code, chr(10) );
       writeln('mem_repairable  :',mem_repairable, chr(10) );
       writeln('row_repaired    :',row_repaired,chr(10) );
       writeln('col_repaired    :',col_repaired,chr(10) );
       writeln('checksum        :',checksum,    chr(10) );

}
    IF (V_DatalogEnabled) THEN
    BEGIN
       Datalog('wafer_x         :',wafer_x,        chr(10) );
       Datalog('wafer_y         :',wafer_y,        chr(10) );
       Datalog('wafer_nb        :',wafer_nb,       chr(10) );
       Datalog('lot_nb          :',lot_nb,         chr(10) );;
       Datalog('fab             :',fab,            chr(10) );
       Datalog('test_code       :',test_code,      chr(10) );
       Datalog('mem_repairable  :',mem_repairable, chr(10) );
       Datalog('row_repaired    :',row_repaired,   chr(10) );
       Datalog('col_repaired    :',col_repaired,   chr(10) );
       Datalog('checksum        :',checksum,       chr(10) );
    END;

    (* Now calculate the checksum based on the 1st 56 bits and compare with
     * the saved checksum and the end of the Die ID (Hamming Code). *)
    bit_arr[56] := 0^bit_arr[21]^bit_arr[22]^bit_arr[23]^bit_arr[24]
                    ^bit_arr[25]^bit_arr[26]^bit_arr[27]^bit_arr[28]
                    ^bit_arr[29]^bit_arr[30]^bit_arr[31]^bit_arr[32]
                    ^bit_arr[33]^bit_arr[34]^bit_arr[35]^bit_arr[36]
                    ^bit_arr[37]^bit_arr[38]^bit_arr[39]^bit_arr[40]
                    ^bit_arr[41]^bit_arr[42]^bit_arr[43]^bit_arr[44]
                    ^bit_arr[45]^bit_arr[46]^bit_arr[47]^bit_arr[48]
                    ^bit_arr[49]^bit_arr[50]^bit_arr[51]^bit_arr[52]
                    ^bit_arr[53]^bit_arr[54]^bit_arr[55];
    bit_arr[57] := 0^bit_arr[ 6]^bit_arr[ 7]^bit_arr[ 8]^bit_arr[ 9]
                    ^bit_arr[10]^bit_arr[11]^bit_arr[12]^bit_arr[13]
                    ^bit_arr[14]^bit_arr[15]^bit_arr[16]^bit_arr[17]
                    ^bit_arr[18]^bit_arr[19]^bit_arr[20]^bit_arr[36]
                    ^bit_arr[37]^bit_arr[38]^bit_arr[39]^bit_arr[40]
                    ^bit_arr[41]^bit_arr[42]^bit_arr[43]^bit_arr[44]
                    ^bit_arr[45]^bit_arr[46]^bit_arr[47]^bit_arr[48]
                    ^bit_arr[49]^bit_arr[50]^bit_arr[51]^bit_arr[52]
                    ^bit_arr[53]^bit_arr[54]^bit_arr[55];
    bit_arr[58] := 0^bit_arr[ 1]^bit_arr[ 2]^bit_arr[ 3]^bit_arr[ 4]
                    ^bit_arr[ 5]^bit_arr[11]^bit_arr[12]^bit_arr[13]
                    ^bit_arr[14]^bit_arr[15]^bit_arr[16]^bit_arr[17]
                    ^bit_arr[18]^bit_arr[19]^bit_arr[20]^bit_arr[26]
                    ^bit_arr[27]^bit_arr[28]^bit_arr[29]^bit_arr[30]
                    ^bit_arr[31]^bit_arr[32]^bit_arr[33]^bit_arr[34]
                    ^bit_arr[35]^bit_arr[46]^bit_arr[47]^bit_arr[48]
                    ^bit_arr[49]^bit_arr[50]^bit_arr[51]^bit_arr[52]
                    ^bit_arr[53]^bit_arr[54]^bit_arr[55];
    bit_arr[59] := 0^bit_arr[ 0]^bit_arr[ 2]^bit_arr[ 3]^bit_arr[ 4]
                    ^bit_arr[ 5]^bit_arr[ 7]^bit_arr[ 8]^bit_arr[ 9]
                    ^bit_arr[10]^bit_arr[15]^bit_arr[16]^bit_arr[17]
                    ^bit_arr[18]^bit_arr[19]^bit_arr[20]^bit_arr[22]
                    ^bit_arr[23]^bit_arr[24]^bit_arr[25]^bit_arr[30]
                    ^bit_arr[31]^bit_arr[32]^bit_arr[33]^bit_arr[34]
                    ^bit_arr[35]^bit_arr[40]^bit_arr[41]^bit_arr[42]
                    ^bit_arr[43]^bit_arr[44]^bit_arr[45]^bit_arr[52]
                    ^bit_arr[53]^bit_arr[54]^bit_arr[55];
    bit_arr[60] := 0^bit_arr[ 0]^bit_arr[ 1]^bit_arr[ 3]^bit_arr[ 4]
                    ^bit_arr[ 5]^bit_arr[ 6]^bit_arr[ 8]^bit_arr[ 9]
                    ^bit_arr[10]^bit_arr[12]^bit_arr[13]^bit_arr[14]
                    ^bit_arr[18]^bit_arr[19]^bit_arr[20]^bit_arr[21]
                    ^bit_arr[23]^bit_arr[24]^bit_arr[25]^bit_arr[27]
                    ^bit_arr[28]^bit_arr[29]^bit_arr[33]^bit_arr[34]
                    ^bit_arr[35]^bit_arr[37]^bit_arr[38]^bit_arr[39]
                    ^bit_arr[43]^bit_arr[44]^bit_arr[45]^bit_arr[49]
                    ^bit_arr[50]^bit_arr[51]^bit_arr[55];
    bit_arr[61] := 1^bit_arr[ 0]^bit_arr[ 1]^bit_arr[ 2]^bit_arr[ 4]
                    ^bit_arr[ 5]^bit_arr[ 6]^bit_arr[ 7]^bit_arr[ 9]
                    ^bit_arr[10]^bit_arr[11]^bit_arr[13]^bit_arr[14]
                    ^bit_arr[16]^bit_arr[17]^bit_arr[20]^bit_arr[21]
                    ^bit_arr[22]^bit_arr[24]^bit_arr[25]^bit_arr[26]
                    ^bit_arr[28]^bit_arr[29]^bit_arr[31]^bit_arr[32]
                    ^bit_arr[35]^bit_arr[36]^bit_arr[38]^bit_arr[39]
                    ^bit_arr[41]^bit_arr[42]^bit_arr[45]^bit_arr[47]
                    ^bit_arr[48]^bit_arr[51]^bit_arr[54];
    bit_arr[62] := 1^bit_arr[ 0]^bit_arr[ 1]^bit_arr[ 2]^bit_arr[ 3]
                    ^bit_arr[ 5]^bit_arr[ 6]^bit_arr[ 7]^bit_arr[ 8]
                    ^bit_arr[10]^bit_arr[11]^bit_arr[12]^bit_arr[14]
                    ^bit_arr[15]^bit_arr[17]^bit_arr[19]^bit_arr[21]
                    ^bit_arr[22]^bit_arr[23]^bit_arr[25]^bit_arr[26]
                    ^bit_arr[27]^bit_arr[29]^bit_arr[30]^bit_arr[32]
                    ^bit_arr[34]^bit_arr[36]^bit_arr[37]^bit_arr[39]
                    ^bit_arr[40]^bit_arr[42]^bit_arr[44]^bit_arr[46]
                    ^bit_arr[48]^bit_arr[50]^bit_arr[53];
    bit_arr[63] := 1^bit_arr[ 0]^bit_arr[ 1]^bit_arr[ 2]^bit_arr[ 3]
                    ^bit_arr[ 4]^bit_arr[ 6]^bit_arr[ 7]^bit_arr[ 8]
                    ^bit_arr[ 9]^bit_arr[11]^bit_arr[12]^bit_arr[13]
                    ^bit_arr[15]^bit_arr[16]^bit_arr[18]^bit_arr[21]
                    ^bit_arr[22]^bit_arr[23]^bit_arr[24]^bit_arr[26]
                    ^bit_arr[27]^bit_arr[28]^bit_arr[30]^bit_arr[31]
                    ^bit_arr[33]^bit_arr[36]^bit_arr[37]^bit_arr[38]
                    ^bit_arr[40]^bit_arr[41]^bit_arr[43]^bit_arr[46]
                    ^bit_arr[47]^bit_arr[49]^bit_arr[52];
   calc_checksum := 0;           {binary re-construction}
   FOR bit := 56 TO 63 DO
      calc_checksum := calc_checksum | (bit_arr[bit] << bit - 56);

   (* Compare calculated checksum with value read from die. *)
   IF (checksum <> calc_checksum) THEN
      TEST_RESULT := FALSE         {return a checksum failure}
   ELSE
      TEST_RESULT := TRUE;         {return a checksum match}  

   ResultRecord (TEST_RESULT);  

TestClose; (*DIE_ID*)

END;

{ ****** END DIE_ID TEST ******** }


procedure TEST_SEQUENCE; Export;
(*
*********************************************************************
****          TEST SEQUENCE                                      ****
*********************************************************************
*)
  var
    TT,TOTAL  :  treal;

  begin
{TA} TEST_ALL := V_DatalogEnabled AND
{TA}          ( TEST_ALL_WIN OR TEST_ALL_OPEN 
{TA}            OR TEST_ALL_SHRT OR TEST_ALL_P2P 
{TA}            OR TEST_ALL_JL );
{rev10b} OLD_ICCQ_RESULT := TRUE;
{rev10b} DELTA_ICCQ_RESULT := TRUE;
{rev10b} ICCQ_MIN_READ := 1A;
{rev10b} ICCQ_MAX_READ := -1A;

    Datalog_In_Production := V_DatalogEnabled;          (* default *)
    SupplyShortsResult := FAIL; {revtw}

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TWPDLDataLogNewUnit(0); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}



    if (Test_Timer = FALSE) then
      begin

        LOG_PINS_AND_BINS;
        DIODE_TEST;
        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           SUPPLY_SHORTS_TEST;

{TA}  if(TEST_ALL AND FAILED_FIRST) then begin
{TA}    TestGetStatus(OPENS,FAILED_TMP,FAIL_OPT);
{TA}    if((FAIL_OPT<>s_PASS) AND TEST_ALL_OPEN) then begin
{TA}      TEST_ALL := FALSE;
{TA}    end;
{TA}    TestGetStatus(SHORTS,FAILED_TMP,FAIL_OPT);
{TA}    if((FAIL_OPT<>s_PASS) AND TEST_ALL_SHRT) then begin
{TA}      TEST_ALL := FALSE;
{TA}    end;
{TA}    TestGetStatus(PIN2PIN,FAILED_TMP,FAIL_OPT);
{TA}    if((FAIL_OPT<>s_PASS) AND TEST_ALL_P2P) then begin
{TA}      TEST_ALL := FALSE;
{TA}    end;
{TA}    TestGetStatus(JUNCTION_LEAKAGE,FAILED_TMP,FAIL_OPT);
{TA}    if((FAIL_OPT<>s_PASS) AND TEST_ALL_JL) then
{TA}      TEST_ALL := FALSE;
{TA}    TestGetStatus(SUPPLY_SHORTS,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT<>s_PASS) then
{TA}      TEST_ALL := FALSE;
{TA}  end;

        if (V_DeviceStatus = PASS) then {revvmin}
           VMIN_SHIFT_PRE_TEST;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           VOUT_TEST;
 
        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           SLOW_FUNCTIONAL_MIN_TEST;
{ rev03c
        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           GOI_TEST;
}
        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
{rev_ICCQ}{
           ICCQ_TEST;
{rev_ICCQ}}
{rev_ICCQ}   begin
{rev_ICCQ}    if(ICCQ_DATA OR ICCQ_SHMOO) then
{rev_ICCQ}      begin
{rev_ICCQ}        if( ICCQ_SHMOO ) then
{rev_ICCQ}          begin
{rev_ICCQ}            DatalogResetType( s_DPSI );
{rev_ICCQ}            ICCQ_COMMENT := 'ICCQ-Shmoo';
{rev_ICCQ}            TRUE_DATA := FALSE;
{rev_ICCQ}            VTTMP1V := ICCQ_SHMOO_MAX * 1V;
{rev_ICCQ}            while( VTTMP1V >= ICCQ_SHMOO_MIN*1V ) do
{rev_ICCQ}              begin
{rev_ICCQ}                ICCQ_DATA_TEST;
{rev_ICCQ}                writeln(' @ ',VTTMP1V, '-',V_DeviceStatus);
{rev_ICCQ}                VTTMP1V := VTTMP1V - ICCQ_SHMOO_STEP*1V;
{rev_ICCQ}              end;
{rev_ICCQ}            DatalogSetType( s_DPSI );
{rev_ICCQ}          end;                 { ICCQ_SHMOO }
{rev_ICCQ}        if( ICCQ_DATA ) then
{rev_ICCQ}          begin
{rev_ICCQ}            DatalogResetType( s_DPSI );
{rev_ICCQ}            ICCQ_COMMENT := 'ICCQ-Data Gathering';
{rev_ICCQ}            TRUE_DATA := TRUE;
{rev_ICCQ}            VTTMP1V := VTMX1V;
{rev_ICCQ}            ICCQ_DATA_TEST;
{rev_ICCQ}            VTTMP1V := VTHOT1V;
{rev_ICCQ}            ICCQ_DATA_TEST;
{rev_ICCQ}            VTTMP1V := VTHOT1V_GB;
{rev_ICCQ}            ICCQ_DATA_TEST;
{rev_ICCQ}            DatalogSetType( s_DPSI );
{rev_ICCQ}          end;                 { ICCQ_DATA }
{rev_ICCQ}      end                      { ICCQ_DATA OR ICCQ_SHMOO }
{rev_ICCQ}    else                       { PRODUCTION TEST }
{rev_ICCQ}      IF( (Test_Limit = FT_HOT) OR (Test_Limit = HOT_CHUCK) )
{rev_ICCQ}      then ICCQ_HOT_TEST
{rev_ICCQ}      else ICCQ_TEST;
{rev_ICCQ}   end;                        { ICCQ_TEST call }


        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           SLOW_FUNCTIONAL_MAX_TEST;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           VIH_VIL_TEST;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           FAST_FUNCTIONAL_TEST;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           VMIN_SHIFT_POST_TEST; {revvmin}

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           IIH_IIL_TEST;
 
        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           LEAKAGE_TEST;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
           AC_PROP_DELAY_TEST;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
            LATCH_UP_TEST;
{ rev00p }
        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}
             OR(SupplyShortsResult = PASS){revtw}) then
            ReadDieID;


      end
    else
      begin

        TimerStart;
        LOG_PINS_AND_BINS;
        TT := TimerRead;
        TOTAL := TT;
        writeln;
        writeln( 'Elapsed time for LOG_PINS = ',TT );

        TimerStart;
        DIODE_TEST;
        TT := TimerRead;
        TOTAL := TT;
        writeln;
        writeln( 'Elapsed time for DIODE_TEST = ',TT );

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           SUPPLY_SHORTS_TEST;
{TA}  if(TEST_ALL AND FAILED_FIRST) then begin
{TA}    TestGetStatus(OPENS,FAILED_TMP,FAIL_OPT);
{TA}    if((FAIL_OPT<>s_PASS) AND TEST_ALL_OPEN) then begin
{TA}      TEST_ALL := FALSE;
{TA}    end;
{TA}    TestGetStatus(SHORTS,FAILED_TMP,FAIL_OPT);
{TA}    if((FAIL_OPT<>s_PASS) AND TEST_ALL_SHRT) then begin
{TA}      TEST_ALL := FALSE;
{TA}    end;
{TA}    TestGetStatus(PIN2PIN,FAILED_TMP,FAIL_OPT);
{TA}    if((FAIL_OPT<>s_PASS) AND TEST_ALL_P2P) then begin
{TA}      TEST_ALL := FALSE;
{TA}    end;
{TA}    TestGetStatus(JUNCTION_LEAKAGE,FAILED_TMP,FAIL_OPT);
{TA}    if((FAIL_OPT<>s_PASS) AND TEST_ALL_JL) then
{TA}      TEST_ALL := FALSE;
{TA}    TestGetStatus(SUPPLY_SHORTS,FAILED_TMP,FAIL_OPT);
{TA}    if(FAIL_OPT<>s_PASS) then
{TA}      TEST_ALL := FALSE;
{TA}  end;

           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for SUPPLY_SHORTS_TEST = ',TT );
          end;

        if (V_DeviceStatus = PASS) then {revvmin}
          begin
           TimerStart;
           VMIN_SHIFT_PRE_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for VMIN_SHIFT_PRE_TEST = ',TT );
          end;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           SLOW_FUNCTIONAL_MIN_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for SLOW_FUNCTIONAL_MIN_TEST = ',TT );
          end;
{ rev03c
        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           GOI_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for GOI_TEST = ',TT );
          end;
}
        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
{rev_ICCQ}{
           ICCQ_TEST;
{rev_ICCQ}}
{rev_ICCQ}   begin
{rev_ICCQ}    if(ICCQ_DATA OR ICCQ_SHMOO) then
{rev_ICCQ}      begin
{rev_ICCQ}        if( ICCQ_SHMOO ) then
{rev_ICCQ}          begin
{rev_ICCQ}            DatalogResetType( s_DPSI );
{rev_ICCQ}            ICCQ_COMMENT := 'ICCQ-Shmoo';
{rev_ICCQ}            TRUE_DATA := FALSE;
{rev_ICCQ}            VTTMP1V := ICCQ_SHMOO_MAX * 1V;
{rev_ICCQ}            while( VTTMP1V >= ICCQ_SHMOO_MIN*1V ) do
{rev_ICCQ}              begin
{rev_ICCQ}                ICCQ_DATA_TEST;
{rev_ICCQ}                writeln(' @ ',VTTMP1V, '-',V_DeviceStatus);
{rev_ICCQ}                VTTMP1V := VTTMP1V - ICCQ_SHMOO_STEP*1V;
{rev_ICCQ}              end;
{rev_ICCQ}            DatalogSetType( s_DPSI );
{rev_ICCQ}          end;                 { ICCQ_SHMOO }
{rev_ICCQ}        if( ICCQ_DATA ) then
{rev_ICCQ}          begin
{rev_ICCQ}            DatalogResetType( s_DPSI );
{rev_ICCQ}            ICCQ_COMMENT := 'ICCQ-Data Gathering';
{rev_ICCQ}            TRUE_DATA := TRUE;
{rev_ICCQ}            VTTMP1V := VTMX1V;
{rev_ICCQ}            ICCQ_DATA_TEST;
{rev_ICCQ}            VTTMP1V := VTHOT1V;
{rev_ICCQ}            ICCQ_DATA_TEST;
{rev_ICCQ}            VTTMP1V := VTHOT1V_GB;
{rev_ICCQ}            ICCQ_DATA_TEST;
{rev_ICCQ}            DatalogSetType( s_DPSI );
{rev_ICCQ}          end;                 { ICCQ_DATA }
{rev_ICCQ}      end                      { ICCQ_DATA OR ICCQ_SHMOO }
{rev_ICCQ}    else                       { PRODUCTION TEST }
{rev_ICCQ}      IF( (Test_Limit = FT_HOT) OR (Test_Limit = HOT_CHUCK) )
{rev_ICCQ}      then ICCQ_HOT_TEST
{rev_ICCQ}      else ICCQ_TEST;
{rev_ICCQ}   end;                        { ICCQ_TEST call }

           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for ICCQ_TEST = ',TT );
          end;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           SLOW_FUNCTIONAL_MAX_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for SLOW_FUNCTIONAL_MAX_TEST = ',TT );
          end;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           VIH_VIL_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for VIH_VIL_TEST = ',TT );
          end;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           FAST_FUNCTIONAL_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for FAST_FUNCTIONAL_TEST = ',TT );
          end;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           VMIN_SHIFT_POST_TEST; {revvmin}
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for VMIN_SHIFT_POST_TEST = ',TT );
          end;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           IIH_IIL_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for IIH_IIL_TEST = ',TT );
          end;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           VOUT_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for VOUT_TEST = ',TT );
          end;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           LEAKAGE_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for LEAKAGE_TEST = ',TT );
          end;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           AC_PROP_DELAY_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for AC_PROP_DELAY_TEST = ',TT );
          end;

        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}) then
          begin
           TimerStart;
           LATCH_UP_TEST;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for LATCH_UP_TEST = ',TT );
          end;

{rev00p}
        if ((V_DeviceStatus = PASS)OR(TEST_ALL){TA}
             OR(SupplyShortsResult = PASS){revtw}) then
          begin
           TimerStart;
           ReadDieID;
           TT := TimerRead;
           TOTAL := TOTAL + TT;
           writeln;
           writeln( 'Elapsed time for DIE_ID = ',TT );
          end;

        writeln;
        writeln;
        writeln( 'Total Elapsed time = ',TOTAL );

      end

{TA}; FAILED_FIRST := false;

{rev10b}TestOpen(OLD_ICCQ);
{rev10b}  Datalog('comment=''PF OLD ICCQ LIMITS ',ICCQ_MAX,'''',chr(10));
{rev10b}  ResultRecord(OLD_ICCQ_RESULT);
{rev10b}TestClose;
{rev10b}TestOpen(DELTA_ICCQ);
{rev10b}  Datalog('comment=''MIN ICCQ = ',ICCQ_MIN_READ,'''',chr(10));
{rev10b}  Datalog('comment=''MAX ICCQ = ',ICCQ_MAX_READ,'''',chr(10));
{rev10b}  Datalog('comment=''   DELTA = ',ICCQ_MAX_READ
{rev10b}           -ICCQ_MIN_READ,'''',chr(10));
{rev10b}  Datalog('comment=''DELTA MAX= ',DELTA_ICCQ_MAX,'''',chr(10));
{rev10b}  Datalog('comment=''DELTA PF = ',DELTA_ICCQ_RESULT,'''',chr(10));
{rev10b}  ResultRecord(DELTA_ICCQ_RESULT);
{rev10b}TestClose;
  end;  (* TEST_SEQUENCE *)


(*
*********************************************************************
****                LOAD PATTERNS                                ****
*********************************************************************
*)

Procedure Load_Patterns;           Export;
  begin
    PatternLoadGlobal( 'f741576b_55917g04.vgo' );
writeln( 'Loading Patterns 1 thru 5 of 46' );{rev01a}
    PatternLoad( F741576B_55917014, 'f741576b_55917014.vvo' );
    PatternLoad( F741576B_55917024, 'f741576b_55917024.vvo' );
    PatternLoad( F741576B_55917034, 'f741576b_55917034.vvo' );
    PatternLoad( F741576B_55917044, 'f741576b_55917044.vvo' );
{   PatternLoad( F741576B_55917054, 'f741576b_55917054.vvo' ); rev03a }
writeln( 'Loading Patterns 6 thru 10 of 46' );{rev01a}
    PatternLoad( F741576B_55917064, 'f741576b_55917064.vvo' );
    PatternLoad( F741576B_55917074, 'f741576b_55917074.vvo' );
    PatternLoad( F741576B_55917084, 'f741576b_55917084.vvo' );
    PatternLoad( F741576B_55917094, 'f741576b_55917094.vvo' );
    PatternLoad( F741576B_55917104, 'f741576b_55917104.vvo' );
writeln( 'Loading Patterns 11 thru 15 of 46' );{rev01a}
    PatternLoad( F741576B_55917114, 'f741576b_55917114.vvo' );
    PatternLoad( F741576B_55917124, 'f741576b_55917124.vvo' );
    PatternLoad( F741576B_55917134, 'f741576b_55917134.vvo' );
    PatternLoad( F741576B_55917144, 'f741576b_55917144.vvo' );
    PatternLoad( F741576B_55917154, 'f741576b_55917154.vvo' );
writeln( 'Loading Patterns 16 thru 20 of 46' );{rev01a}
    PatternLoad( F741576B_55917164, 'f741576b_55917164.vvo' );
    PatternLoad( F741576B_55917174, 'f741576b_55917174.vvo' );
    PatternLoad( F741576B_55917184, 'f741576b_55917184.vvo' );
    PatternLoad( F741576B_55917194, 'f741576b_55917194.vvo' );
    PatternLoad( F741576B_55917204, 'f741576b_55917204.vvo' );
writeln( 'Loading Patterns 21 thru 25 of 46' );{rev01a}
    PatternLoad( F741576B_55917214, 'f741576b_55917214.vvo' );
    PatternLoad( F741576B_55917224, 'f741576b_55917224.vvo' );
    PatternLoad( F741576B_55917234, 'f741576b_55917234.vvo' );
    PatternLoad( F741576B_55917244, 'f741576b_55917244.vvo' );
    PatternLoad( F741576B_55917254, 'f741576b_55917254.vvo' );
    PatternLoad( F741576B_55917264, 'f741576b_55917264.vvo' );
writeln( 'Loading Patterns 26 thru 30 of 46' );{rev01a}
    PatternLoad( F741576B_55917274, 'f741576b_55917274.vvo' );
    PatternLoad( F741576B_55917284, 'f741576b_55917284.vvo' );
    PatternLoad( F741576B_55917294, 'f741576b_55917294.vvo' );
    PatternLoad( F741576B_55917304, 'f741576b_55917304.vvo' );
    PatternLoad( F741576B_55917314, 'f741576b_55917314.vvo' );
writeln( 'Loading Patterns 31 thru 35 of 46' );{rev01a}
    PatternLoad( F741576B_55917324, 'f741576b_55917324.vvo' );
    PatternLoad( F741576B_55917334, 'f741576b_55917334.vvo' );
    PatternLoad( F741576B_55917344, 'f741576b_55917344.vvo' );
    PatternLoad( F741576B_55917354, 'f741576b_55917354.vvo' );
{VPLUS_FIX_TIMING}{
    PatternLoad( F741576B_55917364, 'f741576b_55917364.vvo' );
{VPLUS_FIX_TIMING}}
writeln( 'Loading Patterns 36 thru 40 of 46' );{rev01a}
{VPLUS_FIX_TIMING}PatternLoad( F741576B_55917364, 'f741576b_55917364_1.vvo' );
{VPLUS_FIX_TIMING}{
    PatternLoad( F741576B_55917374, 'f741576b_55917374.vvo' );
{VPLUS_FIX_TIMING}}
{VPLUS_FIX_TIMING}PatternLoad( F741576B_55917374, 'f741576b_55917374_1.vvo' );
{VPLUS_FIX_TIMING}{
    PatternLoad( F741576B_55917384, 'f741576b_55917384.vvo' );
{VPLUS_FIX_TIMING}}
{VPLUS_FIX_TIMING}PatternLoad( F741576B_55917384, 'f741576b_55917384_1.vvo' );
    PatternLoad( F741576B_55917394, 'f741576b_55917394.vvo' );
{VPLUS_FIX_TIMING}{
    PatternLoad( F741576B_55917404, 'f741576b_55917404.vvo' );
{VPLUS_FIX_TIMING}}
{VPLUS_FIX_TIMING}PatternLoad( F741576B_55917404, 'f741576b_55917404_1.vvo' );

writeln( 'Loading Patterns 41 thru 46 of 46' );{rev01a}
    (* Removed pattern sets F741576B_55917424 - F741576B_55917594 (duplicates
     * of pattern set F741576B_55917414).   rev05b. *)
    PatternLoad( F741576B_55917414, 'f741576b_55917414_1.vvo' );

    PatternLoad( F741576B_55917604, 'f741576b_55917604.vvo' );
    PatternLoad( F741576B_55917614, 'f741576b_55917614.vvo' );
    PatternLoad( F741576B_55917624, 'f741576b_55917624.vvo' );
    PatternLoad( F741576B_55917634, 'f741576b_55917634.vvo' );
    PatternLoad( F741576B_55917644, 'f741576b_55917644.vvo' );
{rev01c Begin only execute at probe }

  CASE TIDeviceType OF
    PB_2 :
      BEGIN

    PatternLoad( F741576B_55917654, 'f741576b_55917654.vvo' );
writeln( 'Loading Patterns 66 thru 70 of 71' );{rev01a}
    PatternLoad( F741576B_55917664, 'f741576b_55917664.vvo' );
    PatternLoad( F741576B_55917674, 'f741576b_55917674.vvo' );
    PatternLoad( F741576B_55917684, 'f741576b_55917684.vvo' );
    PatternLoad( F741576B_55917694, 'f741576b_55917694.vvo' );
    PatternLoad( F741576B_55917704, 'f741576b_55917704.vvo' );

      END;
  END; {case of TIDeviceType}

{rev01c End only execute at probe }

    PatternLoad( F741576B_55917714, 'f741576b_55917714.vvo' );
  end;


(*
*********************************************************************
****          MAIN PROGRAM                                       ****
*********************************************************************
*)

  begin
{TA} writeln('--- <*> = buttons in WindowVariables window');
{TA} writeln('<Test All> = TRUE to get ALL tests in datalog');
{TA} writeln(' - tests all tests if device passes SUPPLY_SHORTS');
{TA} writeln('<All Unless Open> = TRUE to get ALL tests in datalog');
{TA} writeln(' - tests all tests if device passes SUPPLY_SHORTS and OPENS');
{TA} writeln('<All Unless Shorts> = TRUE to get ALL tests in datalog');
{TA} writeln(' - tests all tests if device passes SUPPLY_SHORTS and SHORTS');
{TA} writeln('<All Unless Jnct Lkg> = TRUE to get ALL tests in datalog');
{TA} writeln(' - tests all tests if device passes SUPPLY_SHORTS and ',
{TA}         'JUNCTION_LEAKAGE');
{TA} writeln('<All Unless Pin2Pin> = TRUE to get ALL tests in datalog');
{TA} writeln(' - tests all tests if device passes SUPPLY_SHORTS and PIN2PIN');
{TA} writeln('--- <*> = ALL the above bin devices/die correctly...');
{TA} TEST_ALL_WIN  := TRUE;
{TA} TEST_ALL_OPEN := TRUE;
{TA} TEST_ALL_SHRT := TRUE;
{TA} TEST_ALL_P2P  := FALSE;
{TA} TEST_ALL_JL   := FALSE;
{rev_ICCQ} ICCQ_SHMOO_MAX  := 2.0;
{rev_ICCQ} ICCQ_SHMOO_MIN  := 1.0;
{rev_ICCQ} ICCQ_SHMOO_STEP  := 0.1;


    Reload_the_Setups := FALSE;

    OnError( Error_Trap );

    INITIALIZE_LOT_INFORMATION;
    INITIALIZE_TEST_LIMIT_ARRAYS;

    {Initialize default Values}
    trange  := 2; { margins }
    vrange  := 500; { margins }

{VPLUS_FIX_TIMING} MODESETDEFAULT(S_AUTO_MODE);

    Operator_Setup;

#ifdef $SITE_TESTWARE_FLAG then             {revtw}
#if    $SITE_TESTWARE_FLAG then             {revtw}
    TWPDLInitialize( 1, TWMinimumData ); {revtw}
#endif                                      {revtw}
#endif                                      {revtw}

    PinListGet(ALL_PINS, PIN_ARRAY, PIN_COUNT);
    PinListGet(ALL_PINS_PLUS, APP_ARRAY, APP_COUNT);
    ResultSetDefault( PASS );
    RelayCheckDone := false;
    InitHighSpeedClkAdjustments;  {initialize clk adjustments - rev05a}
    Test;

  end.
 
